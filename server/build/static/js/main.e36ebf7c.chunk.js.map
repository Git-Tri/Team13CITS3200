{"version":3,"sources":["components/login-form.js","components/register-form.js","components/page-header.js","components/home.js","domain.js","constants.js","components/tables/data-table.js","components/tables/unstructured-data-table.js","data-binding.js","delay-engine.js","components/listpages/list-page.js","components/listpages/unstructured-data-list.js","components/tables/structured-data-table.js","components/listpages/structured-data-list.js","components/tables/match-list-table.js","components/listpages/match-list.js","components/data-pair.js","components/visualisation.js","components/view-match.js","edit-utils.js","components/tables/edit-list-table.js","components/choose-data-modal.js","components/listpages/edit-list.js","components/edit-form.js","components/add-edit.js","components/import-structured-data.js","components/choose-match-modal.js","components/add-unstructured-data.js","components/export.js","components/tables/user-table.js","components/listpages/user-admin.js","components/structured-data-page.js","components/user-page.js","app.js","site.js","service-worker.js","index.js"],"names":["LoginForm","props","state","username","password","loggedIn","incorrectLogin","missingDetails","isError","loginToken","this","e","name","value","setState","clearError","validInputs","fetch","method","body","JSON","stringify","headers","then","res","ok","history","push","status","catch","err","message","Message","visible","negative","Header","className","Grid","textAlign","style","minHeight","verticalAlign","Column","maxWidth","as","Form","size","Segment","Input","fluid","icon","iconPosition","placeholder","onChange","handleChange","bind","type","Button","primary","onClick","handleButton","href","renderError","Component","withRouter","RegisterForm","repeat_password","regkey","passwordMismatch","inputDetailRulebreak","failedRegistration","text","lengthCheck","length","differentCharacter","i","inputCheck","PageHeader","Error","isBackable","undefined","isbackable","URLSearchParams","location","search","get","isLoggedIn","isloggedin","padding","container","columns","Row","handleSidebarClick","sidebarVisible","header","goBack","disabled","handleLogoutClick","Home","id","height","UnstructuredData","matchid","title","author","url","published","extracted","data","StructuredData","date","home","away","competitionID","competitionName","Match","Edit","editID","structuredDataID","unstructuredDataID","isCorpus","settings","replace","replaceWith","order","Competition","countryName","countryId","ImportRequest","begin","end","compId","SearchRequest","field","User","hash","admin","token","apikey","MAX_TITLE_SIZE","STRUCTURED_DATA_FIELDS","EDIT_TYPES","EDIT_NAMES","DataTable","selectFunc","onSelect","activeRow","page","totalPages","Number","isInteger","Container","onPageChange","paging","Array","isArray","items","Object","keys","every","k","genRows","genHeader","isValidData","isSelectable","renderPageButtons","Table","striped","selectable","Body","UnstructuredDataRow","dateString","getDate","getMonth","getFullYear","substring","active","isActive","Cell","UnstructuredDataTable","map","item","index","key","HeaderCell","isIdValid","isPublishedValid","Date","isAuthorValid","isTitleValid","bindStructuredData","rawStructuredData","parseInt","bindUnstructureData","rawUnstructuredData","bindEdit","rawEdit","bindMatch","rawMatch","bindCompetition","rawComp","bindUser","rawUser","DelayEngine","delay","callback","start","lastInput","setTimeout","ListPage","target","isLoaded","NaN","searches","delayEngine","error","errorInfo","stop","sendRequest","values","route","genBody","window","json","result","pages","loadData","color","edit","Loader","renderLoaded","renderLoading","loadIfNotAlready","Dimmer","headerText","renderSearch","executeRender","UnstructuredDataList","changeHandler","handleSearchChange","split","unstructuredData","d","class","handlePageChange","routeToUnstructuredData","match","league","StructuredDataRow","versus","StructuredDataTable","isMatchIdValid","isDateValid","isHomeValid","isAwayValid","isCompIdValid","isCompNameValid","StructuredDataList","isCompLoaded","structuredData","names","charAt","toUpperCase","slice","r","c","genDropDownItems","isAfter","parsedValue","loadComps","Group","inline","label","handleDateSearchChange","Select","clearable","options","routeToData","MatchRow","MatchListTable","MatchList","matches","routeToMatch","DataPair","Visualisation","awayTeam","match_awayteam_name","homeTeam","match_hometeam_name","cards","sideFault","away_fault","player","home_fault","event","card","txt","substr","toLowerCase","time","goalscorer","away_scorer","home_scorer","score","subAway","substitutions","substitution","subHome","events","concat","sort","e1","e2","isPositive","isNegative","isWarning","positive","warning","ViewMatch","isUnstructuredLoaded","loadUnstructuredData","getDay","basic","src","loadUnstructuredIfNotAlready","genSummary","summariseStructuredData","summariseUnstructuredData","EditRow","orderFunc","onOrderChange","FormatType","replaces","withs","SummaryBuilder","EditListTable","onOrderChangeFunc","isUp","edits","targets","isEditID","isTargetValid","isTypeValid","isSettingsValid","isReplaceValid","isReplaceWithValid","ChooseDataModal","lastSelectedId","lastSelectedIsStructued","isModalOpen","selectedItem","isNoChooseError","handleClose","isStructured","Tab","menu","pointing","panes","menuItem","render","Pane","handleSelection","attached","hidden","handleChooseButtonClick","Modal","closeIcon","onOpen","trigger","handleOpen","onClose","open","Content","Description","EditList","replaceTypes","isCorpusSearchChecked","corpusChoices","searchTarget","unstructuredDataSearches","structuredDataSearches","editSearches","summary","chosenData","editList","u","allData","forEach","find","handleTextSearchChange","genDataSummaryText","handleChosenData","handleOrderChange","routeToEdit","EditForm","queryId","isNew","isMissing","hasData","isSaveSuccessful","fieldTypes","isSaving","isSaveAttempted","isValid","content","isValidObj","isFieldValid","isSettingValid","validateText","t","includes","f","updateSettingsOnTypeChange","isEditValid","genIsErrorSettings","handleSettingChange","fields","multiple","selection","renderSeqReplaceFieldWarningMessage","loading","genIsError","Checkbox","checked","handleChecked","renderReplaceFieldOptions","renderSeqReplaceFieldOptions","widths","saveData","deleteData","renderErrorWithData","renderMissing","renderErrorWithoutData","renderHasData","renderSaveSuccessful","ImportStructuredData","isImportSuccessful","request","dateParts","console","log","renderSuccessMessage","renderErrorMessage","renderDatesNeededMessage","ChooseMatchModal","AddUnstructuredData","preventDefault","submit","pub","ext","toSend","valid","XMLHttpRequest","idtext","exists","setRequestHeader","send","onload","statusText","hasMessage","goodMessage","onerror","delete","load","getTime","chosenMatch","handleChosenMatch","Export","isExported","export","exportedType","b","blob","URL","createObjectURL","link","document","createElement","setAttribute","appendChild","click","parentNode","removeChild","UserRow","code","isAdmin","a","UserTable","isUsernameValid","isAdminValid","isRegkeyValid","isAPIKeyValid","UserAdmin","uname","users","theMessage","str","endpoint","action","adminCheck","addUser","StructuredDataPage","closeOnDimmerClick","floated","UserPage","user","App","Sidebar","Pushable","Menu","animation","inverted","onHide","handleSidebarHide","vertical","width","Item","Pusher","exact","path","component","Site","cookie","RegExp","getCookie","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e36ebf7c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Header, Button, Grid, Form, Message, Segment } from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass LoginForm extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tusername: \"\",\r\n\t\t\tpassword: \"\",\r\n\t\t\tloggedIn: false,\r\n\t\t\tincorrectLogin: false,\r\n\t\t\tmissingDetails: false,\r\n\t\t\tisError: false,\r\n\t\t\tloginToken: {}\r\n\t\t}\r\n\t}\r\n\r\n\tvalidInputs(){\r\n\t\treturn this.state.username !== \"\" && this.state.password !== \"\";\r\n\t}\r\n\r\n\thandleChange(e, { name, value }){\r\n\t\tthis.setState({ [name]: value });\r\n\t}\r\n\r\n\tclearError(){\r\n\t\tif(this.state.missingDetails){\r\n\t\t\tthis.setState({missingDetails: false});\r\n\t\t}\r\n\t}\r\n\r\n\thandleButton(){\r\n\r\n\t\tthis.clearError();\r\n\r\n\t\tif(!this.validInputs()){\r\n\t\t\tthis.setState({missingDetails: true});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\t\tfetch(\"/login\",\r\n\t\t\t{method: \"POST\",\r\n\t\t\tbody: JSON.stringify({username: this.state.username, password: this.state.password}),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t\t})\r\n\t\t.then(res => {\r\n\t\t\t\tif(res.ok) {\r\n\t\t\t\t\tthis.props.history.push(\"/\");\r\n\t\t\t\t}\r\n\t\t\t\telse if(res.status === 400){\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({incorrectLogin: true })\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.setState({isError: true})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tswitch(err.message) {\r\n\t\t\t\t\tcase \"400\":\r\n\t\t\t\t\t\tif(! this.state.incorrectLogin)\r\n\t\t\t\t\t\t\tthis.setState({incorrectLogin: true })\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\tdefault: \r\n\t\t\t\t\t\tif(! this.state.isError)\r\n\t\t\t\t\t\t\tthis.setState({isError: true})\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\t\r\n\t\t})\r\n\t}\r\n\r\n\trenderError(){\r\n\t\tif(this.state.isError){\r\n\t\t\treturn (\r\n\t\t\t\t<Message visible negative>\r\n\t\t\t\t\t<Message.Header>An error has occured</Message.Header>\r\n\t\t\t\t\t<p>Failed to get data from the server.</p>\r\n\t\t\t\t</Message>\r\n\t\t\t)\r\n\t\t} else if(this.state.incorrectLogin){\r\n\t\t\treturn (\r\n\t\t\t\t<Message visible negative>\r\n\t\t\t\t\t<Message.Header>Incorrect Login</Message.Header>\r\n\t\t\t\t\t<p>Please recheck your login info.</p>\r\n\t\t\t\t</Message>\r\n\t\t\t)\r\n\t\t} else if(this.state.missingDetails){\r\n\t\t\treturn (\r\n\t\t\t\t<Message visible negative>\r\n\t\t\t\t\t<Message.Header>Username or password missing</Message.Header>\r\n\t\t\t\t\t<p>Please recheck your login info.</p>\r\n\t\t\t\t</Message>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn <div></div>\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (<div className=\"page\">\r\n\t\t\t<Grid textAlign='center' style={{minHeight:\"100vh\"}} verticalAlign='middle'>\r\n\t\t\t\t<Grid.Column style={{ maxWidth: 450 }}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Header as='h2' textAlign='center'>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t\t<Form size='large'>\r\n\t\t\t\t\t\t<Segment>\r\n\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\tfluid icon='user'\r\n\t\t\t\t\t\t\ticonPosition='left'\r\n\t\t\t\t\t\t\tplaceholder='Username'\r\n\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\tvalue={this.state.username}\r\n\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\tfluid icon='lock'\r\n\t\t\t\t\t\t\ticonPosition='left'\r\n\t\t\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button primary onClick={this.handleButton.bind(this)}>Login</Button>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t<Message>\r\n\t\t\t\t\t\t<a href='../register-form'>Sign Up</a>\r\n\t\t\t\t\t</Message>\r\n\t\t\t\t\t{this.renderError()}\t\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t\t\r\n\t\t</div>)\r\n\t}\r\n}\r\n\r\nexport default withRouter(LoginForm);\r\n","import React, { Component } from 'react';\r\nimport { Header, Button, Grid, Form, Message, Segment } from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass RegisterForm extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tusername: \"\",\r\n\t\t\tpassword: \"\",\r\n\t\t\trepeat_password: \"\",\r\n\t\t\tregkey: \"\",\r\n\t\t\tmissingDetails: false,\r\n\t\t\tpasswordMismatch: false,\r\n\t\t\tinputDetailRulebreak: false,\r\n\t\t\tfailedRegistration: false,\r\n\t\t\tisError: false,\r\n\t\t}\r\n\t}\r\n\r\n\tvalidInputs(){\r\n\t\treturn this.state.username !== \"\" && this.state.password !== \"\" && this.state.repeat_password !== \"\" && this.state.regkey !== \"\";\r\n\t}\r\n\r\n\tinputCheck(text){\r\n\t\tvar lengthCheck = (text.length > 7);\r\n\r\n\t\tvar differentCharacter = false;\r\n\t\tfor (var i = 1; i < text.length; i++) {\r\n\t\t\tdifferentCharacter = (text[i] != text[i-1] || differentCharacter);\r\n\t\t}\r\n\t\treturn lengthCheck && differentCharacter;\r\n\t}\r\n\r\n\thandleChange(e, { name, value }){\r\n\t\tthis.setState({ [name]: value });\r\n\t}\r\n\r\n\tclearError(){\r\n\t\tthis.setState({\r\n\t\t\tmissingDetails: false,\r\n\t\t\tpasswordMismatch: false,\r\n\t\t\tinputDetailRulebreak: false\r\n\t\t})\r\n\t}\r\n\r\n\thandleButton(){\r\n\r\n\t\tthis.clearError();\r\n\r\n\t\tif(!this.validInputs()){\r\n\t\t\tthis.setState({missingDetails: true});\r\n\t\t\treturn;\r\n\t\t} else if(this.state.password !== this.state.repeat_password){\r\n\t\t\tthis.setState({passwordMismatch: true});\r\n\t\t\r\n\t\t\treturn;\r\n\t\t} else if(!this.inputCheck(this.state.password)){\r\n\t\t\tthis.setState({inputDetailRulebreak: true});\r\n\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\t\tfetch(\"/register\",\r\n\t\t\t{method: \"POST\",\r\n\t\t\tbody: JSON.stringify({username: this.state.username, password: this.state.password, regkey: this.state.regkey}),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t\t})\r\n\t\t.then(res => {\r\n\t\t\t\tif(res.ok) {\r\n\t\t\t\t\tthis.props.history.push('/');\r\n\t\t\t\t}\r\n\t\t\t\telse if(res.status == 400){\r\n\t\t\t\t\tthis.setState({failedRegistration: true})\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.setState({isError: true})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tswitch(err.message) {\r\n\t\t\t\t\tcase \"400\":\r\n\t\t\t\t\t\tif(! this.state.failedRegistration)\r\n\t\t\t\t\t\t\tthis.setState({failedRegistration: true })\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\tdefault: \r\n\t\t\t\t\t\tif(! this.state.isError)\r\n\t\t\t\t\t\t\tthis.setState({isError: true})\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\t\r\n\t\t})\r\n\t}\r\n\r\n\trenderError(){\r\n\t\tif(this.state.isError){\r\n\t\t\treturn (\r\n\t\t\t\t<Message visible negative>\r\n\t\t\t\t\t<Message.Header>An error has occured</Message.Header>\r\n\t\t\t\t\t<p>Failed to get data from the server.</p>\r\n\t\t\t\t</Message>\r\n\t\t\t)\r\n\t\t} else if(this.state.failedRegistration){\r\n\t\t\treturn (\r\n\t\t\t\t<Message visible negative>\r\n\t\t\t\t\t<Message.Header>Registration unsuccessful</Message.Header>\r\n\t\t\t\t\t<p>Please check your registration key and try again.</p>\r\n\t\t\t\t</Message>\r\n\t\t\t)\r\n\t\t} else if(this.state.missingDetails){\r\n\t\t\treturn (\r\n\t\t\t\t<Message visible negative>\r\n\t\t\t\t\t<Message.Header>Username, password or registration missing</Message.Header>\r\n\t\t\t\t\t<p>Please recheck your info.</p>\r\n\t\t\t\t</Message>\r\n\t\t\t)\r\n\t\t} else if(this.state.passwordMismatch){\r\n\t\t\treturn (\r\n\t\t\t\t<Message visible negative>\r\n\t\t\t\t\t<Message.Header>Passwords do not match</Message.Header>\r\n\t\t\t\t\t<p>Please recheck your info.</p>\r\n\t\t\t\t</Message>\r\n\t\t\t)\r\n\t\t} else if(this.state.inputDetailRulebreak){\r\n\t\t\treturn (\r\n\t\t\t\t<Message visible negative>\r\n\t\t\t\t\t<Message.Header>Username or password is insecure</Message.Header>\r\n\t\t\t\t\t<p>\tMust be at least eight (8) characters.<br/>\r\n\t\t\t\t\t\tMust not all be the same character.<br/>\r\n\t\t\t\t\t\tPlease try again.</p>\r\n\t\t\t\t</Message>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn <div></div>\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (<div className=\"page\">\r\n\t\t\t<Grid textAlign='center' style={{minHeight:\"100vh\"}} verticalAlign='middle'>\r\n\t\t\t\t<Grid.Column style={{ maxWidth: 450 }}>\r\n\t\t\t\t\t<Header as='h2' textAlign='center'>\r\n\t\t\t\t\t\tRegister New User\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t\t<Form size='large'>\r\n\t\t\t\t\t\t<Segment>\r\n\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\tfluid icon='user'\r\n\t\t\t\t\t\t\ticonPosition='left'\r\n\t\t\t\t\t\t\tplaceholder='Username'\r\n\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\tvalue={this.state.username}\r\n\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\tfluid icon='lock'\r\n\t\t\t\t\t\t\ticonPosition='left'\r\n\t\t\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\tfluid icon='th'\r\n\t\t\t\t\t\t\ticonPosition='left'\r\n\t\t\t\t\t\t\tplaceholder='Confirm password'\r\n\t\t\t\t\t\t\tname=\"repeat_password\"\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tvalue={this.state.repeat_password}\r\n\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\tfluid icon='key'\r\n\t\t\t\t\t\t\ticonPosition='left'\r\n\t\t\t\t\t\t\tplaceholder='Registration key'\r\n\t\t\t\t\t\t\tname=\"regkey\"\r\n\t\t\t\t\t\t\tvalue={this.state.regkey}\r\n\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button primary onClick={this.handleButton.bind(this)}>Register Now</Button>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t<Message>\r\n\t\t\t\t\t\tIf you alreay have an account, <a href='../login-form'>sign in</a>\r\n\t\t\t\t\t</Message>\r\n\t\t\t\t\t{this.renderError()}\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t</div>)\r\n\t}\r\n}\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React, { Component } from 'react';\r\nimport { Header, Button, Grid } from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass PageHeader extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t}\r\n\r\n\thandleLogoutClick() \r\n\t{\r\n\t\r\n\t\tfetch(\"logout\",{method:\"put\",headers: {\r\n            'Content-Type': 'application/json'\r\n        }}).then(res => \r\n            {\r\n\r\n                if(res.ok)\r\n                {\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.props.history.push(\"/login-form\");\r\n\r\n                }\t\t\t\t\r\n                else if(res.status == 404)\r\n                {\r\n\r\n                    throw new Error(404);\r\n\r\n                }\r\n                else \r\n                {\r\n\r\n                    throw new Error(500);\r\n\r\n                }\t\t\t\t\r\n\r\n\r\n            }).catch(err => \r\n                {\r\n                    this.setState({isError: true})\r\n                });\r\n\r\n\t}\r\n\r\n\trender() { //isbackable and isloggedin props only used for testing purposes, should be passed through URL under all other circumstances\r\n\t\tlet isBackable = this.props.isbackable === undefined ?\r\n\t\t\tnew URLSearchParams(this.props.location.search).get(\"isbackable\") : this.props.isbackable;\r\n\r\n\t\tif (this.props.isbackable !== undefined)\r\n\t\t\tthis.setState({isLoggedIn: this.props.isloggedin})\r\n\r\n\t\treturn (\r\n\t\t\t<Grid style={{padding:\"15px 15px 15px 15px\"}} container columns={3}>\r\n\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t<Button onClick={this.props.handleSidebarClick} >\r\n\t\t\t\t\t\t\t{(this.props.sidebarVisible?\"Hide\":\"Show\")+\" sidebar\"}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t<Header>\r\n\t\t\t\t\t\t{this.props.header}\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t{isBackable ? <Button \r\n\t\t\t\t\t\tonClick={() => {this.props.history.goBack()}}\r\n\t\t\t\t\t\tdisabled={!isBackable}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBack\r\n\t\t\t\t\t</Button> : undefined }\r\n\t\t\t\t\t<Button onClick={this.handleLogoutClick.bind(this)}>Logout </Button>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(PageHeader);\r\n","import React, { Component } from 'react';\r\nimport PageHeader from './page-header.js';\r\n\r\nclass Home extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"page\">\r\n\t\t\t\t<PageHeader \r\n\t\t\t\t\theader={\"Home\"}\r\n\t\t\t\t\tsidebarVisible={this.props.sidebarVisible}\r\n\t\t\t\t\thandleSidebarClick={this.props.handleSidebarClick}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"container\" style={{height:\"100vh\"}}>\r\n\t\t\t\t\tContent goes here\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home;","/**\r\n * A class representing unstructured data\r\n * for list you may want to leave the data field undefined\r\n * NOTE: this code is duplicated on client and server so is only tested on the server\r\n */\r\nexport class UnstructuredData\r\n{\r\n\r\n    constructor(id,matchid,title,author,url,published,extracted,data)\r\n    {\r\n\r\n        this.id = id;\r\n        this.matchid = matchid;\r\n        this.title = title;\r\n        this.author = author;\r\n        this.url = url;\r\n        this.published = published;\r\n        this.extracted = extracted;\r\n        this.data = data; \r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * A class representing structured data, for lists you may want to leave data undefined\r\n */\r\nexport class StructuredData\r\n{\r\n\r\n    constructor(id,date,home,away,competitionID,competitionName,data)\r\n    {\r\n\r\n        this.id = id;\r\n        this.date = date;\r\n        this.home = home;\r\n        this.away = away;\r\n        this.competitionID = competitionID;\r\n        this.competitionName = competitionName;\r\n        this.data = data; \r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * a class representing a match \r\n */\r\nexport class Match\r\n{\r\n\r\n    constructor(id,date,home,away,competitionID,competitionName)\r\n    {\r\n\r\n        this.id = id;\r\n        this.date = date;\r\n        this.home = home;\r\n        this.away = away;\r\n        this.competitionID = competitionID;\r\n        this.competitionName = competitionName;\r\n\r\n    }\r\n\r\n}\r\n\r\nclass InsertMatch\r\n{\r\n\r\n    constructor(id,competitionID,date,home,away,data)\r\n    {\r\n\r\n        this.id = id;\r\n        this.competitionID = competitionID;\r\n        this.date = date;\r\n        this.home = home;\r\n        this.away = away;\r\n        this.data = data;\r\n          \r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * A class representing an edit \r\n */\r\nexport class Edit \r\n{\r\n\r\n    constructor(editID,structuredDataID,unstructuredDataID,isCorpus,settings,replace,replaceWith,type,order)\r\n    {\r\n\r\n        this.editID = editID;\r\n        this.structuredDataID = structuredDataID;\r\n        this.unstructuredDataID = unstructuredDataID;\r\n        this.isCorpus = isCorpus;\r\n        this.settings = settings;\r\n        this.replace = replace;\r\n        this.replaceWith = replaceWith;\r\n        this.type = type;\r\n        this.order = order;\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Competition\r\n{\r\n\r\n    constructor(id,name,countryName,countryId)\r\n    {\r\n\r\n        this.id = id; \r\n        this.name = name; \r\n        this.countryName = countryName;\r\n        this.countryId = countryId\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ImportRequest\r\n{\r\n\r\n    constructor(begin,end,compId)\r\n    {\r\n\r\n        this.begin = begin; //optional\r\n\r\n        this.end = end; //optional\r\n\r\n        this.compId = compId; //mandatory \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class SearchRequest\r\n{\r\n\r\n    constructor(type,value,field)\r\n    {\r\n\r\n        this.type = type;\r\n        this.value = value;\r\n        this.field = field; \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class User\r\n{\r\n\r\n    constructor(id, username, hash, admin, regkey, token, apikey)\r\n    {\r\n\r\n        this.id = id; \r\n        this.username = username; \r\n        this.hash = hash;\r\n        this.admin = admin;\r\n        this.regkey = regkey;\r\n        this.token = token;\r\n        this.apikey = apikey;\r\n\r\n    }\r\n\r\n}","\r\nexport const APP_NAME = \"Semantic League\";\r\n\r\n//use to truncate long unstructured data titles\r\nexport const MAX_TITLE_SIZE = 45; \r\n\r\nexport const STRUCTURED_DATA_FIELDS = [\"cards\",\r\n    \"lineup\",\r\n    \"goalscorer\",\r\n    \"league_name\",\r\n    \"country_name\",\r\n    \"match_status\",\r\n    \"substitutions\",\r\n    \"match_hometeam_name\",\r\n    \"match_awayteam_name\"];\r\n\r\nexport const EDIT_TYPES = [\"replace\",\"replacewithfield\",\"sequentialreplace\"];\r\n \r\nexport const EDIT_NAMES = [\"Replace\",\"Replace Field\",\"Sequential Replace\"]","import React, { Component } from 'react';\r\nimport { Table, Button, Container, Dimmer,Loader } from 'semantic-ui-react';\r\n/**\r\n * a generic table for other tables to inherit from\r\n * inheritance was choosen over composition becuase\r\n * 1. it allows for more code reuse \r\n * 2. it means that data does need to be piped an additional layer\r\n */\r\nclass DataTable extends Component\r\n{\r\n    /**\r\n     * constructs a new match data table\r\n     * data is mandatory however onSelect is optional \r\n     * @param {*} props the props passed in\r\n     */\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        let selectFunc;\r\n        if(this.props.onSelect != undefined)\r\n        {\r\n            selectFunc = (data) => \r\n            {\r\n                this.setState({activeRow: data.id})\r\n                this.props.onSelect(data);\r\n            }\r\n            \r\n        }\r\n        else\r\n        {\r\n            selectFunc = () => {};\r\n        }\r\n\r\n        this.state = {activeRow: -1,selectFunc: selectFunc,page:this.props.page,totalPages:this.props.totalPages};\r\n    }\r\n\r\n    renderPageButtons()\r\n    {\r\n\r\n        \r\n\r\n        if(Number.isInteger(this.props.totalPages) && Number.isInteger(this.state.page) && this.state.totalPages > 1)\r\n        {\r\n            return(\r\n                <Container textAlign=\"right\"  >\r\n                                \r\n                    <Button \r\n                        onClick={() => this.props.onPageChange(--this.state.page)} \r\n                        disabled={this.state.page < 2 || this.props.paging}>\r\n                        Prev\r\n                    </Button>\r\n                    <Button \r\n                        onClick={() => this.props.onPageChange(++this.state.page)} \r\n                        disabled={this.state.page === this.state.totalPages || this.props.paging}>\r\n                        Next\r\n                    </Button>\r\n                    \r\n                </Container>)\r\n            \r\n \r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * renders the function\r\n     * also checks if the data is valid \r\n     * only checks the fields which are relevant to this component \r\n     */\r\n    render()\r\n    {\r\n\r\n        if(! Array.isArray( this.props.items) && Object.keys(this.props.items)\r\n            .every((k) => Array.isArray(this.props.items[k]) == false))\r\n        {\r\n            throw Error(\"Props.items should contain a list of data or an object containing only lists of data\")\r\n        }\r\n        \r\n        if(Array.isArray(this.props.items))\r\n        {\r\n\r\n            if(this.props.items.every((i) => i != undefined && i != null) == false)\r\n            {\r\n                throw new Error(\"props.data must be an instance of data\")\r\n            }\r\n\r\n        }\r\n        if(this.genRows == undefined || this.genHeader == undefined)\r\n        {\r\n\r\n            throw new Error(\"genRows and genHeader must be defined by child component\")\r\n\r\n        }\r\n        if(this.isValidData !== undefined)\r\n        {\r\n\r\n            this.isValidData()\r\n\r\n        }\r\n\r\n        let isSelectable = this.props.onSelect !== undefined;\r\n\r\n        return(\r\n        <div>\r\n            {this.renderPageButtons()}\r\n            <Table striped selectable={isSelectable} >        \r\n                <Table.Header>\r\n                    {this.genHeader()}\r\n                </Table.Header>  \r\n                <Table.Body>\r\n                    {this.genRows()}\r\n                </Table.Body>        \r\n            </Table>\r\n        </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataTable;\r\n","import React, { Component } from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport { UnstructuredData} from \"../../domain\";\r\nimport {MAX_TITLE_SIZE} from \"../../constants\";\r\nimport DataTable from \"./data-table\"\r\n/**\r\n * shows a table of unstructured data\r\n * has the ability to select a row \r\n */\r\nclass UnstructuredDataTable extends DataTable\r\n{\r\n    /**\r\n     * constructs a new unstructured data table\r\n     * data is mandatory however onselect is optional\r\n     * @param {*} props the props passed in \r\n     */\r\n    constructor(props)\r\n    {\r\n\r\n        super(props);\r\n\r\n    }\r\n\r\n    genRows()\r\n    {\r\n\r\n        return this.props.items.map((item, index) => (\r\n            <UnstructuredDataRow \r\n                key={item.id} \r\n                data={item} \r\n                onSelect={this.state.selectFunc} \r\n                isActive={item.id == this.state.activeRow}\r\n            />\r\n        ))\r\n\r\n    }\r\n\r\n    genHeader()\r\n    {\r\n\r\n        return this.state.header = (<Table.Row>\r\n            <Table.HeaderCell>Published</Table.HeaderCell>\r\n            <Table.HeaderCell>Author</Table.HeaderCell>\r\n            <Table.HeaderCell>Title</Table.HeaderCell>\r\n        </Table.Row>)\r\n\r\n    }\r\n\r\n    isValidData()\r\n    {\r\n\r\n        \r\n        //broken into each predicate for easier debugging\r\n        if(this.props.items.every((i) => {\r\n            let isIdValid = typeof(i.id) === \"number\" \r\n            let isPublishedValid = i.published instanceof Date \r\n            let isAuthorValid = typeof(i.author) === \"string\"\r\n            let isTitleValid = typeof(i.title) === \"string\"\r\n            return isIdValid && isPublishedValid && isAuthorValid && isTitleValid;\r\n            }) == false)\r\n        {\r\n            \r\n\r\n            \r\n            throw new Error(\"every piece of data should have valid id, published, title and author\");\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Represents a row of the unstructured data table  \r\n * as this component isn't exported no additional validation is done \r\n * by this component \r\n * @param {*} props \r\n */\r\nfunction UnstructuredDataRow(props)\r\n{\r\n\r\n    if((props.data instanceof UnstructuredData) == false)\r\n    {\r\n\r\n        throw Error(\"props.data must be an instance of unstructured data\");\r\n\r\n    }\r\n    \r\n    let date = props.data.published;\r\n\r\n    let dateString = (date.getDate()) + \"/\" + (date.getMonth()+1) + \"/\" + date.getFullYear();\r\n\r\n    let title = props.data.title;\r\n\r\n    if(title.length > MAX_TITLE_SIZE)\r\n    {\r\n\r\n        title = title.substring(0,MAX_TITLE_SIZE-3) + \"...\";\r\n\r\n    }\r\n\r\n    let selectFunc = props.onSelect != undefined ? props.onSelect : () => {};\r\n\r\n    return(\r\n        <Table.Row onClick={() => selectFunc(props.data)} active={props.isActive}>\r\n            <Table.Cell>{dateString}</Table.Cell>\r\n            <Table.Cell>{props.data.author}</Table.Cell>\r\n            <Table.Cell>{title}</Table.Cell>\r\n        </Table.Row>\r\n    );\r\n    \r\n}\r\n\r\nexport default UnstructuredDataTable;","import {StructuredData, UnstructuredData, Edit, Match, Competition, User} from \"./domain\";\r\n/**\r\n * converts a parsed json object of structured data\r\n * to an instance of structured data \r\n * No validation is done\r\n * @param {object} rawStructuredData the object representation\r\n */\r\nexport function bindStructuredData(rawStructuredData)\r\n{\r\n\r\n    return new StructuredData(Number.parseInt(rawStructuredData.id)\r\n        ,new Date(rawStructuredData.date)\r\n        ,rawStructuredData.home\r\n        ,rawStructuredData.away\r\n        ,Number.parseInt(rawStructuredData.competitionID)\r\n        ,rawStructuredData.competitionName\r\n        ,rawStructuredData.data)\r\n\r\n}\r\n\r\n/**\r\n * converts a parsed json object of unstructured data\r\n * to an instance of unstructured data\r\n * no validation is done.\r\n * @param {object} rawUnstructuredData \r\n */\r\nexport function bindUnstructureData(rawUnstructuredData)\r\n{\r\n\r\n    return new UnstructuredData(Number.parseInt(rawUnstructuredData.id),\r\n        Number.parseInt(rawUnstructuredData.matchid),\r\n        rawUnstructuredData.title,\r\n        rawUnstructuredData.author,\r\n        rawUnstructuredData.url,\r\n        new Date(rawUnstructuredData.published),\r\n        new Date(rawUnstructuredData.extracted),\r\n        rawUnstructuredData.data);\r\n\r\n\r\n}\r\n\r\n/**\r\n * converts a parsed json object to an edit \r\n * no validation is done \r\n * @param {*} rawEdit the parsed json object \r\n */\r\nexport function bindEdit(rawEdit)\r\n{\r\n\r\n    return new Edit(Number.parseInt(rawEdit.editID),\r\n        Number.isInteger(rawEdit.structuredDataID) ? Number.parseInt(rawEdit.structuredDataID) : null,\r\n        Number.isInteger(rawEdit.unstructuredDataID) ? Number.parseInt(rawEdit.unstructuredDataID) : null,\r\n        rawEdit.isCorpus,\r\n        rawEdit.settings,\r\n        rawEdit.replace,\r\n        rawEdit.replaceWith,\r\n        rawEdit.type,\r\n        rawEdit.order);    \r\n\r\n}\r\n\r\n/**\r\n * converts a parsed json object to a match\r\n * no validation is done\r\n * @param {*} rawMatch the parsed json object\r\n */\r\n\r\nexport function bindMatch(rawMatch)\r\n{\r\n\r\n    return new Match(Number.parseInt(rawMatch.id),\r\n        new Date(rawMatch.date),\r\n        rawMatch.home,\r\n        rawMatch.away,\r\n        Number.parseInt(rawMatch.competitionID),\r\n        rawMatch.competitionName);\r\n}\r\n\r\nexport function bindCompetition(rawComp)\r\n{\r\n\r\n    return new Competition(Number.parseInt(rawComp.id),\r\n        rawComp.name,\r\n        rawComp.countryName,\r\n        Number.parseInt(rawComp.countryId));\r\n\r\n}\r\n\r\nexport function bindUser(rawUser)\r\n{\r\n\r\n    return new User(Number.parseInt(rawUser.id),\r\n        rawUser.username,\r\n        rawUser.hash,\r\n        Number.parseInt(rawUser.admin),\r\n        rawUser.regkey,\r\n        rawUser.token,\r\n        rawUser.apikey);\r\n\r\n}\r\n","/**\r\n * An object for executing a function if no additional calls have been made after\r\n * a given number of miliseconds\r\n */\r\nclass DelayEngine\r\n{\r\n    /**\r\n     * creates an object\r\n     * @param {*} delay delay in miliseconds\r\n     */\r\n    constructor(delay)\r\n    {\r\n\r\n        this.delay = delay;\r\n\r\n    }\r\n\r\n    /**\r\n     * starts the process, if called again will reset the timer\r\n     * @param {*} callback the callback to call on success. \r\n     */\r\n    start(callback)\r\n    {\r\n\r\n        let start = new Date();\r\n\r\n        this.lastInput = start;\r\n        setTimeout(() => \r\n        {\r\n\r\n            if(this.lastInput === start)\r\n            {\r\n\r\n                callback()\r\n\r\n            }\r\n\r\n        },this.delay)\r\n\r\n    }\r\n\r\n    /**\r\n     * stops the timer and so the code will not execute after a delay\r\n     */\r\n    stop()\r\n    {\r\n\r\n        this.lastInput = undefined;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default DelayEngine;","import React, { Component } from 'react';\r\nimport PageHeader from '../page-header.js';\r\nimport { Button, Loader, Message, Container, Form, Dimmer} from 'semantic-ui-react'\r\nimport {SearchRequest} from \"../../domain\";\r\nimport DelayEngine from \"../../delay-engine\";\r\n\r\nexport class ListPage extends Component {\r\n\r\n\tconstructor(props)\r\n\t{\r\n\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n            data: [],\r\n            target:[],\r\n             isLoaded: false,\r\n              isError: false,\r\n              page:1,\r\n              totalPages:NaN,\r\n              paging:false,\r\n              searches:{},\r\n              delayEngine: new DelayEngine(750)}\r\n\r\n\t}\r\n\r\n   \r\n\r\n     /**\r\n     * Handles any errors cuased by a sub-component \r\n     * @param {*} error the error recieved\r\n     * @param {*} errorInfo information about the error\r\n     */\r\n    componentDidCatch(error, errorInfo)\r\n    {\r\n\r\n        this.setState({isError: true});\r\n\r\n    }\r\n\r\n    /**\r\n     * handles changing of pages\r\n     * @param {*} page the page to change to\r\n     */\r\n    handlePageChange(page)\r\n    {\r\n\r\n        this.state.page = page;\r\n\r\n        this.setState({paging: true, page:page})\r\n    }\r\n\r\n    /**\r\n     * handles standard searches by child components \r\n     */\r\n    handleSearchChange(key,search)\r\n    {      \r\n        \r\n        if(search === undefined && key !== undefined)\r\n        {\r\n            \r\n            delete this.state.searches[key]\r\n            \r\n            this.setState({searches:this.state.searches},() => \r\n            {\r\n\r\n\r\n\r\n                this.state.delayEngine.start(() => this.search());\r\n\r\n            })\r\n\r\n\r\n        }\r\n        \r\n\r\n        if(search !== undefined &&\r\n           search !== null &&\r\n           typeof(search) === \"object\" &&\r\n           search instanceof SearchRequest)\r\n        {\r\n\r\n\r\n\r\n            this.state.searches[key] = search;\r\n\r\n            this.setState({searches:this.state.searches},() => \r\n            {\r\n\r\n\r\n\r\n                this.state.delayEngine.start(() => this.search());\r\n\r\n            })\r\n\r\n            \r\n\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * starts a search \r\n     */\r\n    search()\r\n    {\r\n\r\n        this.state.delayEngine.stop();        \r\n\r\n        this.sendRequest(Object.values(this.state.searches));       \r\n\r\n    }\r\n\r\n    /**\r\n     * Sends a request to the server and then passes the result to child component's load data function\r\n     * @param {*} searches the searches to perform if there are any\r\n     */\r\n    sendRequest(searches)\r\n    {\r\n        \r\n        if(this.state.route === undefined)\r\n        {\r\n\r\n            throw new Error(\"this.state.route should be defined\");\r\n\r\n        }\r\n\r\n        \r\n        let body;\r\n\r\n        //genBody allows for more complex searching, not neccessary for most list pages \r\n        if(this.genBody === undefined)\r\n        {\r\n\r\n                \r\n            if(searches !== undefined)\r\n            {\r\n\r\n                body = JSON.stringify({searches:searches})\r\n\r\n            }\r\n            else\r\n            {\r\n\r\n                body = \"\"\r\n\r\n            }\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            body = JSON.stringify(this.genBody());\r\n\r\n        }\r\n\r\n\r\n        fetch(this.state.route+\"?page=\" + this.state.page,{method: \"POST\",\r\n            body: body,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }})\r\n            .then(res => \r\n                {\r\n\r\n                    if(res.status === 401)\r\n                    {\r\n    \r\n                        window.location.href = \"/login-form\"                    \r\n    \r\n                    }\r\n    \r\n\r\n                    if(res.ok)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn res.json()\r\n\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t\telse if(res.status == 404)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\tthrow new Error(404);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse \r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\tthrow new Error(500);\r\n\r\n\t\t\t\t\t}\t\t\t\t\r\n\r\n                })\r\n            .then(result => \r\n            {\r\n\r\n                \r\n\r\n                this.setState({totalPages:result.pages,isLoaded: true,paging:false});\r\n\r\n                if(result !== undefined)\r\n                {\r\n\r\n                    this.loadData(result);\r\n\r\n                }\r\n\r\n                \r\n\r\n            }).catch(err => \r\n            {\r\n                this.setState({isError: true})\r\n            });\r\n            \r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * loads the data if it is not already loaded\r\n     */\r\n\tloadIfNotAlready()\r\n\t{\r\n\r\n\t\tif((this.state.isLoaded === false || this.state.paging === true) && this.state.isError === false)\r\n\t\t{\r\n\r\n            if(this.loadData === undefined)\r\n            {\r\n\r\n                throw new Error(\"Load data must be defined by child component\")\r\n\r\n            }\r\n\r\n\t\t\tthis.sendRequest();\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\t /**\r\n     * Renders the page if an error has occured\r\n     */\r\n    renderError()\r\n    {\r\n\r\n        return(  \r\n        <Message negative>\r\n            <Message.Header>An error has occured</Message.Header>\r\n            <p>Failed to get data from the server.</p>\r\n            <Button color=\"red\" onClick={() => this.sendRequest()}>Try Again?</Button>\r\n          </Message>\r\n          )\r\n\r\n    }\r\n\r\n    /**\r\n     * navigates to an edit page with parameters given by inputted edit\r\n     * @param {*} edit the edit inputted \r\n     */\r\n\trouteToEdit(edit)\r\n\t{\r\n\r\n\t\tthis.props.history.push(\"/add_edit?id=\" + edit.editID + \"&isbackable=true\");\r\n\t\t\r\n\t}\r\n\r\n\r\n    /**\r\n     * renders the page in loading state \r\n     */\r\n    renderLoading()\r\n    {\r\n\r\n        return(<Loader active >Loading your edits</Loader>)\r\n\r\n    }\r\n\r\n    \r\n    /**\r\n     * Chooses which render that should be rendered based on \r\n     * state of the object \r\n     */\r\n    executeRender()\r\n    {\r\n\r\n        if(this.renderLoaded === undefined)\r\n        {\r\n\r\n            throw new Error(\"Renderloaded must be defined in child component\")\r\n\r\n        }\r\n\r\n        if(this.state.isError)\r\n        {\r\n\r\n            return this.renderError();\r\n\r\n        }\r\n        else if(this.state.isLoaded)\r\n        {\r\n\r\n            return this.renderLoaded();\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            this.renderLoading()\r\n\r\n        }\r\n\r\n    }\r\n\r\n\t\r\n\r\n    /**\r\n     * renders the page \r\n     */\r\n\trender() {\r\n\r\n\t\tthis.loadIfNotAlready();\r\n\r\n\t\treturn (<div className=\"page\">\r\n           <Dimmer active={! this.state.isLoaded}>\r\n                <Loader active={! this.state.isLoaded}> Loading</Loader>\r\n           </Dimmer>\r\n\t\t\t<PageHeader \r\n\t\t\t\theader={this.state.headerText != undefined ? this.state.headerText : \"List Page\"}\r\n\t\t\t\tsidebarVisible={this.props.sidebarVisible}\r\n\t\t\t\thandleSidebarClick={this.props.handleSidebarClick}\r\n\t\t\t/>           \r\n\t\t\t<Container>\r\n            <Container textAlign=\"center\">\r\n                <Form>\r\n                {this.renderSearch !== undefined ? this.renderSearch() : undefined}\r\n                </Form>\r\n            </Container>\r\n    \r\n\t\t\t<br/>\r\n            <div id=\"container\" style={{minHeight:\"100vh\"}}>\r\n                {this.executeRender()}    \r\n            </div>\r\n            </Container>\t\r\n            \r\n\t\t</div>)\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport default ListPage;","import React, { Component } from 'react';\r\nimport UnstructuredDataTable from \"../tables/unstructured-data-table\";\r\nimport { bindUnstructureData } from \"../../data-binding\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport ListPage from './list-page.js';\r\nimport { SearchRequest } from \"../../domain\"\r\n\r\nclass UnstructuredDataList extends ListPage {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state.isLoaded = false;\r\n        this.state.search = \"\";\r\n        this.state.start = \"\";\r\n        this.state.end = \"\";\r\n        this.state.headerText = \"Unstructured Data List\"\r\n        this.state.route = \"/UnstructuredDataList\"\r\n    }\r\n\r\n    /**\r\n    * deals with filling out inputs in the form\r\n    * @param e - the event that caused the change\r\n    **/\r\n    changeHandler = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n        switch (e.target.name) {\r\n            case \"search\":\r\n                this.handleSearchChange(e.target.name, new SearchRequest(\"text\", e.target.value, [\"author\", \"title\", \"url\", \"data\"]))\r\n                break;\r\n            case \"start\":\r\n                if (e.target.value === '') {\r\n                    this.handleSearchChange(e.target.name, undefined)\r\n                    return\r\n                }\r\n                var split = e.target.value.split('-')\r\n                var start = new Date(split[0], split[1] - 1, split[2], 0, 0, 0)\r\n                this.handleSearchChange(e.target.name, new SearchRequest(\"after\", start, \"published\"))\r\n                break;\r\n            case \"end\":\r\n                if (e.target.value === '') {\r\n                    this.handleSearchChange(e.target.name, undefined)\r\n                    return\r\n                }\r\n                var split = e.target.value.split('-')\r\n                var end = new Date(split[0], split[1] - 1, split[2], 0, 0, 0)\r\n                this.handleSearchChange(e.target.name, new SearchRequest(\"before\", end, \"published\"))\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * loads all the unstructured data into the list\r\n    **/\r\n    loadData(data)\r\n    {\r\n\r\n        data.unstructuredData = data.unstructuredData.map((d) => bindUnstructureData(d));\r\n        \r\n        this.setState({ data: data.unstructuredData, isLoaded: true, isError: false });                \r\n        \r\n    }\r\n\r\n    /**\r\n     * takes the user to the add unstructured data page with the id of the selected data\r\n     * @param {any} data - the selected data\r\n     */\r\n    routeToUnstructuredData(data) {\r\n        this.props.history.push(\"/add_unstructured_data?id=\" + data.id + \"&isbackable=true\")\r\n    }\r\n\r\n    renderLoaded()\r\n    {      \r\n    \r\n        return(<div class=\"inline fields\" >\r\n        <div class=\"one wide field\"/>\r\n        <div class=\"fourteen wide field\">\r\n            <UnstructuredDataTable             \r\n                totalPages={this.state.totalPages}\r\n                onPageChange={this.handlePageChange.bind(this)}\r\n                page={this.state.page}\r\n                paging={this.state.paging}                \r\n                items={this.state.data} onSelect={this.routeToUnstructuredData.bind(this)}>\r\n            </UnstructuredDataTable>\r\n        </div>\r\n    </div>)\r\n\r\n    }\r\n\r\n    renderSearch()\r\n    {\r\n\r\n        const { search, start, end, match, league, data } = this.state\r\n\r\n        return(<div id=\"container\">\r\n        <form class=\"ui form\">\r\n            <div class=\"inline fields\">\r\n                <div class=\"one wide field\"/>\r\n                <div class=\"fourteen wide field\">\r\n                    <label>\r\n                        Search\r\n                    </label>\r\n                    <div class=\"ui icon input\">\r\n                        <input type=\"text\" name=\"search\" value={search} onChange={this.changeHandler.bind(this)} />\r\n                            <i class=\"search icon\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"inline fields\">\r\n                <div class=\"one wide field\"/>\r\n                <div class=\"eight wide field\">\r\n                    <label>\r\n                        Between\r\n                    </label>\r\n                    <input type=\"date\" name=\"start\" value={start} onChange={this.changeHandler.bind(this)}/>\r\n                    <input type=\"date\" name=\"end\" value={end} onChange={this.changeHandler.bind(this)}/>\r\n                </div>\r\n                <div class=\"six wide field\">\r\n                </div>\r\n            </div>  \r\n        </form>\r\n    </div>)\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(UnstructuredDataList);\r\n","import React, { Component } from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport { StructuredData} from \"../../domain\";\r\nimport DataTable from \"./data-table\"\r\n\r\n/**\r\n * shows a table of structured data \r\n * has the ability to select a row \r\n */\r\nclass StructuredDataTable extends DataTable\r\n{\r\n\r\n    /**\r\n     * constructs a new structured data table\r\n     * data is mandatory however onSelect is optional \r\n     * @param {*} props the props passed in\r\n     */\r\n    constructor(props)\r\n    {\r\n\r\n        super(props);\r\n    }\r\n\r\n    genRows()\r\n    {\r\n\r\n        return this.props.items.map((item, index) => (\r\n            <StructuredDataRow \r\n                key={item.id} \r\n                data={item} \r\n                onSelect={this.state.selectFunc} \r\n                isActive={item.id == this.state.activeRow}\r\n            />\r\n        ))\r\n\r\n    }\r\n\r\n    genHeader()\r\n    {\r\n\r\n        return (<Table.Row>\r\n            <Table.HeaderCell>Date</Table.HeaderCell>\r\n            <Table.HeaderCell>Match</Table.HeaderCell>\r\n            <Table.HeaderCell>Competition</Table.HeaderCell>\r\n        </Table.Row>);\r\n\r\n    }\r\n\r\n    isValidData()\r\n    {\r\n\r\n        if(this.props.items.every((i) => \r\n        {\r\n            let isMatchIdValid = typeof(i.id) === \"number\"\r\n            let isDateValid = i.date instanceof Date;\r\n            let isHomeValid = typeof(i.home) === \"string\";\r\n            let isAwayValid = typeof(i.away) === \"string\";\r\n            let isCompIdValid = typeof(i.competitionID) === \"number\"\r\n            let isCompNameValid = typeof(i.competitionName) === \"string\";\r\n            return isMatchIdValid && isDateValid && isHomeValid && isAwayValid && isCompIdValid && isCompNameValid;\r\n        }) === false)\r\n        {\r\n            throw new Error(\"every piece of data should have valid date, home, away, comp name\");\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Represents a row of the structured data table\r\n * as this component isn't exported no additional validation is done \r\n * by this component \r\n * @param {*} props \r\n */\r\nfunction StructuredDataRow(props)\r\n{\r\n\r\n    if((props.data instanceof StructuredData) == false)\r\n    {\r\n\r\n        throw Error(\"props.data must be an instance of structured data\");\r\n\r\n    }\r\n    \r\n    let date = props.data.date;\r\n\r\n    let dateString = date.getDate() + \"/\" + date.getMonth() + \"/\" + date.getFullYear();\r\n\r\n    let versus = props.data.home + \" vs \" + props.data.away;\r\n\r\n    let selectFunc = props.onSelect != undefined ? props.onSelect : () => {};\r\n\r\n    return(\r\n        <Table.Row onClick={() => selectFunc(props.data)} active={props.isActive}>\r\n            <Table.Cell>{dateString}</Table.Cell>\r\n            <Table.Cell>{versus}</Table.Cell>\r\n            <Table.Cell>{props.data.competitionName}</Table.Cell>\r\n        </Table.Row>\r\n    );\r\n    \r\n}\r\n\r\nexport default StructuredDataTable;","import React, { Component } from 'react';\r\nimport PageHeader from '../page-header.js';\r\nimport StructuredDataTable from \"../tables/structured-data-table\";\r\nimport {bindStructuredData,bindCompetition} from \"../../data-binding\";\r\nimport { Button, Loader, Message, Container, Form, SearchResult} from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ListPage from './list-page.js';\r\nimport {SearchRequest} from \"../../domain\";\r\n\r\nexport class StructuredDataList extends ListPage {\r\n\r\n\tconstructor(props)\r\n\t{\r\n\r\n        super(props)\r\n        \r\n        this.state.headerText = \"Structured Data Page\";\r\n\r\n        this.state.route = \"/structuredDataList\";\r\n\r\n        this.state.isCompLoaded = false;\r\n\r\n\t}\r\n\r\n\r\n\r\n     /**\r\n      * \r\n     * Handles any errors cuased by a sub-component \r\n     * @param {*} error the error recieved\r\n     * @param {*} errorInfo information about the error\r\n     */\r\n    componentDidCatch(error, errorInfo)\r\n    {\r\n\r\n        this.setState({isError: true});\r\n\r\n    }\r\n\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadData(result)\r\n    {\r\n\r\n        let data = result.structuredData.map((d) => bindStructuredData(d));\r\n\r\n        this.setState({data:data,isLoaded: true, isError: false})\r\n\r\n    }\r\n\r\n    genDropDownItems(items,names)\r\n\t{\r\n\r\n\t\treturn items.map((item,index) => \r\n\t\t{\r\n\r\n\t\t\t//taken from https://stackoverflow.com/questions/7225407/convert-camelcasetext-to-sentence-case-text\r\n\t\t\tlet text = names !== undefined ? names[index] : item.replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\").charAt(0).toUpperCase()+item.slice(1).replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\");\r\n\r\n\t\t\treturn {key:item,text:text,value:item};\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadComps()\r\n    {\r\n\r\n        fetch(\"/competitions\")\r\n            .then(res => {\r\n                if(res.status === 401)\r\n                {\r\n\r\n                    window.location.href = \"/login-form\"                    \r\n\r\n                }\r\n\r\n                \r\n                return res.json()})\r\n            .then(result => \r\n                {\r\n\r\n                    let data = result.map(r => bindCompetition(r));\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet values = data.map(c => c.id);\r\n\r\n\t\t\t\t\tlet names = data.map(c => c.name);\t\t\t\t\t\r\n\r\n\t\t\t\t\tthis.setState({items:this.genDropDownItems(values,names),isCompLoaded: true})\r\n                })\r\n\r\n    }\r\n\r\n    handleDateSearchChange(name,value,isAfter)\r\n    {\r\n\r\n        if(value == \"\")\r\n        {\r\n\r\n            this.handleSearchChange(name,undefined);\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            let type = isAfter ? \"after\" : \"before\";\r\n            let parsedValue = value.split(\"-\")\r\n\r\n\r\n            let date = new Date(parsedValue[0],parsedValue[1],parsedValue[2]);\r\n        \r\n            this.handleSearchChange(name,new SearchRequest(type,date,\"date\"));\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderSearch()\r\n    {\r\n\r\n        if(this.state.isCompLoaded === false)\r\n        {\r\n        \r\n            this.loadComps();\r\n\r\n        }\r\n\r\n\r\n        return(\r\n            <div>\r\n                <Form.Input\r\n                    placeholder=\"Search\"\r\n                    name=\"search\"\r\n                    icon=\"search\"\r\n                    onChange={(e,{name,value}) => \r\n                            this.handleSearchChange(name,new SearchRequest(\"text\",value,[\"home\",\"away\",\"competitionName\"]))}\r\n                    />\r\n                <Form.Group inline>\r\n                    <Form.Input\r\n                        placeholder=\"before\"\r\n                        label=\"Between\"\r\n                        name=\"after\"\r\n                        type=\"date\"\r\n                        onChange={(e,{name,value}) => \r\n                        this.handleDateSearchChange(name,value,true)}\r\n                        />\r\n                    <Form.Input\r\n                        placeholder=\"after\"\r\n                        name=\"before\"\r\n                        type=\"date\"\r\n                        onChange={(e,{name,value}) => \r\n                        this.handleDateSearchChange(name,value,false)}\r\n                        />\r\n                    <Form.Select\r\n                    clearable\r\n                        label=\"Competition\"\r\n                        name=\"compId\"\r\n                        options={this.state.items}\r\n                        onChange={(e,{name,value}) => this.handleSearchChange(name,new SearchRequest(\"exact\",value,\"competitionID\"))}\r\n                        />\r\n\r\n\r\n                </Form.Group>\r\n\r\n            </div>)\r\n\r\n    }\r\n\r\n    /**\r\n     * renders the page in loading state \r\n     */\r\n\trenderLoaded()\r\n\t{\r\n\r\n\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p> A list of all structured data. Click on an item to view it in detail </p>\r\n                    <StructuredDataTable \r\n                        totalPages={this.state.totalPages}\r\n                        onPageChange={this.handlePageChange.bind(this)}\r\n                        page={this.state.page}\r\n                        paging={this.state.paging}                \r\n                        onSelect={this.routeToData.bind(this)} \r\n                        items={this.state.data}/>\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n    /**\r\n     * navigates to an edit page with parameters given by inputted edit\r\n     * @param {*} edit the edit inputted \r\n     */\r\n\trouteToData(data)\r\n\t{\r\n\r\n\t\tthis.props.history.push(\"/structured_data_page?id=\" + data.id + \"&isbackable=true\");\r\n\t\t\r\n\t}\r\n\r\n    /**\r\n     * renders the page if the data is still loading \r\n     */\r\n    renderLoading()\r\n    {\r\n\r\n        return(<Loader>Loading Data</Loader>)\r\n\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default withRouter(StructuredDataList);","import React, { Component } from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport DataTable from \"./data-table\";\r\n/**\r\n * shows a table of match data \r\n * has the ability to select a row \r\n */\r\nclass MatchListTable extends DataTable\r\n{\r\n    /**\r\n     * constructs a new match data table\r\n     * data is mandatory however onSelect is optional \r\n     * @param {*} props the props passed in\r\n     */\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n    }\r\n\r\n    genRows()\r\n    {\r\n\r\n        return this.props.items.map((item, index) => (\r\n            <MatchRow \r\n                key={item.id} \r\n                data={item} \r\n                onSelect={this.state.selectFunc} \r\n                isActive={item.id == this.state.activeRow}\r\n            />\r\n        ))\r\n\r\n\r\n    }\r\n\r\n    genHeader()\r\n    {\r\n\r\n        return (<Table.Row>\r\n            <Table.HeaderCell>Date</Table.HeaderCell>\r\n            <Table.HeaderCell>Match</Table.HeaderCell>\r\n            <Table.HeaderCell>Competition</Table.HeaderCell>\r\n        </Table.Row>);\r\n\r\n    }\r\n\r\n    isValidData()\r\n    {\r\n\r\n        if(this.props.items.every((i) => \r\n        {\r\n            let isMatchIdValid = typeof(i.id) === \"number\"\r\n            let isDateValid = i.date instanceof Date;\r\n            let isHomeValid = typeof(i.home) === \"string\";\r\n            let isAwayValid = typeof(i.away) === \"string\";\r\n            let isCompIdValid = typeof(i.competitionID) === \"number\"\r\n            let isCompNameValid = typeof(i.competitionName) === \"string\";\r\n            return isMatchIdValid && isDateValid && isHomeValid && isAwayValid && isCompIdValid && isCompNameValid;\r\n        }) === false)\r\n        {\r\n            throw new Error(\"every piece of data should have valid date, home, away, comp name\");\r\n        }\r\n        \r\n    }\r\n   \r\n}\r\n/**\r\n * Represents a row of the match data table\r\n * as this component isn't exported no additional validation is done \r\n * by this component \r\n * @param {*} props \r\n */\r\nfunction MatchRow(props)\r\n{\r\n    let date = props.data.date;\r\n    let dateString = date.getDate() + \"/\" + (date.getMonth()+1) + \"/\" + date.getFullYear();\r\n    let versus = props.data.home + \" vs \" + props.data.away;\r\n    let selectFunc = props.onSelect != undefined ? props.onSelect : () => {};\r\n    return(\r\n        <Table.Row onClick={() => selectFunc(props.data)} active={props.isActive}>\r\n            <Table.Cell>{dateString}</Table.Cell>\r\n            <Table.Cell>{versus}</Table.Cell>\r\n            <Table.Cell>{props.data.competitionName}</Table.Cell>\r\n        </Table.Row>\r\n    );  \r\n}\r\n\r\nexport default MatchListTable;\r\n","import React, { Component } from 'react';\r\nimport { Container, Form, Input, Loader, Message, Button } from 'semantic-ui-react';\r\nimport MatchListTable from '../tables/match-list-table.js';\r\nimport { bindMatch,bindCompetition } from \"../../data-binding\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport ListPage from './list-page.js';\r\nimport {SearchRequest} from \"../../domain\";\r\n\r\nclass MatchList extends ListPage {\r\n\r\n\tconstructor(props)\r\n\t{\r\n\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state.headerText = \"Match List\";\r\n\r\n\t\tthis.state.route = \"/matchlist\"\r\n\r\n\t\tthis.state.isCompLoaded = false;\r\n\r\n\t}\r\n\r\n\tgenDropDownItems(items,names)\r\n\t{\r\n\r\n\t\treturn items.map((item,index) => \r\n\t\t{\r\n\r\n\t\t\t//taken from https://stackoverflow.com/questions/7225407/convert-camelcasetext-to-sentence-case-text\r\n\t\t\tlet text = names !== undefined ? names[index] : item.replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\").charAt(0).toUpperCase()+item.slice(1).replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\");\r\n\r\n\t\t\treturn {key:item,text:text,value:item};\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n     /**\r\n     * Handles any errors cuased by a sub-component \r\n     * @param {*} error the error recieved\r\n     * @param {*} errorInfo information about the error\r\n     */\r\n    componentDidCatch(error, errorInfo)\r\n    {\r\n\r\n        this.setState({isError: true});\r\n\r\n    }\r\n\r\n\tloadData(result) \r\n\t{\r\n\r\n\r\n\t\tresult = result.matches.map((d) => bindMatch(d));\r\n\r\n\r\n\r\n\t\tthis.setState({ data: result, isLoaded: true, isError: false });\r\n\r\n\t}\r\n\r\n\trouteToMatch(match) {\r\n\t\tthis.props.history.push(\"/view_match?id=\" + match.id + \"&isbackable=true\");\r\n\t}\r\n\r\n\trenderLoaded()\r\n\t{\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<p> A list of all matches. Click on a match to view it in detail. </p>\t\t\t\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<MatchListTable \r\n\t\t\t\t\t\ttotalPages={this.state.totalPages}\r\n\t\t\t\t\t\tonPageChange={this.handlePageChange.bind(this)}\r\n\t\t\t\t\t\tpage={this.state.page}\r\n\t\t\t\t\t\tpaging={this.state.paging}             \r\n\t\t\t\t\t\tonSelect={this.routeToMatch.bind(this)} \r\n\t\t\t\t\t\titems={this.state.data}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t); \r\n\r\n\t}\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadComps()\r\n    {\r\n\r\n        fetch(\"/competitions\")\r\n            .then(res => {\r\n\t\t\t\t\r\n\t\t\t\tif(res.status === 401)\r\n                {\r\n\r\n                    window.location.href = \"/login-form\"                    \r\n\r\n                }\r\n\r\n\t\t\t\t\r\n\t\t\t\treturn res.json()})\r\n            .then(result => \r\n                {\r\n\r\n                    let data = result.map(r => bindCompetition(r));\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet values = data.map(c => c.id);\r\n\r\n\t\t\t\t\tlet names = data.map(c => c.name);\t\t\t\t\t\r\n\r\n\t\t\t\t\tthis.setState({items:this.genDropDownItems(values,names),isCompLoaded: true})\r\n                })\r\n\r\n    }\r\n\r\n    handleDateSearchChange(name,value,isAfter)\r\n    {\r\n\r\n        if(value == \"\")\r\n        {\r\n\r\n            this.handleSearchChange(name,undefined);\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            let type = isAfter ? \"after\" : \"before\";\r\n            let parsedValue = value.split(\"-\")\r\n\r\n\r\n            let date = new Date(parsedValue[0],parsedValue[1],parsedValue[2]);\r\n        \r\n            this.handleSearchChange(name,new SearchRequest(type,date,\"date\"));\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderSearch()\r\n    {\r\n\r\n        if(this.state.isCompLoaded === false)\r\n        {\r\n        \r\n            this.loadComps();\r\n\r\n        }\r\n\r\n\r\n        return(\r\n            <div>\r\n                <Form.Input\r\n                    placeholder=\"Search\"\r\n                    name=\"search\"\r\n                    icon=\"search\"\r\n                    onChange={(e,{name,value}) => \r\n                            this.handleSearchChange(name,new SearchRequest(\"text\",value,[\"home\",\"away\",\"competitionName\"]))}\r\n                    />\r\n                <Form.Group inline>\r\n                    <Form.Input\r\n                        placeholder=\"before\"\r\n                        label=\"Between\"\r\n                        name=\"after\"\r\n                        type=\"date\"\r\n                        onChange={(e,{name,value}) => \r\n                        this.handleDateSearchChange(name,value,true)}\r\n                        />\r\n                    <Form.Input\r\n                        placeholder=\"after\"\r\n                        name=\"before\"\r\n                        type=\"date\"\r\n                        onChange={(e,{name,value}) => \r\n                        this.handleDateSearchChange(name,value,false)}\r\n                        />\r\n                    <Form.Select\r\n                        label=\"Competition\"\r\n                        name=\"compId\"\r\n                        options={this.state.items}\r\n                        onChange={(e,{name,value}) => this.handleSearchChange(name,new SearchRequest(\"exact\",value,\"competitionID\"))}\r\n                        />\r\n\r\n\r\n                </Form.Group>\r\n\r\n            </div>)\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(MatchList);\r\n","\r\nimport React from 'react';\r\n\r\n/**\r\n * Creates a simple data pair with a label and a text valued\r\n * passed into the function\r\n * @param {*} props the props passed in, must contain a label and text properties \r\n */\r\nfunction DataPair(props)\r\n{\r\n\r\n    if(props.text === undefined || props.label === undefined)\r\n    {\r\n\r\n        throw new Error(\"text and label must be defined\")\r\n\r\n    }\r\n\r\n    return(\r\n    <div style={{padding:\"0px 15px 0px 15px\"}}>\r\n        <b style={{padding:\"0px 0px 0px 15px\"}}> {props.label}:</b>{props.text}        \r\n    </div>);\r\n\r\n}\r\n\r\nexport default DataPair;","import {Table} from \"semantic-ui-react\"\r\nimport React from \"react\"\r\n\r\n//taken from: https://stackoverflow.com/questions/4878756/how-to-capitalize-first-letter-of-each-word-like-a-2-word-city\r\nfunction toTitleCase(str) {\r\n    return str.replace(/\\w\\S*/g, function(txt){\r\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n    });\r\n}\r\n\r\nfunction Visualisation(props)\r\n{\r\n\r\n    let awayTeam = props.data.match_awayteam_name\r\n\r\n    let homeTeam = props.data.match_hometeam_name;\r\n    \r\n\r\n    let cards = props.data.cards.map(c => \r\n        {\r\n            \r\n            let sideFault = c.away_fault !== \"\" ? awayTeam + \" \" +  \"Player - \" \r\n                : homeTeam + \" \" + \"Player - \"\r\n\r\n            let player = c.away_fault !== \"\" ? c.away_fault : c.home_fault;\r\n\r\n            let card = toTitleCase(c.card);\r\n\r\n            let event = card + \" : \" + sideFault + player;\r\n\r\n            return {time:Number.parseInt(c.time),event:event,type:\"Card\"}\r\n    \r\n    \r\n        });\r\n\r\n    let goalscorer = props.data.goalscorer.map(c =>  {\r\n            \r\n        let side = c.away_scorer !== \"\" ? awayTeam + \" \" +  \"Player - \" \r\n        : homeTeam + \" \" + \"Player - \"\r\n\r\n        let player = c.away_scorer !== \"\" ? c.away_scorer : c.home_scorer;\r\n\r\n        let score = c.score;\r\n\r\n        let event = side + player + \" - New Score - \" + score;\r\n\r\n        return {time:Number.parseInt(c.time),event:event,type:\"Goal\"}\r\n\r\n\r\n    });\r\n\r\n    let subAway = props.data.substitutions.away.map(c => \r\n        {\r\n\r\n            return {time:Number.parseInt(c.time),event:awayTeam + \" : \" + c.substitution,type:\"Substitution\"}\r\n\r\n        });\r\n\r\n    let subHome = props.data.substitutions.away.map(c => \r\n        {\r\n\r\n            return {time:Number.parseInt(c.time),event:homeTeam + \" : \" + c.substitution,type:\"Substitution\"}\r\n\r\n        });\r\n\r\n    let events = [].concat(cards,\r\n                      goalscorer,subAway,\r\n                      subHome)\r\n                      .sort((e1,e2) =>  e1.time - e2.time)\r\n                      .map((e) => \r\n                      {\r\n\r\n                        let isPositive = e.type === \"Goal\";\r\n\r\n                        let isNegative = e.type === \"Card\"\r\n\r\n                        let isWarning = e.type === \"Substitution\"\r\n\r\n                        return(<Table.Row positive={isPositive} negative={isNegative} warning={isWarning} >\r\n                            <Table.Cell>{e.time}</Table.Cell>                            \r\n                            <Table.Cell>{e.type}</Table.Cell>\r\n                            <Table.Cell>{e.event}</Table.Cell>\r\n                        </Table.Row>)\r\n\r\n                      });\r\n\r\n    \r\n\r\n\r\n    return (\r\n    \r\n    <div>\r\n    <h1>Visualisation of Events</h1>\r\n    <Table>\r\n        <Table.Header>\r\n            <Table.Row>\r\n                <Table.HeaderCell>Time (mins)</Table.HeaderCell>\r\n                <Table.HeaderCell>Type</Table.HeaderCell>\r\n                <Table.HeaderCell>Event</Table.HeaderCell>\r\n            </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n            {events}\r\n        </Table.Body>\r\n        \r\n    </Table>\r\n    <br/>\r\n    </div>)\r\n\r\n}\r\n\r\nexport default Visualisation;","import React, { Component } from 'react';\r\nimport PageHeader from './page-header.js';\r\nimport DataPair from \"./data-pair\"\r\nimport ReactJson from 'react-json-view'\r\nimport {bindStructuredData, bindUnstructureData} from \"../data-binding\";\r\nimport { Button, Loader, Message, Segment, Container, TextArea,Form,Header} from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport UnstructuredDataTable from \"./tables/unstructured-data-table\";\r\nimport Visualisation from \"./visualisation\"\r\n\r\nclass ViewMatch extends Component {\r\n\t\r\n\tconstructor(props)\r\n    {\r\n        \r\n        super(props)\r\n\r\n        //allow passing in of id for testing \r\n        let id = props.id === undefined ? \r\n        new URLSearchParams(props.location.search).get(\"id\") : props.id;\r\n\r\n        if(id === undefined || id === null)\r\n        {\r\n\r\n            throw new Error(\"id must be defined\")\r\n\r\n        }\r\n\r\n        this.state = {unstructuredData: [],data: [],isUnstructuredLoaded: false, isLoaded: false, isError: false, id:id,headerText:\"Loading\"}\r\n\r\n\r\n    }\r\n\r\n\t/**\r\n     * Handles any errors cuased by a sub-component \r\n     * @param {*} error the error recieved\r\n     * @param {*} errorInfo information about the error\r\n     */\r\n    componentDidCatch(error, errorInfo)\r\n    {\r\n\r\n        this.setState({isError: true});\r\n\r\n    }\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadData()\r\n    {\r\n\r\n        fetch(\"/StructuredData?id=\" + this.state.id)\r\n            .then(res => {\r\n                if(res.status === 401)\r\n                {\r\n\r\n                    window.location.href = \"/login-form\"                    \r\n\r\n                }\r\n\r\n                \r\n                \r\n                return res.json()})\r\n            .then(result => \r\n                {\r\n\r\n                    let data = bindStructuredData(result);\r\n\r\n                    let date = data.date;\r\n\r\n                    let dateString = date.getDate() + \"/\" + (date.getMonth()+1) + \"/\" + date.getFullYear();\r\n                    \r\n                    let headerText = data.home + \" vs \" + data.away + \" on \" + dateString; \r\n\r\n\t\t\t\t\tthis.setState({data:data,isLoaded: true, isError: false,headerText: headerText})\r\n                })\r\n            .catch(err => this.setState({isError: true,isLoaded:true}));\r\n\r\n\t}\r\n\t\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadUnstructuredData()\r\n    {\r\n\r\n        fetch(\"/getUnstructuredDataByMatchId?id=\" + this.state.id)\r\n            .then(res => {\r\n                if(res.status === 401)\r\n                {\r\n\r\n                    window.location.href = \"/login-form\"                    \r\n\r\n                }\r\n\r\n                \r\n                return res.json()})\r\n            .then(result => \r\n                {\r\n\r\n\t\t\t\t\tlet data = result.unstructuredData.map((d) => bindUnstructureData(d));\r\n                \r\n\r\n\r\n\t\t\t\t\tthis.setState({unstructuredData:data,isUnstructuredLoaded: true, isError: false})\r\n                })\r\n            .catch(err => this.setState({isError: true,isUnstructuredLoaded: true}));\r\n\r\n    }\r\n\r\n    /**\r\n     * loads the data if it is not already loaded\r\n     */\r\n\tloadIfNotAlready()\r\n\t{\r\n\r\n\t\tif(this.state.isLoaded === false)\r\n\t\t{\r\n\r\n\t\t\tthis.loadData();\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tloadUnstructuredIfNotAlready()\r\n\t{\r\n\r\n\t\tif(this.state.isUnstructuredLoaded === false)\r\n\t\t{\r\n\r\n\t\t\tthis.loadUnstructuredData();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trenderLoadedUnstructuredData()\r\n\t{\r\n\r\n\t}\r\n\r\n    /**\r\n     * renders the page in loading state \r\n     */\r\n\trenderLoaded()\r\n\t{\r\n\r\n        let date = this.state.data.date;\r\n\r\n        let dateString = date.getDay() + \"/\" + date.getMonth() + \"/\" + date.getFullYear();\r\n\r\n\t\treturn (\r\n\t\t\t\t\t\t\t\r\n                <div>\r\n                    \r\n                    <Container textAlign=\"left\">\r\n                        <Segment basic size=\"large\"><b>Date:</b>{dateString} <b>Competition:</b>{this.state.data.competitionName}</Segment>\r\n                    \t<Visualisation data={this.state.data.data}></Visualisation>\r\n                        <Header>Unstructured Data</Header>\r\n\t\t\t\t\t\t<UnstructuredDataTable items={this.state.unstructuredData}/>\r\n\t\t\t\t\t\t<Header>Structured Data</Header>\r\n                        <ReactJson src={this.state.data.data}/>   \r\n                        \r\n                    </Container>\r\n                    \r\n                    \r\n                </div>                  \r\n\t\t\t\t\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t /**\r\n     * Renders the page if an error has occured\r\n     */\r\n    renderError()\r\n    {\r\n\r\n        return(  \r\n        <Message negative>\r\n            <Message.Header>An error has occured</Message.Header>\r\n            <p>Failed to get data from the server.</p>\r\n            <Button color=\"red\" onClick={this.loadData.bind(this)}>Try Again?</Button>\r\n          </Message>\r\n          )\r\n\r\n    }\r\n\r\n    /**\r\n     * navigates to an edit page with parameters given by inputted edit\r\n     * @param {*} edit the edit inputted \r\n     */\r\n\trouteToData(data)\r\n\t{\r\n\r\n\t\tthis.props.history.push(\"/structured_data_page?id=\" + data.id + \"&isbackable=true\");\r\n\t\t\r\n\t}\r\n\r\n    /**\r\n     * renders the page if the data is still loading \r\n     */\r\n    renderLoading()\r\n    {\r\n\r\n        return(<Loader>Loading Data</Loader>)\r\n\r\n    }\r\n    \r\n    /**\r\n     * Chooses which render that should be rendered based on \r\n     * state of the object \r\n     */\r\n    executeRender()\r\n    {\r\n\r\n        if(this.state.isError)\r\n        {\r\n\r\n            return this.renderError();\r\n\r\n        }\r\n        else if(this.state.isLoaded)\r\n        {\r\n\r\n            return this.renderLoaded();\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            return this.renderLoading();\r\n\r\n        }\r\n\r\n    }\r\n\r\n\t\r\n\r\n    /**\r\n     * renders the page \r\n     */\r\n\trender() {\r\n\r\n\t\tthis.loadIfNotAlready();\r\n\r\n\t\tthis.loadUnstructuredIfNotAlready();\r\n\r\n\t\treturn (<div className=\"page\">\r\n\t\t\t<PageHeader \r\n\t\t\t\theader={this.state.headerText}\r\n\t\t\t\tsidebarVisible={this.props.sidebarVisible}\r\n\t\t\t\thandleSidebarClick={this.props.handleSidebarClick}\r\n\t\t\t/>\r\n\t\t\t<br/>\t\t\t\t\t\t\t    \r\n\t\t\t<div id=\"container\" style={{minHeight:\"100vh\"}}>\r\n\t\t\t\t{this.executeRender()}\r\n\t\t\t</div>\r\n\t\t</div>)\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport default withRouter(ViewMatch);\r\n","import {MAX_TITLE_SIZE} from \"./constants\"\r\nimport {UnstructuredData,StructuredData} from \"./domain\"\r\n\r\nfunction summariseStructuredData(data)\r\n{\r\n\r\n    \r\n\r\n    let date = data.date;\r\n\r\n    let dateString = date.getDate() + \"/\" + (date.getMonth()+1) + \"/\" + date.getFullYear();\r\n\r\n    let compName = data.competitionName\r\n\r\n    let versus = data.home + \" vs \" + data.away;\r\n\r\n    return dateString + \" - \" + compName + \" : \" + versus;\r\n\r\n\r\n}\r\n\r\n\r\nfunction summariseUnstructuredData(data)\r\n{\r\n\r\n\r\n    let date = data.published;\r\n\r\n    let dateString = (date.getDate()) + \"/\" + (date.getMonth()+1) + \"/\" + date.getFullYear();\r\n\r\n    let author = data.author;\r\n\r\n    let title = data.title;\r\n\r\n    if(title.length > MAX_TITLE_SIZE)\r\n    {\r\n\r\n        title = title.substring(0,MAX_TITLE_SIZE-3) + \"...\";\r\n\r\n    }\r\n\r\n    return dateString + \" - \" + author + \" : \" + title;\r\n\r\n}\r\n\r\nexport function genSummary(data)\r\n{\r\n\r\n\r\n    if(data === null || data === undefined)\r\n    {\r\n\r\n        return \"Entire Corpus\"\r\n\r\n    }\r\n    if(data instanceof StructuredData)\r\n    {\r\n\r\n        return summariseStructuredData(data);\r\n\r\n    }\r\n    else if(data instanceof UnstructuredData)\r\n    {\r\n\r\n        return summariseUnstructuredData(data)\r\n\r\n    }\r\n    else\r\n    {\r\n\r\n        return \"Entire Corpus\";\r\n\r\n    }\r\n\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Table, Container, Button, Form } from 'semantic-ui-react';\r\nimport { Edit} from \"../../domain\";\r\nimport { genSummary} from \"../../edit-utils\";\r\nimport DataTable from \"./data-table\"\r\n\r\n/**\r\n * shows a table of structured data \r\n * has the ability to select a row \r\n */\r\nclass EditListTable extends DataTable\r\n{\r\n\r\n    /**\r\n     * constructs a new structured data table\r\n     * data is mandatory however onSelect is optional \r\n     * @param {*} props the props passed in\r\n     */\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        let onOrderChangeFunc = undefined\r\n\r\n        if(this.props.onOrderChange != undefined)\r\n        {\r\n            onOrderChangeFunc = (isUp,data) => \r\n            {\r\n                this.props.onOrderChange(isUp,data);\r\n            }\r\n            \r\n        }\r\n        else\r\n        {\r\n            onOrderChangeFunc = () => {};\r\n        }\r\n\r\n        this.state.onOrderChangeFunc = onOrderChangeFunc;\r\n    }\r\n\r\n    genRows()\r\n    {\r\n\r\n\r\n\r\n        return this.props.items.edits.map((item, index) => (\r\n            <EditRow \r\n                key={item.editID} \r\n                data={{edit:item,target:this.props.items.targets[index]}} \r\n                onSelect={this.state.selectFunc} \r\n                onOrderChange={this.state.onOrderChangeFunc}\r\n                isActive={item.id == this.state.activeRow}\r\n            />\r\n        ))\r\n\r\n    }\r\n\r\n    genHeader()\r\n    {\r\n\r\n        return (<Table.Row>\r\n            <Table.HeaderCell>Target</Table.HeaderCell>\r\n            <Table.HeaderCell>Type</Table.HeaderCell>\r\n            <Table.HeaderCell>Summary</Table.HeaderCell>\r\n            <Table.HeaderCell>Order</Table.HeaderCell>\r\n        </Table.Row>)\r\n\r\n    }\r\n\r\n    isValidData()\r\n    {\r\n\r\n       \r\n        //borken into each predicate for easier debugging\r\n        if(this.props.items.edits.every((i) => \r\n        {\r\n            let isEditID = Number.isInteger(i.editID);\r\n            let isTargetValid = i.isCorpus || Number.isInteger(i.structuredDataID) || Number.isInteger(i.unstructuredDataID)\r\n            let isTypeValid = typeof(i.type) == \"string\";\r\n            let isSettingsValid = (typeof(i.settings) == \"object\" && i.type != \"replacewithfield\") || \r\n                (i.type == \"replacewithfield\" && typeof(i.settings) == \"object\" && i.settings !== undefined && i.settings !== null && typeof(i.settings.field) == \"string\");    \r\n            let isReplaceValid = typeof(i.replace) == \"string\";\r\n            let isReplaceWithValid = typeof(i.replaceWith) == \"string\";\r\n            return isEditID && isTargetValid && isTypeValid && isSettingsValid && isReplaceValid && isReplaceWithValid;\r\n        }) === false)\r\n        {\r\n\r\n            throw new Error(\"every piece of data should be a valid edit\");\r\n\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * builds a summary for an edit using it's type and other fields\r\n * @param {*} edit the edit to build a summary for \r\n */\r\nfunction SummaryBuilder(edit)\r\n{\r\n\r\n\r\n    switch(edit.type)\r\n    {\r\n\r\n        case \"replace\":\r\n                return <div><i>Replace: </i> {edit.replace}  <i> - with - </i>  {edit.replaceWith}</div>\r\n\r\n        case \"replacewithfield\":\r\n            return <div><i>Replace: </i> {edit.replace}  <i> - with - </i>  {edit.replaceWith} \r\n                <i> - on field - </i>  {edit.settings.field} </div>\r\n        case \"sequentialreplace\":\r\n                let replaces = edit.replace.split(\",\");\r\n\r\n                let withs = edit.replaceWith.split(\",\");\r\n\r\n                let items = replaces.map((r,index) => (<div>{r} <i> - with - </i> {withs[index]}</div>));\r\n\r\n                if(items.length <= 5)\r\n                {\r\n\r\n                    return <div><i>Replace All: </i> {items}</div>\r\n\r\n                }\r\n                else\r\n                {\r\n\r\n                    items = items.slice(0,5);\r\n\r\n                    return <div><i>Replace All: </i> {items}<div>...</div></div>\r\n\r\n                }\r\n                \r\n        default:\r\n            return \"Error\";\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n/**\r\n * formats the type field of an edit to something more human readable\r\n * @param {*} edit the edit to return the formatted type field to\r\n */\r\nfunction FormatType(edit)\r\n{\r\n\r\n    switch(edit.type)\r\n    {\r\n\r\n        case \"replace\":\r\n            return \"Replace\"\r\n\r\n        case \"replacewithfield\":\r\n            return \"Replace with Field\"\r\n        case \"sequentialreplace\":\r\n            return \"Sequential Replace\"\r\n        default:\r\n            return \"Error\";\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Represents a row of the edit list table\r\n * as this component isn't exported no additional validation is done \r\n * by this component \r\n * @param {*} props \r\n */\r\nfunction EditRow(props)\r\n{\r\n\r\n    if((props.data.edit instanceof Edit) == false)\r\n    {\r\n\r\n        throw Error(\"props.data must be an instance of edit\");\r\n\r\n    }\r\n    \r\n\r\n    let edit = props.data.edit;\r\n\r\n    let target = props.data.target;\r\n\r\n    let selectFunc = props.onSelect != undefined ? props.onSelect : () => {};\r\n\r\n    let orderFunc = props.onOrderChange !== undefined ? props.onOrderChange : () => {};\r\n\r\n    return(\r\n        <Table.Row >\r\n            <Table.Cell onClick={() => selectFunc(props.data.edit)} active={props.isActive}>{genSummary(target)}</Table.Cell>\r\n            <Table.Cell onClick={() => selectFunc(props.data.edit)} active={props.isActive}>{FormatType(edit)}</Table.Cell>\r\n            <Table.Cell onClick={() => selectFunc(props.data.edit)} active={props.isActive}>{SummaryBuilder(edit)}</Table.Cell>\r\n            <Table.Cell>\r\n                <div>\r\n                    <Button onClick={() => orderFunc(true,props.data.edit)}>Up</Button>\r\n                    <Button onClick={() => orderFunc(false,props.data.edit)}>Down</Button>\r\n                </div>\r\n            </Table.Cell>\r\n        </Table.Row>\r\n    );\r\n    \r\n}\r\n\r\nexport default EditListTable;","import React, { Component } from 'react';\r\nimport { Tab, Button, Header, Modal, Loader, Message, Container } from 'semantic-ui-react';\r\nimport StructuredDataTable from './tables/structured-data-table';\r\nimport {StructuredData,UnstructuredData} from \"../domain\";\r\nimport UnstructuredDataTable from \"./tables/unstructured-data-table\";\r\nimport {bindStructuredData,bindUnstructureData} from \"../data-binding\";\r\n\r\n\r\n/**\r\n * Shows all unstructured and structured data and allows the user\r\n * to select a piece of data \r\n */\r\nclass ChooseDataModal extends Component\r\n{ \t\r\n\r\n    constructor(props)\r\n    {\r\n\r\n        super(props);\r\n      \r\n        if(typeof(this.props.onSelect) != \"function\")\r\n        {\r\n\r\n            throw Error(\"Choose Data Modal requires onSelect prop which is a function\")\r\n\r\n        }  \r\n\r\n        this.state = {isLoaded: false,\r\n                    data: undefined,\r\n                    isError: false,\r\n                    lastSelectedId: -1,\r\n                    lastSelectedIsStructued: false,\r\n                    isModalOpen: false,\r\n                    selectedItem: undefined,\r\n                    isNoChooseError: false};\r\n\r\n    }\r\n\r\n    /**\r\n     * Handles any errors cuased by a sub-component \r\n     * @param {*} error the error recieved\r\n     * @param {*} errorInfo information about the error\r\n     */\r\n    componentDidCatch(error, errorInfo)\r\n    {\r\n\r\n        this.setState({isError: true});\r\n\r\n    }\r\n\r\n    /**\r\n     * Loads all unstructured and structured data \r\n     * and binds those objects to structured or unstructured data types \r\n     */\r\n    loadData()\r\n    {\r\n\r\n        fetch(\"/allchooseableData\")\r\n            .then(res => {\r\n            \r\n                if(res.status === 401)\r\n                {\r\n\r\n                    window.location.href = \"/login-form\"                    \r\n\r\n                }                \r\n\r\n                return res.json()\r\n            })\r\n            .then(result => \r\n                {\r\n\r\n                    result.structuredData = result.structuredData.map((d) => bindStructuredData(d));\r\n\r\n                    result.unstructuredData = result.unstructuredData.map((d) => bindUnstructureData(d));\r\n\r\n                    this.setState({data:result,isLoaded: true, isError: false});\r\n\r\n                })\r\n            .catch(err => this.setState({isError: true}));\r\n\r\n    }\r\n\r\n    /**\r\n     * handles the click on the choose button\r\n     * will update state to display an error if no item is selected\r\n     */\r\n    handleChooseButtonClick()\r\n    {\r\n\r\n\r\n        if(this.state.lastSelectedId != -1)\r\n        {\r\n\r\n            this.props.onSelect(this.state.selectedItem);\r\n\r\n            this.handleClose();\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            this.setState({isNoChooseError: true});\r\n            \r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * handles the selection of data\r\n     * @param {*} data should be type unstructured or structured data \r\n     */\r\n    handleSelection(data)\r\n    {\r\n\r\n        let isStructured = (data instanceof StructuredData) === true ? true : false;\r\n\r\n        let isSameType = this.state.lastSelectedIsStructued === isStructured;\r\n\r\n        if(isSameType && data.id === this.state.lastSelectedId)\r\n        {\r\n\r\n            this.props.onSelect(data);      \r\n\r\n            this.setState({isModalOpen: false,isNoChooseError: false});\r\n\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            this.setState({lastSelectedIsStructued: isStructured,lastSelectedId: data.id,selectedItem: data});\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Renders the page if the data has been loaded \r\n     */\r\n    renderLoaded()\r\n    {\r\n\r\n        return(<div>\r\n            <Tab menu={{pointing:true}} panes={\r\n            [\r\n                { menuItem: 'Structured Data', \r\n                    render: () => \r\n                        <Tab.Pane>\r\n                        <StructuredDataTable items={this.state.data.structuredData} \r\n                            onSelect={this.handleSelection.bind(this)}/>\r\n                        </Tab.Pane> \r\n                },\r\n                { menuItem: 'Unstructured Data', \r\n                    render: () => <Tab.Pane>\r\n                                <UnstructuredDataTable items={this.state.data.unstructuredData} \r\n                                    onSelect={this.handleSelection.bind(this)} />\r\n                                </Tab.Pane> \r\n                }\r\n\r\n            ]}/>\r\n            <Message warning attached hidden={! this.state.isNoChooseError}>\r\n                Please select an item before clicking choose. You can select an item by clicking on a table row\r\n            </Message>\r\n            <br/>\r\n            <Button primary onClick={this.handleChooseButtonClick.bind(this)}>Choose</Button>\r\n            </div>);\r\n\r\n    }\r\n\r\n    /**\r\n     * Renders the page if an error has occured\r\n     */\r\n    renderError()\r\n    {\r\n\r\n        return(  \r\n        <Message negative>\r\n            <Message.Header>An error has occured</Message.Header>\r\n            <p>Failed to get data from the server.</p>\r\n            <Button color=\"red\" onClick={this.loadData.bind(this)}>Try Again?</Button>\r\n          </Message>\r\n          )\r\n\r\n    }\r\n\r\n    /**\r\n     * renders the page if the data is still loading \r\n     */\r\n    renderLoading()\r\n    {\r\n\r\n        return(<Loader>Loading Data</Loader>)\r\n\r\n    }\r\n    \r\n    /**\r\n     * Chooses which render that should be rendered based on \r\n     * state of the object \r\n     */\r\n    executeRender()\r\n    {\r\n\r\n        if(this.state.isError)\r\n        {\r\n\r\n            return this.renderError();\r\n\r\n        }\r\n        else if(this.state.isLoaded)\r\n        {\r\n\r\n            return this.renderLoaded();\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            return this.renderLoading();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * handles modal opening \r\n     */\r\n    handleOpen(){this.setState({isModalOpen: true})}\r\n\r\n    /**\r\n     * handles the modal closing\r\n     */\r\n    handleClose(){\r\n        this.setState({\r\n            isModalOpen: false,\r\n            lastSelectedId: -1,\r\n            lastSelectedIsStructued: false,\r\n            isNoChooseError: false,\r\n            selectedItem: undefined});}\r\n\r\n\r\n    /**\r\n     * renders the component \r\n     */\r\n    render()\r\n    {\r\n              \r\n        let loadIfNotAlready = () => \r\n        {\r\n\r\n\r\n            if(this.state.isLoaded === false)\r\n            {\r\n\r\n                this.loadData();\r\n\r\n            }\r\n\r\n        }\r\n        \r\n        return (\r\n            <Modal \r\n                closeIcon\r\n                onOpen={loadIfNotAlready.bind(this)}  \r\n                trigger={<Button primary onClick={this.handleOpen.bind(this)}>{this.props.text !== undefined ? this.props.text : \"Change\"}</Button>}\r\n                onClose={this.handleClose.bind(this)}\r\n                open={this.state.isModalOpen}>\r\n                <Modal.Header>Choose Data</Modal.Header>\r\n                <Modal.Content>                                    \r\n                <Modal.Description>\r\n                    <Header>Please select a piece of data to apply the edit to</Header>\r\n                    <br/>\r\n                </Modal.Description>\r\n                    {this.executeRender()}\r\n                </Modal.Content>\r\n            </Modal>\r\n        );\r\n        \r\n\t\r\n    }\r\n}\r\n\r\nexport default ChooseDataModal;","import React, { Component } from 'react';\r\nimport EditListTable from \"../tables/edit-list-table\";\r\nimport {bindEdit, bindUnstructureData, bindStructuredData} from \"../../data-binding\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport ListPage from \"./list-page\"\r\nimport {Form, Container, Loader, Dimmer} from 'semantic-ui-react';\r\nimport {EDIT_TYPES,EDIT_NAMES} from \"../../constants\";\r\nimport DataPair from \"../data-pair\";\r\nimport ChooseDataModal from \"../choose-data-modal\";\r\nimport {SearchRequest} from \"../../domain\"\r\nimport {genSummary} from \"../../edit-utils\";\r\nimport {StructuredData,UnstructuredData} from \"../../domain\";\r\n\r\nexport class EditList extends ListPage {\r\n\r\n\tconstructor(props)\r\n\t{\r\n\r\n\t\tsuper(props)\r\n        \r\n        this.state.headerText = \"Edit List\"\r\n        this.state.route = \"editList\"\r\n        this.state.replaceTypes = this.genDropDownItems(EDIT_TYPES,EDIT_NAMES)\r\n        this.state.isCorpusSearchChecked = undefined; \r\n        this.state.corpusChoices = this.genDropDownItems([true,false],[\"yes\",\"no\"])\r\n        this.state.searchTarget = undefined;\r\n        this.state.unstructuredDataSearches = {};\r\n        this.state.structuredDataSearches ={};\r\n\r\n\t}\r\n\r\n    /**\r\n     * creates the body of a request with three different categories of searches \r\n     */\r\n    genBody()\r\n    {\r\n\r\n        return{editSearches:Object.values(this.state.searches),\r\n                unstructuredDataSearches:Object.values(this.state.unstructuredDataSearches),\r\n                structuredDataSearches:Object.values(this.state.structuredDataSearches) }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * creates a text searches on the edit and it's target\r\n     * @param {*} e not used\r\n     * @param {*} param1 the name and value of the search\r\n     */\r\n    handleTextSearchChange(e,{name,value})\r\n    {\r\n\r\n        this.state.unstructuredDataSearches[name] = new SearchRequest(\"text\",value,[\"author\",\"title\"]);\r\n\r\n        this.state.structuredDataSearches[name] = new SearchRequest(\"text\",value,[\"competitionName\",\"home\",\"away\"])\r\n\r\n        this.handleSearchChange(name,new SearchRequest(\"text\",value,[\"replace\",\"replaceWith\",\"type\"]));\r\n\r\n    }\r\n\r\n    handleOrderChange(isUp,edit)\r\n    {\r\n\r\n        let body = JSON.stringify({isUp:isUp,edit:edit})\r\n\r\n        this.setState({isLoaded:false})\r\n\r\n    \r\n        fetch(\"reorder_edit\",{method:\"POST\",body:body,headers: {\r\n            'Content-Type': 'application/json'\r\n        }}).then(res => \r\n            {\r\n\r\n                if(res.status === 401)\r\n                {\r\n\r\n                    window.location.href = \"/login-form\"                    \r\n\r\n                }\r\n\r\n                if(res.ok)\r\n                {\r\n                    \r\n\r\n                    this.sendRequest(this.state.searches);\r\n\r\n                }\t\t\t\t\r\n\r\n            }).catch(err => \r\n                {\r\n                   \r\n\r\n                    this.setState({isError: true})\r\n                });\r\n\r\n    }\r\n\r\n\t/**\r\n\t * Generates summary text of the target of the edit \r\n\t */\r\n\tgenDataSummaryText()\r\n\t{\t\r\n\r\n        let target = this.state.searchTarget;\r\n\r\n        let summary = genSummary(target)\r\n\r\n\t\treturn summary === \"Entire Corpus\" ? \"No Data Selected\" : summary\r\n\r\n\t}\r\n\r\n\r\n    /**\r\n\t * Generates drop down list items from a list of items (values) and names\r\n\t * @param {*} items the values to be stored in the object\r\n\t * @param {*} names the name of the field \r\n\t */\r\n\tgenDropDownItems(items,names)\r\n\t{\r\n\r\n\t\treturn items.map((item,index) => \r\n\t\t{\r\n\r\n\t\t\t//taken from https://stackoverflow.com/questions/7225407/convert-camelcasetext-to-sentence-case-text\r\n\t\t\tlet text = names !== undefined ? names[index] : item.replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\").charAt(0).toUpperCase()+item.slice(1).replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\");\r\n\r\n\t\t\treturn {key:item,text:text,value:item};\r\n\r\n\t\t})\r\n\r\n    }\r\n    \r\n\r\n    /**\r\n     * handle chosen data by creating a search for that specific piece of data \r\n     * @param {*} chosenData \r\n     */\r\n    handleChosenData(chosenData)\r\n    {\r\n\r\n        this.setState({isCorpusSearchChecked:false,searchTarget:chosenData})\r\n\r\n        if(chosenData instanceof StructuredData)\r\n\t\t{\r\n\r\n\t\t\tthis.handleSearchChange(\"target\",new SearchRequest(\"exact\",chosenData.id,\"structuredDataID\"));\r\n\r\n\t\t}\r\n\t\telse if(chosenData instanceof UnstructuredData)\r\n\t\t{\r\n\r\n\t\t\tthis.handleSearchChange(\"target\",new SearchRequest(\"exact\",chosenData.id,\"unstructuredDataID\"))\r\n\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\r\n\t\t\tthis.setState({isError: true});\r\n\r\n\t\t}\r\n\r\n    }\r\n\r\n     /**\r\n     * Handles any errors cuased by a sub-component \r\n     * @param {*} error the error recieved\r\n     * @param {*} errorInfo information about the error\r\n     */\r\n    componentDidCatch(error, errorInfo)\r\n    {\r\n\r\n        this.setState({isError: true});\r\n\r\n    }\r\n\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadData(result)\r\n    {\r\n\r\n        let editList = result.editList.map((d) => bindEdit(d));\r\n\r\n        let unstructuredData = result.unstructuredData.map((u) => bindUnstructureData(u))\r\n\r\n        let structuredData = result.structuredData.map((u) => bindStructuredData(u)); \r\n\r\n        let allData = structuredData.concat(unstructuredData);\r\n\r\n        let target = [];\r\n\r\n        editList.forEach((e,index) => target[index] = allData\r\n                .find((i) => i.id === e.structuredDataID || i.id === e.unstructuredDataID))\r\n\r\n        this.setState({data:editList,isLoaded: true, isError: false,target: target})               \r\n            \r\n    }\r\n\r\n    /**\r\n     * renders the search component on thep list page \r\n     */\r\n    renderSearch()\r\n    {\r\n\r\n        return(\r\n            <div>\r\n                    \r\n                \r\n                    <Form.Input\r\n                    placeholder=\"search\"\r\n                    name=\"search\"\r\n                    icon=\"search\"\r\n                    onChange={this.handleTextSearchChange.bind(this)}\r\n                    />\r\n                    <Form.Group inline>\r\n                        <Form.Select \r\n                        clearable\r\n                        placeholder='Search by Type'\r\n                        name='type'\r\n                        options={this.state.replaceTypes}\r\n                        label=\"Type:\"                        \r\n                        onChange={(e,{name,value}) => \r\n                            this.handleSearchChange(name,new SearchRequest(\"exact\",value,\"type\"))}\r\n                        />\r\n                        <Form.Select \r\n                        clearable\r\n                        placeholder='yes/no'\r\n                        name='isCorpus'\r\n                        options={this.state.corpusChoices}\r\n                        label=\"Entire Corpus:\"\r\n                        value={this.state.isCorpusSearchChecked}\r\n                        onChange={(e,{name,value}) => \r\n                        {\r\n                            this.setState({isCorpusSearchChecked:value},() => \r\n                            this.handleSearchChange(name,\r\n                                new SearchRequest(\"exact\",value,\"isCorpus\")));                            \r\n                        }}                        \r\n                        />\r\n                        {this.state.isCorpusSearchChecked ? true : <DataPair label=\"Data\" text={this.genDataSummaryText()}/>}\r\n\t\t\t\t\t    {this.state.isCorpusSearchChecked ? true : <ChooseDataModal onSelect={this.handleChosenData.bind(this)}></ChooseDataModal>}\r\n                    </Form.Group>\r\n            </div>\r\n        \r\n                        \r\n        )\r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * renders the page in loading state \r\n     */\r\n\trenderLoaded()\r\n\t{\r\n\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p> A list of all edits. Click on an edit to view it in detail </p>\t\t\t\t\r\n\t\t\t\t\t<div id=\"container\">\r\n                            <EditListTable \r\n                            totalPages={this.state.totalPages}\r\n                            onOrderChange={this.handleOrderChange.bind(this)}\r\n                            onPageChange={this.handlePageChange.bind(this)}\r\n                            page={this.state.page}\r\n                            paging={this.state.paging}                        \r\n                            onSelect={this.routeToEdit.bind(this)} \r\n                            items={{edits:this.state.data,targets:this.state.target}}/>\r\n                        \r\n                       \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n\r\n    /**\r\n     * navigates to an edit page with parameters given by inputted edit\r\n     * @param {*} edit the edit inputted \r\n     */\r\n\trouteToEdit(edit)\r\n\t{\r\n\r\n\t\tthis.props.history.push(\"/add_edit?id=\" + edit.editID + \"&isbackable=true\");\r\n\t\t\r\n\t}\r\n\r\n}\r\n\r\nexport default withRouter(EditList);","import React, { Component } from 'react';\r\nimport { Form, Container, Button, Message} from 'semantic-ui-react'\r\nimport ChooseDataModal from \"./choose-data-modal\";\r\nimport {bindEdit,bindStructuredData,bindUnstructureData} from \"../data-binding\";\r\nimport {Edit,StructuredData,UnstructuredData} from \"../domain\";\r\nimport {STRUCTURED_DATA_FIELDS,EDIT_TYPES,EDIT_NAMES} from \"../constants\"\r\nimport DataPair from \"./data-pair\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport {genSummary} from \"../edit-utils\";\r\n\r\n/**\r\n * An edit form which for creating and editing edits\r\n */\r\nexport class EditForm extends Component {\r\n\r\n\t/**\r\n\t * Creates a new edit form\r\n\t * @param {*} props id if passed in must be a number, data may be passed and should be\r\n\t * an instance of edit \r\n\t */\r\n\tconstructor(props)\r\n\t{\r\n\r\n\t\tsuper(props)\t\r\n\r\n\t\tlet id = Number.parseInt(props.id)\r\n\t\r\n\t\tif(this.props.id !== undefined && this.props.id !== null && Number.isInteger(id) === false)\r\n\t\t{\r\n\r\n\t\t\tthrow new Error(\"Id must be a number\");\r\n\r\n\t\t}\r\n\r\n\t\tif(props.data !== undefined && (props.data instanceof Edit) === false )\r\n\t\t{\r\n\r\n\t\t\tthrow new Error(\"inputted data must be of type edit\");\r\n\r\n\t\t}\r\n\t\t\r\n\t\tthis.state = {data: props.data,\r\n\t\t\ttarget: props.target,\r\n\t\t\tqueryId:id,\r\n\t\t\tisNew:(this.props.id === undefined || this.props.id === null) && props.data === undefined,\r\n\t\t\tisMissing:false,\r\n\t\t\tisError:false,\r\n\t\t\thasData: props.data !== undefined,\r\n\t\t\tisSaveSuccessful: false,\r\n\t\t\treplaceTypes: this.genDropDownItems(EDIT_TYPES,EDIT_NAMES),\r\n\t\t\tfieldTypes: this.genDropDownItems(STRUCTURED_DATA_FIELDS),\r\n\t\t\tisSaving: false,\r\n\t\t\t//validation state properties \r\n\t\t\tisSaveAttempted: false,\r\n\t\t\tisValid: {settings:{}}\r\n\t\t\t}\t\r\n\r\n\r\n\t\tif(this.state.isNew)\r\n\t\t{\r\n\r\n\t\t\tthis.state.data = new Edit(null,null,null,false,{},\"\",\"\",\"\")\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t//********************** GENERATORS **********************//\r\n\r\n\t/**\r\n\t * Generates drop down list items from a list of items (values) and names\r\n\t * @param {*} items the values to be stored in the object\r\n\t * @param {*} names the name of the field \r\n\t */\r\n\tgenDropDownItems(items,names)\r\n\t{\r\n\r\n\t\treturn items.map((item,index) => \r\n\t\t{\r\n\r\n\t\t\t//taken from https://stackoverflow.com/questions/7225407/convert-camelcasetext-to-sentence-case-text\r\n\t\t\tlet text = names !== undefined ? names[index] : item.replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\").charAt(0).toUpperCase()+item.slice(1).replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\");\r\n\r\n\t\t\treturn {key:item,text:text,value:item};\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Generates error messages if the field is in an error state\r\n\t * @param {*} value the value to check (key)\r\n\t * @param {*} message the message if in error state\r\n\t */\r\n\tgenIsError(value,message)\r\n\t{\r\n\r\n\t\r\n\r\n\t\tlet {isValid,isSaveAttempted} = this.state;\t\t\r\n\r\n\t\tif(isValid[value] === undefined || isValid[value] === true || isSaveAttempted === false )\r\n\t\t{\t\r\n\r\n\t\t\treturn undefined;\r\n\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\r\n\t\t\treturn {content:message}\t\t\t\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generate error message if a field in the setting is in an erro state\r\n\t * @param {*} value the value in the settings (key)\r\n\t * @param {*} message the message to be rendered if in an error state \r\n\t */\r\n\tgenIsErrorSettings(value,message)\r\n\t{\r\n\r\n\t\tlet {isValid,isSaveAttempted} = this.state; \r\n\r\n\t\tif((isValid[\"settings\"] === undefined || isValid[\"settings\"][value]  || isValid[\"settings\"][value]) || isSaveAttempted === false)\r\n\t\t{\r\n\r\n\t\t\treturn undefined;\r\n\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\r\n\t\t\treturn {content:message}\t\t\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Generates summary text of the target of the edit \r\n\t */\r\n\tgenDataSummaryText()\r\n\t{\r\n\r\n\t\tlet target = this.state.target;\r\n\r\n\t\tlet summary = genSummary(target)\r\n\r\n\t\treturn summary === \"Entire Corpus\" ? \"No Data Selected\" : summary\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * updates the settings fields based\r\n\t * ont the type of edit \r\n\t * @param {*} edit \r\n\t */\r\n\tupdateSettingsOnTypeChange(edit)\r\n\t{\r\n\r\n\t\tswitch(edit.type)\r\n\t\t{\r\n\r\n\t\t\tcase \"replace\":\r\n\t\t\t\tdelete edit.settings.field;\r\n\t\t\t\treturn;\r\n\r\n\t\t\tcase \"replacewithfield\":\r\n\t\t\t\tedit.settings.field = undefined;\r\n\t\t\t\treturn; \r\n\t\t\t\r\n\r\n\t\t}\r\n\r\n\t}\r\n\t//********************** Validation **********************//\r\n\r\n\t/**\r\n\t * Checks if an edit has valid properties.\r\n\t * Adds the isValid object which lists for each property if it\r\n\t * is valid or invalid\r\n\t * @param {*} edit the edit to validate \r\n\t */\r\n\tisEditValid(edit)\r\n\t{\r\n\t\r\n\t\tlet isValidObj = {};\t\t\r\n\r\n\t\tlet isValid = true;\r\n\r\n\t\tObject.keys(edit).forEach((item) => \r\n\t\t{\r\n\r\n\t\t\tlet isFieldValid = this.isFieldValid(edit,item);\r\n\r\n\t\t\tisValidObj[item] = isFieldValid;\r\n\r\n\t\t\tisValid = isValid ? isFieldValid : false;\r\n\r\n\t\t})\r\n\t\r\n\t\t//weird implementation detail\r\n\t\t//but the validity of the setting object is overwritten\r\n\t\t//but if it's not valid then the next operation is skipped \r\n\t\t//and it returns false anyway. \r\n\t\tisValidObj.settings = {};\r\n\r\n\t\tif(edit.settings === undefined || edit.settings === null)\r\n\t\t{\r\n\r\n\t\t\tedit.settings = {};\r\n\r\n\t\t}\r\n\r\n\t\tObject.keys(edit.settings).forEach((item) => \r\n\t\t{\r\n\r\n\t\t\tlet isSettingValid = this.isSettingValid(edit,item);\r\n\r\n\t\t\tisValidObj.settings[item] = true;\r\n\r\n\t\t\tisValid = isValid ? isSettingValid : false; \r\n\r\n\t\t})\r\n\r\n\t\tthis.setState({isValid:isValidObj})\r\n\r\n\t\treturn isValid; \r\n\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a field is valid \r\n\t * @param {*} edit the edit to validate the field for\r\n\t * @param {*} field the name of the property \r\n\t */\r\n\tisFieldValid(edit,field)\r\n\t{\r\n\r\n\t\tlet value = edit[field];\r\n\r\n\t\tlet validateText = (t) => \r\n\t\t{\r\n\r\n\t\t\treturn t.length > 0; \r\n\r\n\t\t}\r\n\r\n\t\tswitch(field)\r\n\t\t{\r\n\r\n\t\t\tcase \"replace\":\r\n\t\t\t\treturn validateText(value);\r\n\r\n\t\t\tcase \"type\":\r\n\t\t\t\treturn EDIT_TYPES.includes(value);\r\n\r\n\t\t\tcase \"isCorpus\":\r\n\t\t\t\treturn (value === true && edit.structuredDataID == null && edit.unstructuredDataID == null) ||\r\n\t\t\t\t\tvalue === false && (Number.isInteger(edit.structuredDataID) || Number.isInteger(edit.unstructuredDataID));\r\n\r\n\t\t\tcase \"replaceWith\":\r\n\t\t\t\treturn validateText(value);\r\n\t\t\t\r\n\t\t\tcase \"editID\":\r\n\t\t\t\treturn Number.isInteger(value) || value === undefined || value === null;\r\n\t\t\t\r\n\t\t\tcase \"settings\": \r\n\t\t\t\treturn typeof(value) === \"object\";\r\n\r\n\t\t\tcase \"structuredDataID\":\r\n\t\t\t\treturn (Number.isInteger(value) && edit.unstructuredDataID === null && edit.isCorpus === false) ||\r\n\t\t\t\t\tvalue === null && (edit.isCorpus || Number.isInteger(edit.unstructuredDataID));\t\t\t\t\r\n\r\n\t\t\tcase \"unstructuredDataID\":\r\n\t\t\t\t\treturn (Number.isInteger(value) && edit.structuredDataID === null && edit.isCorpus === false) ||\r\n\t\t\t\t\tvalue === null && (edit.isCorpus || Number.isInteger(edit.structuredDataID));\r\n\r\n\t\t\tcase \"order\":\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\t\treturn false; \r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * checks if a field on the settings is valid\r\n\t * @param {*} edit the edit to validate\r\n\t * @param {*} field the field to validate \r\n\t */\r\n\tisSettingValid(edit,field)\r\n\t{\t\r\n\r\n\t\tlet value = edit.settings[field];\r\n\r\n\t\tswitch(field)\r\n\t\t{\r\n\r\n\t\t\tcase \"field\":\r\n\t\t\t\treturn STRUCTURED_DATA_FIELDS.includes(value);\r\n\t\t\t\r\n\t\t\tcase \"fields\":\r\n\t\t\t\treturn value.every((f) => STRUCTURED_DATA_FIELDS.includes(f));\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t//********************** HANDLERS **********************//\r\n\r\n\t/**\r\n\t * handles changes in text inputs or drop downs\r\n\t * @param {*} e not used\r\n\t * @param {*} param1 the name and value of the control\r\n\t */\r\n\thandleChange(e, { name, value })\r\n\t{\r\n\r\n\t\tlet data = this.state.data; \r\n\r\n\t\tdata[name] = value;\r\n\r\n\t\tthis.updateSettingsOnTypeChange(data);\r\n\r\n\t\tthis.state.isValid[name] = this.isFieldValid(data,name);\r\n\r\n\t\tthis.setState({ data: data, isValid:this.state.isValid });\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles changes in the settings \r\n\t * @param {*} e not used\r\n\t * @param {*} param1 the name and value of the control \r\n\t */\r\n\thandleSettingChange(e,{name, value})\r\n\t{\r\n\r\n\t\tlet data = this.state.data; \r\n\r\n\t\tdata.settings[name] = value;\r\n\r\n\t\tthis.state.isValid.settings[name] = this.isSettingValid(data,name);\r\n\r\n\t\tthis.setState({ data: data, isValid:this.state.isValid })\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * handles changes in the isCorpus text box \r\n\t */\r\n\thandleChecked()\r\n\t{\r\n\r\n\t\tlet data = this.state.data;\r\n\r\n\t\tdata.isCorpus = ! data.isCorpus\r\n\r\n\t\tif(data.isCorpus)\r\n\t\t{\r\n\r\n\t\t\tdata.unstructuredDataID = null;\r\n\r\n\t\t\tdata.structuredDataID = null;\r\n\r\n\t\t}\r\n\r\n\t\tthis.state.isValid.isCorpus = this.isFieldValid(data,\"isCorpus\");\r\n\r\n\t\tthis.setState({data:data,isValid:this.state.isValid,target:undefined})\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles choosing data in the data choosing modal\r\n\t * @param {*} chosenData the choosen data \r\n\t */\r\n\thandleChosenData(chosenData)\r\n\t{\r\n\r\n\t\tlet edit = this.state.data;\r\n\r\n\t\t//reset\r\n\t\tedit.structuredDataID = null;\r\n\r\n\t\tedit.unstructuredDataID = null;\r\n\r\n\t\tif(chosenData instanceof StructuredData)\r\n\t\t{\r\n\r\n\t\t\tedit.structuredDataID = chosenData.id;\r\n\r\n\t\t}\r\n\t\telse if(chosenData instanceof UnstructuredData)\r\n\t\t{\r\n\r\n\t\t\tedit.unstructuredDataID = chosenData.id;\r\n\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\r\n\t\t\tthis.setState({isError: true});\r\n\r\n\t\t}\r\n\r\n\t\tthis.state.isValid.isCorpus = this.isFieldValid(edit,\"isCorpus\");\r\n\r\n\r\n\t\tthis.setState({data:edit,isValid:this.state.isValid,target: chosenData});\r\n\r\n\t}\r\n\r\n\t//********************** SERVER COMMUNICATION **********************//\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadData()\r\n    {\r\n\r\n        fetch(\"/edit?id=\" + this.state.queryId )\r\n\t\t\t.then(res => \r\n\t\t\t\t{\t\t\t\t\r\n\r\n\t\t\t\t\tif(res.status === 401)\r\n\t\t\t\t\t{\r\n\t\r\n\t\t\t\t\t\twindow.location.href = \"/login-form\"                    \r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(res.ok)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn res.json()\r\n\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t\telse if(res.status == 404)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\tthrow new Error(404);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse \r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\tthrow new Error(500);\r\n\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t})\r\n            .then(result => \r\n                {\r\n\t\t\t\t\tlet edit = bindEdit(result.edit);\r\n\r\n\t\t\t\t\tlet unstructuredData = result.unstructuredData !== undefined && result.unstructuredData !== null\r\n\t\t\t\t\t\t? bindUnstructureData(result.unstructuredData) : undefined;\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet structuredData = result.structuredData !== undefined && result.structuredData !== null\r\n\t\t\t\t\t\t ? bindStructuredData(result.structuredData) : undefined;\r\n\r\n\t\t\t\t\tlet target = unstructuredData === undefined ? structuredData : unstructuredData;\r\n\r\n\t\t\t\t\tthis.setState({data:edit,hasData:true,isError:false,target: target})\r\n                })\r\n            .catch(err => {\r\n\r\n\t\t\t\t\r\n\t\t\t\tswitch(err.message)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\r\n\t\t\t\t\tcase \"404\":\r\n\t\t\t\t\t\tif(! this.state.isMissing)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.setState({isMissing: true })\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\tdefault: \r\n\t\t\t\t\t\tif(! this.state.isError)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.setState({isError: true})\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Saves the data. Post if a new edit, put if an old edit \r\n\t */\r\n\tsaveData()\r\n\t{\r\n\r\n\r\n\t\tlet method = this.state.isNew ? \"POST\" : \"PUT\";\r\n\r\n\t\tif(this.isEditValid(this.state.data))\r\n\t\t{\r\n\t\t\r\n\t\t\tthis.setState({isSaving: true})\r\n\r\n\t\t\tfetch(\"/edit\",\r\n\t\t\t{method: method,\r\n\t\t\tbody: JSON.stringify(this.state.data),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}}).then((res) => \r\n\t\t\t{\r\n\r\n\t\t\t\tif(res.status === 401)\r\n                {\r\n\r\n                    window.location.href = \"/login-form\"                    \r\n\r\n                }\r\n\r\n\r\n\t\t\t\tif(res.ok)\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tif(this.state.isNew)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\tthis.setState({data:new Edit(null,null,null,false,{},\"\",\"\",\"\"),isSaveSuccessful:true,isSaveAttempted:false,isSaving:false})\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\tthis.props.history.goBack();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({isError: true,hasData: false,isSaving: false });\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\r\n\t\t\tthis.setState({isSaveAttempted: true});\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sends a delete request for the data \r\n\t */\r\n\tdeleteData()\r\n\t{\r\n\r\n\t\tfetch(\"/edit?id=\" + this.state.data.editID,\r\n\t\t\t{method: \"DELETE\",\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}}).then((res) => \r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\tif(res.status === 401)\r\n                {\r\n\r\n                    window.location.href = \"/login-form\"                    \r\n\r\n                }\r\n\r\n\r\n\t\t\t\tif(res.ok)\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tthis.props.history.goBack();\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({isError: true,hasData: false});\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n    /**\r\n     * loads the data if it is not already loaded\r\n     */\r\n\tloadIfNotAlready()\r\n\t{\r\n\r\n\t\tif(this.state.hasData === false && this.state.isNew === false)\r\n\t\t{\r\n\t\t\r\n\t\t\tthis.loadData();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\t//********************** RENDERS COMMUNICATION **********************//\r\n\r\n\t/**\r\n\t * Renders the extra fields for the replace with field type of edit \r\n\t */\r\n\trenderReplaceFieldOptions()\r\n\t{\r\n\r\n\t\tif(this.state.data.type == \"replacewithfield\")\r\n\t\t{\r\n\r\n\t\t\treturn(<Form.Group inline>\r\n\t\t\t\t\t\t<Form.Select \r\n\t\t\t\t\t\terror={this.genIsErrorSettings(\"field\",\"Please select a field\")}\r\n\t\t\t\t\t\tplaceholder='Choose Field'\r\n\t\t\t\t\t\tname='field'\r\n\t\t\t\t\t\toptions={this.state.fieldTypes}\r\n\t\t\t\t\t\tvalue={this.state.data.settings.field}\r\n\t\t\t\t\t\tlabel=\"Field:\"\r\n\t\t\t\t\t\tonChange={this.handleSettingChange.bind(this)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t   </Form.Group>)\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Renders the extra fields for the sequential replace if the target is not unstructured data \r\n\t */\r\n\trenderSeqReplaceFieldOptions()\r\n\t{\r\n\r\n\t\tif(this.state.data.type == \"sequentialreplace\" && (this.state.target == undefined || this.state.target instanceof StructuredData))\r\n\t\t{\r\n\r\n\t\t\tif(this.state.data.settings.fields == undefined)\r\n\t\t\t{\r\n\r\n\t\t\t\tthis.state.data.settings.fields = []\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn(<div>\r\n\t\t\t\t\t<Form.Group inline>\r\n\t\t\t\t\t\t<Form.Select \r\n\t\t\t\t\t\tmultiple selection \r\n\t\t\t\t\t\terror={this.genIsErrorSettings(\"field\",\"Please select a field\")}\r\n\t\t\t\t\t\tplaceholder='Choose Field'\r\n\t\t\t\t\t\tname='fields'\r\n\t\t\t\t\t\toptions={this.state.fieldTypes}\r\n\t\t\t\t\t\tvalue={this.state.data.settings.fields}\r\n\t\t\t\t\t\tlabel=\"Fields:\"\r\n\t\t\t\t\t\tonChange={this.handleSettingChange.bind(this)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t   </Form.Group>\r\n\t\t\t\t   {this.renderSeqReplaceFieldWarningMessage()}\r\n\t\t\t\t   </div>)\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders a warning if you select fields on a entire corpus edit informing the user \r\n\t * that this means the edit will only be applied to structured data \r\n\t */\r\n\trenderSeqReplaceFieldWarningMessage()\r\n\t{\r\n\r\n\r\n\r\n\t\tif(Array.isArray(this.state.data.settings.fields) && this.state.data.settings.fields.length > 0 && this.state.data.isCorpus)\r\n\t\t{\r\n\t\t\treturn(<Message warning visible>\r\n\t\t\t\t\tWhen you select a field on this type of edit, it means that the edit will only apply to structured data (matches)\r\n\t\t\t\t   </Message>)\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n     * renders the page in loading state \r\n     */\r\n\trenderHasData()\r\n\t{\r\n\r\n\t\tlet isCorpus = this.state.data.isCorpus;\r\n\r\n\t\treturn(<Container>\r\n\t\t\t<Form size={\"large\"} loading={this.state.isSaving || (! this.state.hasData && ! this.state.isNew)} >\r\n\t\t\t\t<Form.Group inline>\r\n\t\t\t\t\t<Form.Select \r\n\t\t\t\t\terror={this.genIsError(\"type\",\"Please select a type\")}\r\n\t\t\t\t\tplaceholder='Choose Type'\r\n\t\t\t\t\tname='type'\r\n\t\t\t\t\toptions={this.state.replaceTypes}\r\n\t\t\t\t\tvalue={this.state.data.type}\r\n\t\t\t\t\tlabel=\"Type:\"\r\n\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Checkbox\r\n\t\t\t\t\terror={this.genIsError(\"isCorpus\",\"Please tick apply to corpus or choose data\")}\r\n\t\t\t\t\tname=\"isCorpus\"\r\n\t\t\t\t\tlabel = \"Apply to Entire Corpus\"\r\n\t\t\t\t\tchecked={this.state.data.isCorpus}\r\n\t\t\t\t\tonChange={this.handleChecked.bind(this)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{isCorpus ? undefined : <DataPair label=\"Data\" text={this.genDataSummaryText()}/>}\r\n\t\t\t\t\t{isCorpus ? undefined : <ChooseDataModal onSelect={this.handleChosenData.bind(this)}></ChooseDataModal>}\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group inline>\r\n\t\t\t\t\t<Form.Input\r\n\t\t\t\t\terror={this.genIsError(\"replace\",\"Please enter text to replace\")}\r\n\t\t\t\t\tplaceholder=\"text\"\r\n\t\t\t\t\tname=\"replace\"\r\n\t\t\t\t\tlabel=\"Replace:\"\r\n\t\t\t\t\tvalue={this.state.data.replace}\r\n\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Input\r\n\t\t\t\t\terror={this.genIsError(\"replaceWith\",\"Please enter text to replace with \")}\r\n\t\t\t\t\tplaceholder=\"text\"\r\n\t\t\t\t\tname=\"replaceWith\"\r\n\t\t\t\t\tlabel=\"with\"\r\n\t\t\t\t\tvalue={this.state.data.replaceWith}\r\n\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t{this.renderReplaceFieldOptions()}\r\n\t\t\t\t{this.renderSeqReplaceFieldOptions()}\r\n\t\t\t\t<Form.Group widths=\"equal\">\r\n\t\t\t\t\t<Button primary onClick={this.saveData.bind(this)}> Save </Button>\r\n\t\t\t\t\t{this.state.isNew ? \"\" : <Button negative onClick={this.deleteData.bind(this)}> Delete </Button>}\r\n\t\t\t\t</Form.Group>\t\t\t\t\t\r\n\t\t\t</Form>\t\t\t\t\t\t\r\n\t\t</Container>);\r\n\r\n\t}\r\n\r\n\r\n\t /**\r\n     * Renders the page if an error has occured\r\n     */\r\n    renderErrorWithoutData()\r\n    {\r\n\r\n        return(  \r\n        <Message negative>\r\n            <Message.Header>An error has occured</Message.Header>\r\n            <p>Failed to get data from the server.</p>\r\n            <Button color=\"red\" onClick={this.loadData.bind(this)}>Try Again?</Button>\r\n          </Message>\r\n          )\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * renders the erorr message if it has data already \r\n\t */\r\n    renderErrorWithData()\r\n    {\r\n\r\n        return(  \r\n        <Message negative>\r\n            <Message.Header>An error has occured</Message.Header>\r\n            <p>Something has gone wrong! Reloading the page may fix the issue</p>\r\n          </Message>\r\n          )\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the 404 error message \r\n\t */\r\n\trenderMissing()\r\n\t{\r\n\r\n\t\treturn(  \r\n\t\t\t<Message warning>\r\n\t\t\t\t<Message.Header>We couldn't find what you are looking for </Message.Header>\r\n\t\t\t\t<p>404: We tried really hard and couldn't find the data you wanted :(</p>\r\n\t\t\t  </Message>\r\n\t\t\t  )\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders a successful save message \r\n\t */\r\n\trenderSaveSuccessful()\r\n\t{\r\n\r\n\t\tif(this.state.isSaveSuccessful)\r\n\t\t{\r\n\r\n\t\t\treturn(<Message positive>\r\n\t\t\t\t\t\t<Message.Header>Successfully added an edit to the corpus!</Message.Header>\r\n\t\t\t\t   </Message>)\r\n\r\n\t\t}\r\n\r\n\t}\r\n    /**\r\n     * renders the page if the data is still loading \r\n     */\r\n\r\n\t/**\r\n     * Chooses which render that should be rendered based on \r\n     * state of the object \r\n     */\r\n    executeRender()\r\n    {\r\n\r\n\t\tif((this.state.isNew || this.state.hasData) && this.state.isError )\r\n\t\t{\r\n\r\n\t\t\treturn this.renderErrorWithData();\r\n\r\n\t\t}\r\n\t\tif(this.state.isMissing)\r\n\t\t{\r\n\r\n\t\t\treturn this.renderMissing();\r\n\r\n\t\t}\r\n        else if(this.state.isError)\r\n        {\r\n\r\n            return this.renderErrorWithoutData();\r\n\r\n\t\t}\r\n        else if(this.state.hasData || this.state.isNew)\r\n        {\r\n\r\n            return this.renderHasData();\r\n\r\n        }\r\n\r\n    }\r\n\r\n\t/**\r\n\t * renders the component \r\n\t */\r\n\trender() {\r\n\r\n\t\t\r\n\r\n\t\tthis.loadIfNotAlready()\r\n\r\n\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{this.executeRender()}\r\n\t\t\t\t\t{this.renderSaveSuccessful()}\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default withRouter(EditForm);","import React from 'react';\r\nimport PageHeader from './page-header.js';\r\nimport { withRouter } from 'react-router-dom';\r\nimport EditForm from \"./edit-form\"\r\n\r\n\r\n/**\r\n * The page for adding an edit \r\n * @param {*} props should only be passed in for testing purposes \r\n */\r\nexport function AddEdit(props) \r\n{\r\n\r\n\r\n\t//allow passing in of id for testing \r\n\tlet id = props.id === undefined ? \r\n\t\tnew URLSearchParams(props.location.search).get(\"id\") : props.id;\r\n\r\n\tlet isNew = ! (id === undefined || id === null);\r\n\r\n\tlet headerText = isNew ? \"Create new Edit\" : \"View Edit\";\r\n\r\n\t//data prop should always be undefined in production\r\n\t//passed in testing purposes \r\n\treturn (\r\n\t\t<div className=\"page\">\r\n\t\t\t<PageHeader \r\n\t\t\t\theader={headerText}\r\n\t\t\t\tsidebarVisible={props.sidebarVisible}\r\n\t\t\t\thandleSidebarClick={props.handleSidebarClick}\r\n\t\t\t/>\r\n\t\t\t<div id=\"container\" style={{minHeight:\"100vh\"}}>\r\n\t\t\t\t<EditForm id={id} data={props.data} target={props.target}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default withRouter(AddEdit);","import React, { Component } from 'react';\r\nimport PageHeader from './page-header.js';\r\nimport { Button, Loader, Message, Segment, Container, TextArea,Form} from 'semantic-ui-react';\r\nimport {bindCompetition} from \"../data-binding\"\r\nimport {ImportRequest} from \"../domain\";\r\n\r\nclass ImportStructuredData extends Component {\r\n\r\n\tconstructor(props)\r\n    {\r\n        \r\n        super(props)\r\n\r\n        this.state = {items: [],isSaving: false, isValid:true, isLoaded: false,isImportSuccessful: false, isError: false, request: new ImportRequest() }\r\n\r\n\r\n    }\r\n\r\n\tgenDropDownItems(items,names)\r\n\t{\r\n\r\n\t\treturn items.map((item,index) => \r\n\t\t{\r\n\r\n\t\t\t//taken from https://stackoverflow.com/questions/7225407/convert-camelcasetext-to-sentence-case-text\r\n\t\t\tlet text = names !== undefined ? names[index] : item.replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\").charAt(0).toUpperCase()+item.slice(1).replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\");\r\n\r\n\t\t\treturn {key:item,text:text,value:item};\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadData()\r\n    {\r\n\r\n        fetch(\"/competitions\")\r\n            .then(res => {\r\n\t\t\t\t\r\n\t\t\t\tif(res.status === 401)\r\n                {\r\n\r\n                    window.location.href = \"/login-form\"                    \r\n\r\n                }\r\n\r\n\t\t\t\t\r\n\t\t\t\treturn res.json()\r\n\t\t\t})\r\n            .then(result => \r\n                {\r\n\r\n                    let data = result.map(r => bindCompetition(r));\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet values = data.map(c => c.id);\r\n\r\n\t\t\t\t\tlet names = data.map(c => c.name);\t\t\t\t\t\r\n\r\n\t\t\t\t\tthis.setState({items:this.genDropDownItems(values,names),isLoaded: true, isError: false})\r\n                })\r\n            .catch(err => this.setState({isError: true}));\r\n\r\n    }\r\n\r\n\tloadIfNotAlready()\r\n\t{\r\n\r\n\t\tif(this.state.isLoaded === false && this.state.isError === false)\r\n\t\t{\r\n\r\n\t\t\tthis.loadData();\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\thandleChange(e, { name, value })\r\n\t{\r\n\r\n\t\tlet request = this.state.request; \r\n\r\n\t\tif(name === \"begin\" || name === \"end\")\r\n\t\t{\r\n\r\n\t\t\tlet dateParts = value.split(\"-\")\r\n\r\n\t\t\tvalue = new Date(dateParts[0],Number.parseInt(dateParts[1])-1,dateParts[2],0,0,0,0);\r\n\r\n\t\t}\r\n\r\n\t\trequest[name] = value;\r\n\r\n\t\tthis.setState({ request: request});\t\t\r\n\r\n\t}\r\n\r\n\tsaveData()\r\n\t{\r\n\r\n\t\r\n\r\n\t\t\tlet request = this.state.request\r\n\r\n\t\t\tif(request[\"begin\"] === undefined || \r\n\t\t\t\trequest[\"end\"] === undefined || \r\n\t\t\t\trequest[\"compId\"] === undefined)\r\n\t\t\t{\r\n\r\n\t\t\t\tthis.setState({isValid:false});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tthis.setState({isSaving: true})\r\n\r\n\t\t\tfetch(\"/importdata\",\r\n\t\t\t{method: \"POST\",\r\n\t\t\tbody: JSON.stringify(request),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}}).then((res) => \r\n\t\t\t{\r\n\r\n\r\n\t\t\t\tif(res.status === 401)\r\n                {\r\n\r\n                    window.location.href = \"/login-form\"                    \r\n\r\n                }\r\n\r\n\r\n\t\t\t\tif(res.ok)\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tthis.setState({isSaving: false, isError: false,isImportSuccessful: true},() => console.log(this.state))\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({isError: true});\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\r\n\t}\r\n\r\n\trenderErrorMessage()\r\n\t{\r\n\r\n\t\tif(this.state.isError)\r\n\t\t{\r\n\r\n\t\t\treturn(  \r\n\t\t\t\t<Message negative>\r\n\t\t\t\t\t<Message.Header>An error has occured</Message.Header>\r\n\t\t\t\t\t<p>Something has gone wrong! Reloading the page may fix the issue</p>\r\n\t\t\t\t  </Message>\r\n\t\t\t\t  )\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trenderDatesNeededMessage()\r\n\t{\r\n\r\n\t\tif(this.state.isValid === false)\r\n\t\t{\r\n\r\n\t\t\treturn(<Message negative>\r\n\t\t\t\t<Message.Header>Please enter valid date and competition </Message.Header>\r\n\t\t   </Message>)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trenderSuccessMessage()\r\n\t{\r\n\r\n\r\n\t\tif(this.state.isImportSuccessful)\r\n\t\t{\r\n\r\n\t\t\treturn(<Message positive>\r\n\t\t\t\t<Message.Header>Successfully imported data into the corpus!</Message.Header>\r\n\t\t   </Message>)\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.loadIfNotAlready();\r\n\t\treturn (\r\n\t\t\t<div className=\"page\">\r\n\t\t\t\t<PageHeader \r\n\t\t\t\t\theader={\"Import Structured Data\"}\r\n\t\t\t\t\tsidebarVisible={this.props.sidebarVisible}\r\n\t\t\t\t\thandleSidebarClick={this.props.handleSidebarClick}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"container\" style={{height:\"100vh\"}}>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Form loading={! this.state.isLoaded || this.state.isSaving}>\r\n\t\t\t\t\t\t\t<Form.Group inline>\r\n\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\tplaceholder=\"dd/mm/yyyy\"\r\n\t\t\t\t\t\t\t\tname=\"begin\"\r\n\t\t\t\t\t\t\t\tlabel=\"Begin:\"\r\n\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\tplaceholder=\"dd/mm/yyyy\"\r\n\t\t\t\t\t\t\t\tname=\"end\"\r\n\t\t\t\t\t\t\t\tlabel=\"End:\"\r\n\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Form.Select\r\n\t\t\t\t\t\t\t\tlabel=\"Competition\"\r\n\t\t\t\t\t\t\t\tname=\"compId\"\r\n\t\t\t\t\t\t\t\toptions={this.state.items}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Button primary onClick={this.saveData.bind(this)}>Import</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t{this.renderSuccessMessage()}\r\n\t\t\t\t\t\t{this.renderErrorMessage()}\r\n\t\t\t\t\t\t{this.renderDatesNeededMessage()}\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ImportStructuredData;","import React, { Component } from 'react';\r\nimport { Tab, Button, Header, Modal, Loader, Message, Container } from 'semantic-ui-react';\r\nimport StructuredDataTable from './tables/structured-data-table';\r\nimport { Match } from \"../domain\";\r\nimport { bindMatch } from \"../data-binding\";\r\nimport MatchListTable from './tables/match-list-table';\r\n\r\n\r\n/**\r\n * Shows all unstructured and structured data and allows the user\r\n * to select a piece of data \r\n */\r\nclass ChooseMatchModal extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        if (typeof (this.props.onSelect) != \"function\") {\r\n\r\n            throw Error(\"Choose Match Modal requires onSelect prop which is a function\")\r\n\r\n        }\r\n\r\n        this.state = {\r\n            isLoaded: false,\r\n            data: ['sss'],\r\n            isError: false,\r\n            lastSelectedId: -1,\r\n            isModalOpen: false,\r\n            selectedItem: undefined,\r\n            isNoChooseError: false\r\n        };\r\n\r\n        \r\n\r\n    }\r\n\r\n    /**\r\n     * Handles any errors cuased by a sub-component \r\n     * @param {*} error the error recieved\r\n     * @param {*} errorInfo information about the error\r\n     */\r\n    componentDidCatch(error, errorInfo) {\r\n\r\n        this.setState({ isError: true });\r\n\r\n    }\r\n\r\n    /**\r\n     * Loads all match data \r\n     * and binds those objects to match data types \r\n     */\r\n    loadData() {\r\n\r\n        fetch(\"/matchList\")\r\n            .then(res => {\r\n                \r\n                if(res.status === 401)\r\n                {\r\n\r\n                    window.location.href = \"/login-form\"                    \r\n\r\n                }\r\n\r\n                \r\n                return res.json()})\r\n            .then(result => {\r\n\r\n                \r\n                let matches = result.matches.map((d) => bindMatch(d));\r\n\r\n                this.setState({ data: matches, isLoaded: true, isError: false });\r\n\r\n            })\r\n            .catch(err => {\r\n                this.setState({ isError: true })\r\n            });\r\n\r\n    }\r\n\r\n    /**\r\n     * handles the click on the choose button\r\n     * will update state to display an error if no item is selected\r\n     */\r\n    handleChooseButtonClick() {\r\n\r\n\r\n        if (this.state.lastSelectedId != -1) {\r\n\r\n            this.props.onSelect(this.state.selectedItem);\r\n\r\n            this.handleClose();\r\n\r\n        }\r\n        else {\r\n\r\n            this.setState({ isNoChooseError: true });\r\n\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * handles the selection of data\r\n     * @param {*} data should be type unstructured or structured data \r\n     */\r\n    handleSelection(data) {\r\n\r\n        if(data.id === this.state.lastSelectedId)\r\n        {\r\n\r\n            this.props.onSelect(data);      \r\n\r\n            this.setState({isModalOpen: false,isNoChooseError: false});\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            this.setState({ lastSelectedId: data.id, selectedItem: data });\r\n\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Renders the page if the data has been loaded \r\n     */\r\n    renderLoaded() {\r\n        return (<div>\r\n            <Tab menu={{ pointing: true }} panes={\r\n                [\r\n                    {\r\n                        menuItem: 'Match',\r\n                        render: () =>\r\n                            <Tab.Pane>\r\n                                <MatchListTable items={this.state.data}\r\n                                    onSelect={this.handleSelection.bind(this)} />\r\n                            </Tab.Pane>\r\n                    },\r\n\r\n                ]} />\r\n            <Message warning attached hidden={!this.state.isNoChooseError}>\r\n                Please select an item before clicking choose. You can select an item by clicking on a table row\r\n            </Message>\r\n            <br />\r\n            <Button primary onClick={this.handleChooseButtonClick.bind(this)}>Choose</Button>\r\n        </div>);\r\n\r\n    }\r\n\r\n    /**\r\n     * Renders the page if an error has occured\r\n     */\r\n    renderError() {\r\n\r\n        return (\r\n            <Message negative>\r\n                <Message.Header>An error has occured</Message.Header>\r\n                <p>Failed to get data from the server.</p>\r\n                <Button color=\"red\" onClick={this.loadData.bind(this)}>Try Again?</Button>\r\n            </Message>\r\n        )\r\n\r\n    }\r\n\r\n    /**\r\n     * renders the page if the data is still loading \r\n     */\r\n    renderLoading() {\r\n\r\n        return (<Loader>Loading Data</Loader>)\r\n\r\n    }\r\n\r\n    /**\r\n     * Chooses which render that should be rendered based on \r\n     * state of the object \r\n     */\r\n    executeRender() {\r\n\r\n        if (this.state.isError) {\r\n\r\n            return this.renderError();\r\n\r\n        }\r\n        else if (this.state.isLoaded) {\r\n\r\n            return this.renderLoaded();\r\n\r\n        }\r\n        else {\r\n\r\n            return this.renderLoading();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * handles modal opening \r\n     */\r\n    handleOpen() { this.setState({ isModalOpen: true }) }\r\n\r\n    /**\r\n     * handles the modal closing\r\n     */\r\n    handleClose() {\r\n        this.setState({\r\n            isModalOpen: false,\r\n            lastSelectedId: -1,\r\n            isNoChooseError: false,\r\n            selectedItem: undefined\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * renders the component \r\n     */\r\n    render() {\r\n\r\n        let loadIfNotAlready = () => {\r\n\r\n\r\n            if (this.state.isLoaded === false) {\r\n\r\n                this.loadData();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return (\r\n            <Modal\r\n                closeIcon\r\n                onOpen={loadIfNotAlready.bind(this)}\r\n                trigger={<Button primary type =\"button\" onClick={this.handleOpen.bind(this)}>{this.props.text !== undefined ? this.props.text : \"Change\"}</Button>}\r\n                onClose={this.handleClose.bind(this)}\r\n                open={this.state.isModalOpen}>\r\n                <Modal.Header>Choose Match</Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description>\r\n                        <Header>Please select a match</Header>\r\n                        <br />\r\n                    </Modal.Description>\r\n                    {this.executeRender()}\r\n                </Modal.Content>\r\n            </Modal>\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default ChooseMatchModal;","import React, { Component } from 'react';\r\nimport { Message, Container } from 'semantic-ui-react'\r\nimport PageHeader from './page-header.js';\r\nimport { UnstructuredData } from \"../domain\";\r\nimport ChooseMatchModal from \"./choose-match-modal\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\nclass AddUnstructuredData extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: new URLSearchParams(props.location.search).get(\"id\"),\r\n            matchid: '',\r\n            title: 'New unstructured data',\r\n            author: '',\r\n            published: '',\r\n            extracted: '',\r\n            url: '',\r\n            match: '',\r\n            data: '',\r\n            exists: false,\r\n            message: '',\r\n            hasMessage: false,\r\n            goodMessage: false\r\n        }\r\n\r\n        if (this.state.id !== null) {\r\n            this.load()\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n    * deals with filling out inputs in the form\r\n    * @param e - the event that caused the change\r\n    **/\r\n    changeHandler = (e) => {\r\n        e.preventDefault()\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    /**\r\n     * loosely validates inputs\r\n     * @param {any} data the data collected by the form which will be sent if it passes validation\r\n     * @return false if validation failed, else true\r\n     */\r\n    valid(data) {\r\n        if (data.title.length < 8 || data.title.length > 50) {\r\n            this.setState({ hasMessage: true, message: \"Title must be between 8 and 50 characters.\" })\r\n            return false\r\n        }\r\n        if (data.author.length < 3 || data.title.length > 50) {\r\n            this.setState({ hasMessage: true, message: \"Author must be between 3 and 50 characters.\" })\r\n            return false\r\n        }\r\n        if (data.published.getTime() !== data.published.getTime()) { //  An invalid date object returns NaN for getTime() and NaN is the only object not strictly equal to itself. Taken from https://stackoverflow.com/questions/1353684/detecting-an-invalid-date-date-instance-in-javascript\r\n            this.setState({ hasMessage: true, message: \"Invalid publication date.\" })\r\n            return false\r\n        }\r\n        if (data.extracted.getTime() !== data.extracted.getTime()) { //  An invalid date object returns NaN for getTime() and NaN is the only object not strictly equal to itself. Taken from https://stackoverflow.com/questions/1353684/detecting-an-invalid-date-date-instance-in-javascript\r\n            this.setState({ hasMessage: true, message: \"Invalid extraction date.\" })\r\n            return false\r\n        }\r\n        if (data.matchid === \"\") {\r\n            this.setState({ hasMessage: true, message: \"No match selected.\" })\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    /**\r\n     * loads the data with id passed into the page if one exists\r\n     */\r\n    load() {\r\n        fetch(\"/UnstructuredData?id=\" + this.state.id)\r\n            .then(res => \r\n                {\r\n                    if(res.status === 401)\r\n                    {\r\n    \r\n                        window.location.href = \"/login-form\"                    \r\n    \r\n                    }\r\n    \r\n                    \r\n                    return res.json()\r\n                \r\n                \r\n                })\r\n            .then(result => {\r\n                if (result.unstructuredData.extracted !== null) {\r\n                    var split = result.unstructuredData.extracted.split('-')\r\n                    var ext = `${split[0]}-${split[1]}-${parseInt(split[2])}`\r\n                    if (parseInt(split[2]) < 10) {\r\n                        ext = ext.slice(0, -1) + '0' + parseInt(split[2])\r\n                    }\r\n                }\r\n                if (result.unstructuredData.published !== null) {\r\n                    split = result.unstructuredData.published.split('-')\r\n                    var pub = `${split[0]}-${split[1]}-${parseInt(split[2])}`\r\n                    if (parseInt(split[2]) < 10) {\r\n                        pub = pub.slice(0, -1) + '0' + parseInt(split[2])\r\n                    }\r\n                }\r\n                this.setState({\r\n                    exists: true,\r\n                    matchid: result.match.id,\r\n                    match: `${result.match.home} vs ${result.match.away}`,\r\n                    author: result.unstructuredData.author,\r\n                    title: result.unstructuredData.title,\r\n                    url: result.unstructuredData.url,\r\n                    data: result.unstructuredData.data,\r\n                    extracted: ext,\r\n                    published: pub\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('error loading' + err)\r\n            })\r\n              \r\n    }\r\n\r\n    /**\r\n    * deal with submission of the form\r\n    * @param e - the event that caused the submission\r\n    **/\r\n    submit = (e) => {\r\n        e.preventDefault()\r\n        var split = this.state.published.split('-')\r\n        var pub = new Date(split[0], split[1]-1, split[2], 0, 0, 0)\r\n        split = this.state.extracted.split('-')\r\n        var ext = new Date(split[0], split[1]-1, split[2], 0, 0, 0)\r\n        var toSend = new UnstructuredData(this.state.id, this.state.matchid, this.state.title, this.state.author, this.state.url, pub, ext, this.state.data)\r\n        \r\n        if (!this.valid(toSend)) {\r\n            return\r\n        }\r\n        var request = new XMLHttpRequest()\r\n        var method = 'PUT'\r\n        var idtext = `?id=${this.state.id}`\r\n        if (!this.state.exists) {\r\n            method = 'POST'\r\n            idtext = ''\r\n        }\r\n        request.open(method, '/unstructuredData' + idtext, true)\r\n        request.setRequestHeader('Content-Type', 'application/json')\r\n        request.send(JSON.stringify(toSend))\r\n        request.onload = function () {\r\n            if (request.status != 200) {\r\n                this.setState({ message: `Error ${request.status}: ${request.statusText}`, hasMessage: true })\r\n            }\r\n            else {\r\n\r\n                if(this.state.exists)\r\n                {\r\n\r\n                    this.props.history.goBack()\r\n\r\n                }\r\n                else\r\n                {\r\n\r\n                    this.setState({ id: undefined, match: \"\", matchid: '', title: \"New unstructured data\", author: \"\", url: \"\", published: \"\", extracted: \"\", data: \"\", hasMessage: false, goodMessage: true, message: \"Saved.\" })\r\n\r\n                }\r\n\r\n                \r\n            }\r\n        }.bind(this)\r\n        request.onerror = function () {\r\n            this.setState({ message: 'save failed', hasMessage: true })\r\n        }.bind(this)\r\n    }\r\n\r\n    /**\r\n    * deals with deleting the data\r\n    * @param e - the event that caused the delete\r\n    **/\r\n    delete = (e) => {\r\n        e.preventDefault()\r\n        if (this.state.exists) {\r\n            var request = new XMLHttpRequest()\r\n            request.open('DELETE', `/unstructuredData?id=${this.state.id}`, true)\r\n            request.setRequestHeader('Content-Type', 'application/json')\r\n            request.send()\r\n            request.onload = function () {\r\n                if (request.status != 200) {\r\n                    this.setState({ message: `Error ${request.status}: ${request.statusText}`, hasMessage: true })\r\n                }\r\n                else {\r\n                    this.props.history.goBack();\r\n                }\r\n            }.bind(this)\r\n            request.onerror = function () {\r\n                this.setState({ message: 'delete failed', hasMessage: true })\r\n            }.bind(this)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * deals with the match chosen by the choose match modal\r\n     * @param {any} chosenMatch - the chosen match\r\n     */\r\n    handleChosenMatch(chosenMatch) {\r\n        this.setState({\r\n            matchid: chosenMatch.id,\r\n            match: `${chosenMatch.home} vs ${chosenMatch.away}`,\r\n        })\r\n    }\r\n\r\n    /**\r\n     * renders the page\r\n     */\r\n    render() {\r\n        const { id, matchid, title, author, published, extracted, url, match, data, exists, message, hasMessage, goodMessage } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"page\">\r\n\t\t\t\t<PageHeader \r\n\t\t\t\t\theader={title}\r\n\t\t\t\t\tsidebarVisible={this.props.sidebarVisible}\r\n\t\t\t\t\thandleSidebarClick={this.props.handleSidebarClick}\r\n\t\t\t\t/>\r\n                <Container>\r\n                <div id=\"container\" style={{ height: \"100vh\" }}>\r\n                    <form className=\"ui form\">\r\n                        <div className=\"inline fields\">\r\n                            <div className=\"one wide field\"/>\r\n                            <div className=\"required ten wide field\">\r\n                                <label>\r\n                                    Title\r\n                                </label>\r\n                                <input type=\"text\" name=\"title\" value={title} onChange={this.changeHandler} />\r\n                            </div>\r\n                            <div className=\"required four wide field\">\r\n                                <label>\r\n                                    Author\r\n                                </label>\r\n                                <input type=\"text\" name=\"author\" value={author} onChange={this.changeHandler} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"inline fields\">\r\n                            <div className=\"one wide field\"/>\r\n                            <div className=\"required five wide field\">\r\n                                <label>\r\n                                    Published\r\n                                </label>\r\n                                <input type=\"date\" name=\"published\" value={published} onChange={this.changeHandler}/>\r\n                            </div>\r\n                            <div className=\"required five wide field\">\r\n                                <label>\r\n                                    Extracted\r\n                                </label>\r\n                                <input type=\"date\" name=\"extracted\" value={extracted} onChange={this.changeHandler}/>\r\n                            </div>\r\n                            <div className=\"four wide field\">\r\n                                <label>\r\n                                    URL\r\n                                </label>\r\n                                <input type=\"text\" name=\"url\" value={url} onChange={this.changeHandler} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"inline fields\">\r\n                            <div className=\"one wide field\"/>\r\n                            <div className=\"five wide field\">\r\n                                <div className=\"ui pointing below label\">\r\n                                    Content\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"required seven wide field\">\r\n                                <label>\r\n                                    Match: {match} \r\n                                </label>\r\n                            </div>\r\n                            <div className=\"two wide field\">\r\n                                <ChooseMatchModal onSelect= { this.handleChosenMatch.bind(this) } ></ChooseMatchModal>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"inline fields\">\r\n                            <div className=\"one wide field\"/>\r\n                            <div className=\"fourteen wide field\">\r\n                                <textarea name=\"data\" value={data} onChange={this.changeHandler} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"inline fields\">\r\n                            <div className=\"three wide field\"/>\r\n                            <div className=\"eight wide field\">\r\n                                {hasMessage ? <Message negative> {message} </Message> : undefined}\r\n                                {goodMessage ? <Message positive> {message} </Message> : undefined}\r\n                            </div>\r\n                            <div className=\"two wide field\">\r\n                                {!this.state.exists ? \"\" : <button className=\"fluid ui red button\" type=\"button\" onClick={this.delete.bind(this)} >\r\n                                    Delete\r\n                                </button>}\r\n                            </div>\r\n                            <div className=\"two wide field\">\r\n                                <button className=\"fluid ui primary button\" type=\"button\" onClick={this.submit.bind(this)} >\r\n                                    Save\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\t\t\t\t</div>\r\n                </Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(AddUnstructuredData);","import React, { Component } from 'react';\r\nimport PageHeader from './page-header.js';\r\nimport { Button, Loader, Message, Segment, Container, TextArea,Form} from 'semantic-ui-react';\r\nimport {ImportRequest} from \"../domain\";\r\nclass Export extends Component {\r\n\r\n\tconstructor(props)\r\n    {\r\n        \r\n\t\tsuper(props)\r\n\t\t\r\n\t\tlet types = [\"json\",\"xml\"];\r\n\r\n\t\tlet names = [\"JSON\",\"XML\"];\r\n\r\n\t\tthis.state = {items:this.genDropDownItems(types,names),\r\n\t\t\ttype:\"json\",\r\n\t\t\tisLoaded: true,\r\n\t\t\tisError: false,\r\n\t\t\trequest: new ImportRequest(),\r\n\t\t\tisExported: false,\r\n\t\t\texport: undefined,\r\n\t\t\texportedType: undefined }\r\n\r\n\r\n    }\r\n\r\n\tgenDropDownItems(items,names)\r\n\t{\r\n\r\n\t\treturn items.map((item,index) => \r\n\t\t{\r\n\r\n\t\t\t//taken from https://stackoverflow.com/questions/7225407/convert-camelcasetext-to-sentence-case-text\r\n\t\t\tlet text = names !== undefined ? names[index] : item.replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\").charAt(0).toUpperCase()+item.slice(1).replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\");\r\n\r\n\t\t\treturn {key:item,text:text,value:item};\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadData()\r\n    {\r\n\r\n\t\tthis.setState({isLoaded: false, isExported: false,exportedType: this.state.type});\r\n\r\n\t\r\n\t\tfetch(\"/export?type=\" + this.state.type)\r\n\t\t\t.then((b) => \r\n\t\t\t{\r\n\t\t\t\tif(b.status === 401)\r\n                {\r\n\r\n                    window.location.href = \"/login-form\"                    \r\n\r\n                }\r\n\r\n\t\t\t\t\r\n\t\t\t\treturn b.blob()\r\n\t\t\t\r\n\t\t\t})            \r\n            .then(result => \r\n                {\r\n\t\t\t\t\t// 2. Create blob link to download\r\n\t\t\t\t\tconst url = window.URL.createObjectURL(result);\r\n\t\t\t\t\tconst link = document.createElement('a');\r\n\t\t\t\t\tlink.href = url;\r\n\t\t\t\t\tlink.setAttribute('download', \"corpus.\" + this.state.type);\r\n\t\t\t\t\t// 3. Append to html page\r\n\t\t\t\t\tdocument.body.appendChild(link);\r\n\t\t\t\t\t// 4. Force download\r\n\t\t\t\t\tlink.click();\r\n\t\t\t\t\t// 5. Clean up and remove the link\r\n\t\t\t\t\tlink.parentNode.removeChild(link);\r\n\r\n\t\t\t\t\tlet data = result\r\n\r\n\t\t\t\t\tthis.setState({export:data,isLoaded: true, isError: false,isExported: true})\r\n                })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n\r\n\thandleChange(e, { name, value })\r\n\t{\r\n\r\n\t\tthis.setState({ type: value});\t\t\r\n\r\n\t}\r\n\r\n\r\n\trenderErrorMessage()\r\n\t{\r\n\r\n\t\tif(this.state.isError)\r\n\t\t{\r\n\r\n\t\t\treturn(  \r\n\t\t\t\t<Message negative>\r\n\t\t\t\t\t<Message.Header>An error has occured</Message.Header>\r\n\t\t\t\t\t<p>Something has gone wrong! Reloading the page may fix the issue</p>\r\n\t\t\t\t  </Message>\r\n\t\t\t\t  )\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"page\">\r\n\t\t\t\t<PageHeader \r\n\t\t\t\t\theader={\"Import Structured Data\"}\r\n\t\t\t\t\tsidebarVisible={this.props.sidebarVisible}\r\n\t\t\t\t\thandleSidebarClick={this.props.handleSidebarClick}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"container\" style={{minHeight:\"100vh\"}}>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Form loading={! this.state.isLoaded}>\r\n\t\t\t\t\t\t\t<Form.Group inline>\r\n\t\t\t\t\t\t\t\t<Form.Select\r\n\t\t\t\t\t\t\t\tlabel=\"Export Type\"\r\n\t\t\t\t\t\t\t\tname=\"compId\"\r\n\t\t\t\t\t\t\t\toptions={this.state.items}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t\tvalue={this.state.type}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Button primary onClick={this.loadData.bind(this)}>Export</Button>\r\n\t\t\t\t\t\t</Form>\t\t\t\t\t\t\r\n\t\t\t\t\t\t{this.renderErrorMessage()}\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Export;","import React, { Component } from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport { User } from \"../../domain\";\r\nimport {MAX_TITLE_SIZE} from \"../../constants\";\r\nimport DataTable from \"./data-table\"\r\n/**\r\n * shows a table of users\r\n * has the ability to promote, demote or remove them \r\n */\r\nclass UserTable extends DataTable\r\n{\r\n    /**\r\n     * constructs a new users table\r\n     * data is mandatory however onselect is optional\r\n     * @param {*} props the props passed in \r\n     */\r\n    constructor(props)\r\n    {\r\n\r\n        super(props);\r\n\r\n    }\r\n\r\n    genRows()\r\n    {\r\n\r\n        return this.props.items.map((item, index) => (\r\n            <UserRow \r\n                key={item.id} \r\n                data={item} \r\n                onSelect={this.state.selectFunc} \r\n                isActive={item.id == this.state.activeRow}\r\n            />\r\n        ))\r\n\r\n    }\r\n\r\n    genHeader()\r\n    {\r\n\r\n        return this.state.header = (<Table.Row>\r\n            <Table.HeaderCell>Username</Table.HeaderCell>\r\n            <Table.HeaderCell>Is admin</Table.HeaderCell>\r\n            <Table.HeaderCell>Code</Table.HeaderCell>\r\n            <Table.HeaderCell>Promote</Table.HeaderCell>\r\n            <Table.HeaderCell>Demote</Table.HeaderCell>\r\n            <Table.HeaderCell>Remove</Table.HeaderCell>\r\n        </Table.Row>)\r\n\r\n    }\r\n\r\n    isValidData()\r\n    {\r\n\r\n        \r\n        //broken into each predicate for easier debugging\r\n        if(this.props.items.every((i) => {\r\n            let isIdValid = typeof(i.id) === \"number\" \r\n            let isUsernameValid = typeof(i.username) === \"string\"\r\n            let isHashValid = typeof (i.hash) === \"string\"\r\n            let isAdminValid = typeof (i.admin) === \"number\" \r\n            let isRegkeyValid = typeof (i.regkey) === \"string\" || i.regkey === null\r\n            let isTokenValid = typeof (i.token) === \"string\"\r\n            let isAPIKeyValid = typeof (i.apikey) === \"string\"\r\n            return isIdValid && isUsernameValid && isAdminValid && isRegkeyValid && isAPIKeyValid;\r\n            }) == false)\r\n        {\r\n            \r\n\r\n            \r\n            throw new Error(\"every piece of data should have valid id, published, title and author\");\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Represents a row of the users table  \r\n * as this component isn't exported no additional validation is done \r\n * by this component \r\n * @param {*} props \r\n */\r\nfunction UserRow(props)\r\n{\r\n\r\n    if((props.data instanceof User) == false)\r\n    {\r\n\r\n        throw Error(\"props.data must be an instance of user\");\r\n\r\n    }\r\n\r\n    let username = props.data.username\r\n\r\n    let code = props.data.regkey !== null ? props.data.regkey : \"Already Registered\"\r\n\r\n    let isAdmin = \"No\"\r\n\r\n    if (props.data.admin == 1) { isAdmin = \"Yes\" }\r\n\r\n    let selectFunc = props.onSelect != undefined ? props.onSelect : (a, b) => { };\r\n\r\n    return(\r\n        <Table.Row active={props.isActive}>\r\n            <Table.Cell>{username}</Table.Cell>\r\n            <Table.Cell>{isAdmin}</Table.Cell>\r\n            <Table.Cell>{code}</Table.Cell>\r\n            <Table.Cell>\r\n                <button className=\"fluid ui positive button\" type=\"button\" onClick={() => selectFunc(\"p\" + props.data.username)}>\r\n                    Promote\r\n                </button>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n                <button className=\"fluid ui negative button\" type=\"button\" onClick={() => selectFunc(\"d\" + props.data.username)}>\r\n                    Demote\r\n                </button>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n                <button className=\"fluid ui negative button\" type=\"button\" onClick={() => selectFunc(\"r\" + props.data.username)}>\r\n                    Remove\r\n                </button>\r\n            </Table.Cell>\r\n        </Table.Row>\r\n    );\r\n    \r\n}\r\n\r\nexport default UserTable;","import React, { Component } from 'react';\r\nimport UserTable from \"../tables/user-table\";\r\nimport { bindUser } from \"../../data-binding\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport ListPage from './list-page.js';\r\nimport { Message, Container } from 'semantic-ui-react'\r\nimport { SearchRequest } from \"../../domain\"\r\n\r\nclass UserAdmin extends ListPage {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state.isLoaded = false;\r\n        this.state.search = \"\";\r\n        this.state.uname = \"\";\r\n        this.state.code = \"\";\r\n        this.state.isAdmin = false;\r\n        this.state.headerText = \"User Admin\";\r\n        this.state.route = \"/getusers\";\r\n        this.state.message = '';\r\n        this.state.hasMessage = false;\r\n    }\r\n\r\n    /**\r\n    * deals with filling out inputs in the form\r\n    * @param e - the event that caused the change\r\n    **/\r\n    changeHandler = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n        if (e.target.name === \"search\") {\r\n            this.handleSearchChange(e.target.name, new SearchRequest(\"text\", e.target.value, \"username\"))\r\n        }\r\n    }\r\n\r\n    /**\r\n    * loads all the unstructured data into the list\r\n    **/\r\n    loadData(data) {\r\n\r\n        data.users = data.users.map((d) => bindUser(d));\r\n\r\n        this.setState({ data: data.users, isLoaded: true, isError: false });\r\n\r\n    }\r\n\r\n    /**\r\n     * adds a new user\r\n     */\r\n    addUser() {\r\n        if (this.state.uname.length < 8 || this.state.code.length < 8 || this.state.uname.length > 50 || this.state.code.length > 50) {\r\n            this.setState({\r\n                message: 'Username and code must be between 8 and 50 characters.',\r\n                hasMessage: true\r\n            })\r\n            return\r\n        }\r\n        var admin = 0\r\n        if (this.state.isAdmin) {\r\n            admin = 1\r\n        }\r\n        var toSend = `{\"username\" : \"${this.state.uname}\", \"regkey\" : \"${this.state.code}\", \"admin\" : ${admin}}`\r\n        var request = new XMLHttpRequest()\r\n        request.open(\"POST\", \"/createuser\", true)\r\n        request.setRequestHeader('Content-Type', 'application/json')\r\n        request.send(toSend)\r\n        request.onload = function () {\r\n            if (request.status != 200) {\r\n                let theMessage = 'Error performing action.'\r\n                if (request.status === 418) {\r\n                    theMessage = 'That username already exists.'\r\n                }\r\n                this.setState({\r\n                    message: theMessage,\r\n                    hasMessage: true\r\n                })\r\n            }\r\n            else {\r\n                this.search()\r\n                this.setState({\r\n                    hasMessage: false,\r\n                    uname: '',\r\n                    code: ''\r\n                })\r\n            }\r\n        }.bind(this)\r\n        request.onerror = function () {\r\n            this.setState({\r\n                message: 'Error performing action.',\r\n                hasMessage: true\r\n            })\r\n        }.bind(this)\r\n    }\r\n\r\n    /**\r\n     * deals with the is admin checkbox\r\n     */\r\n    adminCheck() {\r\n        this.setState({ isAdmin: !this.state.isAdmin })\r\n    }\r\n\r\n    /**\r\n     * deletes, promotes or demotes a user\r\n     * @param {any} str - first character defines the action, rest is the username to be applied to\r\n     */\r\n    action(str) {\r\n        var username = str.substring(1)\r\n        var method = \"DELETE\"\r\n        var endpoint = \"/removeuser\"\r\n        if (str[0] !== 'r') {\r\n            method = \"PUT\"\r\n            if (str[0] === 'p') {\r\n                endpoint = \"/promoteuser\"\r\n            }\r\n            else {\r\n                endpoint = \"/demoteuser\"\r\n            }\r\n        }\r\n        var request = new XMLHttpRequest()\r\n        request.open(method, endpoint + `?username=${username}`, true)\r\n        request.setRequestHeader('Content-Type', 'application/json')\r\n        request.send()\r\n        request.onload = function () {\r\n            if (request.status != 200) {\r\n                this.setState({\r\n                    message: 'Error performing action.',\r\n                    hasMessage: true\r\n                })\r\n            }\r\n            else {\r\n                this.search()\r\n            }\r\n        }.bind(this)\r\n        request.onerror = function () {\r\n            this.setState({\r\n                message: 'Error performing action.',\r\n                hasMessage: true\r\n            })\r\n        }.bind(this)\r\n    }\r\n\r\n    renderLoaded() {\r\n\r\n        return (<div class=\"inline fields\" >\r\n            <div class=\"one wide field\" />\r\n            <div class=\"fourteen wide field\">\r\n                <UserTable\r\n                    totalPages={this.state.totalPages}\r\n                    onPageChange={this.handlePageChange.bind(this)}\r\n                    page={this.state.page}\r\n                    paging={this.state.paging}\r\n                    items={this.state.data}\r\n                    onSelect={this.action.bind(this)}>\r\n                </UserTable>\r\n            </div>\r\n        </div>)\r\n\r\n    }\r\n\r\n    renderSearch() {\r\n\r\n        const { search, uname, code, isAdmin, message, hasMessage } = this.state\r\n\r\n        return (<div id=\"container\">\r\n            <form class=\"ui form\">\r\n                <div class=\"inline fields\">\r\n                    <div class=\"one wide field\" />\r\n                    <div class=\"five wide field\">\r\n                        <label>\r\n                            Username\r\n                        </label>\r\n                        <input type=\"text\" name=\"uname\" value={uname} onChange={this.changeHandler} />\r\n                    </div>\r\n                    <div class=\"four wide field\">\r\n                        <label>\r\n                            Code\r\n                        </label>\r\n                        <input type=\"text\" name=\"code\" value={code} onChange={this.changeHandler} />\r\n                    </div>\r\n                    <div class=\"two wide field\">\r\n                        <div class=\"ui checkbox\">\r\n                            <input type=\"checkbox\" name=\"example\" onChange={this.adminCheck.bind(this)} />\r\n                                <label>Is Admin</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"three wide field\">\r\n                        <button className=\"fluid ui positive button\" type=\"button\" onClick={this.addUser.bind(this)}>\r\n                            Add User\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"inline fields\">\r\n                    <div class=\"one wide field\" />\r\n                    <div class=\"fourteen wide field\">\r\n                        {hasMessage ? <Message negative> {message} </Message> : undefined}\r\n                    </div>\r\n                    <div class=\"one wide field\" />\r\n                </div>\r\n                <div class=\"inline fields\">\r\n                    <div class=\"one wide field\" />\r\n                    <div class=\"fourteen wide field\">\r\n                        <label>\r\n                            Search\r\n                    </label>\r\n                        <div class=\"ui icon input\">\r\n                            <input type=\"text\" name=\"search\" value={search} onChange={this.changeHandler} />\r\n                            <i class=\"search icon\"></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>)\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(UserAdmin);\r\n","import React, { Component } from 'react';\r\nimport PageHeader from './page-header.js';\r\nimport DataPair from \"./data-pair\"\r\nimport ReactJson from 'react-json-view'\r\nimport {bindStructuredData} from \"../data-binding\";\r\nimport { Button, Loader, Message, Segment, Container, TextArea, Form, Modal, Icon, Header } from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Visualisation from \"./visualisation\"\r\n/**\r\n * The page for adding an edit \r\n * @param {*} props should only be passed in for testing purposes \r\n */\r\nexport class StructuredDataPage extends Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        \r\n        super(props)\r\n\r\n        //allow passing in of id for testing \r\n        let id = props.id === undefined ? \r\n        new URLSearchParams(props.location.search).get(\"id\") : props.id;\r\n\r\n        if(id === undefined || id === null)\r\n        {\r\n\r\n            throw new Error(\"id must be defined\")\r\n\r\n        }\r\n\r\n        this.state = {data: [], isLoaded: false, isError: false, id:id,headerText:\"Loading\"}\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * Handles any errors cuased by a sub-component \r\n     * @param {*} error the error recieved\r\n     * @param {*} errorInfo information about the error\r\n     */\r\n    componentDidCatch(error, errorInfo)\r\n    {\r\n\r\n        this.setState({isError: true});\r\n\r\n    }\r\n\r\n    deleteData()\r\n\t{\r\n\r\n\t\tfetch(\"/structureddata?id=\" + this.state.id,\r\n\t\t\t{method: \"DELETE\",\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}}).then((res) => \r\n\t\t\t{\r\n\r\n                if(res.status === 401)\r\n                {\r\n\r\n                    window.location.href = \"/login-form\"                    \r\n\r\n                }\r\n\r\n\r\n\t\t\t\tif(res.ok)\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tthis.props.history.goBack();\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({isError: true,hasData: false});\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadData()\r\n    {\r\n\r\n        fetch(\"/StructuredData?id=\" + this.state.id)\r\n            .then(res => {\r\n                if(res.status === 401)\r\n                {\r\n\r\n                    window.location.href = \"/login-form\"                    \r\n\r\n                }\r\n\r\n                \r\n                return res.json()})\r\n            .then(result => \r\n                {\r\n\r\n                    \r\n                    let data = bindStructuredData(result);\r\n\r\n                    let date = data.date;\r\n\r\n                    let dateString = date.getDate() + \"/\" + (date.getMonth()+1) + \"/\" + date.getFullYear();\r\n                    \r\n                    let headerText = data.home + \" vs \" + data.away + \" on \" + dateString; \r\n\r\n\t\t\t\t\tthis.setState({data:data,isLoaded: true, isError: false,headerText: headerText})\r\n                })\r\n            .catch(err => this.setState({isError: true}));\r\n\r\n    }\r\n\r\n    /**\r\n     * loads the data if it is not already loaded\r\n     */\r\n\tloadIfNotAlready()\r\n\t{\r\n\r\n\t\tif(this.state.isLoaded === false)\r\n\t\t{\r\n\r\n\t\t\tthis.loadData();\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n    /**\r\n     * renders the page in loading state \r\n     */\r\n    renderLoaded() {\r\n\r\n        let date = this.state.data.date;\r\n\r\n        let dateString = date.getDay() + \"/\" + date.getMonth() + \"/\" + date.getFullYear();\r\n\r\n        return (\r\n\r\n            <div>\r\n\r\n                <Container textAlign=\"left\">\r\n                    <Segment basic size=\"large\"><b>Date:</b>{dateString} <b>Competition:</b>{this.state.data.competitionName}</Segment>\r\n                    <Visualisation data={this.state.data.data}></Visualisation>\r\n                    \r\n                    <Modal closeIcon closeOnDimmerClick trigger={<Button color='red'> Delete</Button>}>\r\n                        <Modal.Header>\r\n                            <div>\r\n                                <Header>Confirm delete</Header>\r\n                            </div>\r\n                        </Modal.Header>\r\n                        <Modal.Content>\r\n                            This delete is a cascading delete, meaning all data related to this match will be deleted. Are you sure?\r\n                            <Button color='red' floated='right' onClick={this.deleteData.bind(this)}> Delete</Button>\r\n                        </Modal.Content>\r\n                    </Modal>\r\n                    <br/>\r\n                    <ReactJson src={this.state.data.data} />\r\n\r\n                </Container>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n\t /**\r\n     * Renders the page if an error has occured\r\n     */\r\n    renderError()\r\n    {\r\n\r\n        return(  \r\n        <Message negative>\r\n            <Message.Header>An error has occured</Message.Header>\r\n            <p>Failed to get data from the server.</p>\r\n            <Button color=\"red\" onClick={this.loadData.bind(this)}>Try Again?</Button>\r\n          </Message>\r\n          )\r\n\r\n    }\r\n\r\n    /**\r\n     * navigates to an edit page with parameters given by inputted edit\r\n     * @param {*} edit the edit inputted \r\n     */\r\n\trouteToData(data)\r\n\t{\r\n\r\n\t\tthis.props.history.push(\"/structured_data_page?id=\" + data.id + \"&isbackable=true\");\r\n\t\t\r\n\t}\r\n\r\n    /**\r\n     * renders the page if the data is still loading \r\n     */\r\n    renderLoading()\r\n    {\r\n\r\n        return(<Loader>Loading Data</Loader>)\r\n\r\n    }\r\n    \r\n    /**\r\n     * Chooses which render that should be rendered based on \r\n     * state of the object \r\n     */\r\n    executeRender()\r\n    {\r\n\r\n        if(this.state.isError)\r\n        {\r\n\r\n            return this.renderError();\r\n\r\n        }\r\n        else if(this.state.isLoaded)\r\n        {\r\n\r\n            return this.renderLoaded();\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            return this.renderLoading();\r\n\r\n        }\r\n\r\n    }\r\n\r\n\t\r\n\r\n    /**\r\n     * renders the page \r\n     */\r\n\trender() {\r\n\r\n\t\tthis.loadIfNotAlready();\r\n\r\n\t\treturn (<div className=\"page\">\r\n\t\t\t<PageHeader \r\n\t\t\t\theader={this.state.headerText}\r\n\t\t\t\tsidebarVisible={this.props.sidebarVisible}\r\n\t\t\t\thandleSidebarClick={this.props.handleSidebarClick}\r\n\t\t\t/>\r\n\t\t\t<br/>\t\t\t\t\t\t\t    \r\n\t\t\t<div id=\"container\" style={{minHeight:\"100vh\"}}>\r\n\t\t\t\t{this.executeRender()}\r\n\t\t\t</div>\r\n\t\t</div>)\r\n\t\t\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default withRouter(StructuredDataPage);","import React, { Component } from 'react';\r\nimport PageHeader from './page-header.js';\r\nimport DataPair from \"./data-pair\"\r\nimport ReactJson from 'react-json-view'\r\nimport {bindStructuredData, bindUser} from \"../data-binding\";\r\nimport { Button, Loader, Message, Segment, Container, TextArea,Form,Header} from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport UnstructuredDataTable from \"./tables/unstructured-data-table\";\r\n\r\nclass UserPage extends Component {\r\n\t\r\n\tconstructor(props)\r\n    {\r\n        \r\n        super(props)\r\n\r\n\r\n\r\n        this.state = {user: undefined, isLoaded: false, isError: false,headerText:\"Loading\"}\r\n\r\n\r\n    }\r\n\r\n\t/**\r\n     * Handles any errors cuased by a sub-component \r\n     * @param {*} error the error recieved\r\n     * @param {*} errorInfo information about the error\r\n     */\r\n    componentDidCatch(error, errorInfo)\r\n    {\r\n\r\n        this.setState({isError: true});\r\n\r\n    }\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadData()\r\n    {\r\n\r\n        fetch(\"/currentuser\")\r\n            .then(res => {\r\n                if(res.status === 401)\r\n                {\r\n\r\n                    window.location.href = \"/login-form\"                    \r\n\r\n                }\r\n\r\n                \r\n                return res.json()})\r\n            .then(result => \r\n                {\r\n\r\n                    let data = bindUser(result);\r\n\r\n\t\t\t\t\tthis.setState({user:data,isLoaded: true, isError: false,headerText:data.username})\r\n                })\r\n            .catch(err => this.setState({isError: true,isLoaded:true}));\r\n\r\n\t}\r\n\r\n    /**\r\n     * loads the data if it is not already loaded\r\n     */\r\n\tloadIfNotAlready()\r\n\t{\r\n\r\n\t\tif(this.state.isLoaded === false)\r\n\t\t{\r\n\r\n\t\t\tthis.loadData();\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n    /**\r\n     * renders the page in loading state \r\n     */\r\n\trenderLoaded()\r\n\t{\r\n\r\n        let isAdmin = this.state.user.admin === 1 ? \"Yes\" : \"No\"\r\n\r\n\r\n\t\treturn (\r\n\t\t\t\t\t\t\t\r\n                <div>\r\n                    \r\n                    <Container textAlign=\"left\">\r\n                        <DataPair label=\"Username\" text={this.state.user.username}/>\r\n                        <DataPair label=\"Admin\" text={isAdmin}/>\r\n                        <DataPair label=\"API KEY\" text={this.state.user.apikey}/>\r\n                        \r\n                    </Container>\r\n                    \r\n                    \r\n                </div>                  \r\n\t\t\t\t\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t /**\r\n     * Renders the page if an error has occured\r\n     */\r\n    renderError()\r\n    {\r\n\r\n        return(  \r\n        <Message negative>\r\n            <Message.Header>An error has occured</Message.Header>\r\n            <p>Failed to get data from the server.</p>\r\n            <Button color=\"red\" onClick={this.loadData.bind(this)}>Try Again?</Button>\r\n          </Message>\r\n          )\r\n\r\n    }\r\n\r\n \r\n\r\n    /**\r\n     * renders the page if the data is still loading \r\n     */\r\n    renderLoading()\r\n    {\r\n\r\n        return(<Loader>Loading Data</Loader>)\r\n\r\n    }\r\n    \r\n    /**\r\n     * Chooses which render that should be rendered based on \r\n     * state of the object \r\n     */\r\n    executeRender()\r\n    {\r\n\r\n        if(this.state.isError)\r\n        {\r\n\r\n            return this.renderError();\r\n\r\n        }\r\n        else if(this.state.isLoaded)\r\n        {\r\n\r\n            return this.renderLoaded();\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            return this.renderLoading();\r\n\r\n        }\r\n\r\n    }\r\n\r\n\t\r\n\r\n    /**\r\n     * renders the page \r\n     */\r\n\trender() {\r\n\r\n\t\tthis.loadIfNotAlready();\r\n\r\n\t\treturn (<div className=\"page\">\r\n\t\t\t<PageHeader \r\n\t\t\t\theader={this.state.headerText}\r\n\t\t\t\tsidebarVisible={this.props.sidebarVisible}\r\n\t\t\t\thandleSidebarClick={this.props.handleSidebarClick}\r\n\t\t\t/>\r\n\t\t\t<br/>\t\t\t\t\t\t\t    \r\n\t\t\t<div id=\"container\" style={{minHeight:\"100vh\"}}>\r\n\t\t\t\t{this.executeRender()}\r\n\t\t\t</div>\r\n\t\t</div>)\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport default withRouter(UserPage);\r\n","import React, { Component } from 'react'\r\nimport './App.css';\r\nimport {\r\n\tMenu,\r\n\tSegment,\r\n\tSidebar,\r\n} from 'semantic-ui-react';  \r\n\r\nimport { BrowserRouter as Switch, Route} from 'react-router-dom';\r\nimport Home from './components/home.js';\r\nimport UnstructuredDataList from './components/listpages/unstructured-data-list.js';\r\nimport StructuredDataList from './components/listpages/structured-data-list.js';\r\nimport MatchList from './components/listpages/match-list.js';\r\nimport ViewMatch from './components/view-match.js';\r\nimport EditList from './components/listpages/edit-list';\r\nimport AddEdit from './components/add-edit.js';\r\nimport ImportStructuredData from './components/import-structured-data.js';\r\nimport AddUnstructuredData from './components/add-unstructured-data.js';\r\nimport Export from './components/export.js';\r\nimport UserAdmin from \"./components/listpages/user-admin\"\r\nimport StructuredDataPage from \"./components/structured-data-page\";\r\nimport UserPage from \"./components/user-page\"\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tsidebarVisible: true\r\n\t\t}\r\n\r\n\t\tthis.handleSidebarClick = () => {\r\n\t\t\tthis.setState({ sidebarVisible: !this.state.sidebarVisible })\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Sidebar.Pushable as={Segment}>\r\n\t\t\t\t\t<Sidebar\r\n\t\t\t\t\t\tas={Menu}\r\n\t\t\t\t\t\tanimation='push'\r\n\t\t\t\t\t\ticon='labeled'\r\n\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\tonHide={this.handleSidebarHide}\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tvisible={this.state.sidebarVisible}\r\n\t\t\t\t\t\twidth='thin'\r\n\t\t\t\t\t>\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/'>\r\n\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/unstructured_data_list'>\r\n\t\t\t\t\t\t\tUnstructured Data List\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/structured_data_list'>\r\n\t\t\t\t\t\t\tStructured Data List\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/match_list'>\r\n\t\t\t\t\t\t\tMatch List\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/edit_list'>\r\n\t\t\t\t\t\t\tEdit List\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/add_edit'>\r\n\t\t\t\t\t\t\tAdd Edit\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/import_structured_data'>\r\n\t\t\t\t\t\t\tImport Structured Data\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/add_unstructured_data'>\r\n\t\t\t\t\t\t\tAdd Unstructured Data\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/export'>\r\n\t\t\t\t\t\t\tExport\r\n\t\t\t\t\t\t</Menu.Item>\r\n                        <Menu.Item as='a' href='/user_admin'>\r\n                            User Admin\r\n                        </Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/user_page'>\r\n                            User Page\r\n                        </Menu.Item>\r\n\t\t\t\t\t</Sidebar>\r\n\r\n\t\t\t\t\t<Sidebar.Pusher>\r\n\t\t\t\t\t\t<div className=\"App\" style={{minHeight:\"100vh\"}}>\r\n\t\t\t\t\t\t\t<Route \texact path='/' \r\n\t\t\t\t\t\t\t\t\tcomponent={() => <Home sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Route \tpath='/unstructured_data_list' \r\n\t\t\t\t\t\t\t\t\tcomponent={() => <UnstructuredDataList sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Route \tpath='/structured_data_list' \r\n\t\t\t\t\t\t\t\t\tcomponent={() => <StructuredDataList sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Route \tpath='/match_list'\r\n\t\t\t\t\t\t\t\t\tcomponent={() => <MatchList sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Route \tpath='/view_match'\r\n\t\t\t\t\t\t\t\t\tcomponent={() => <ViewMatch sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Route \tpath='/edit_list'\r\n\t\t\t\t\t\t\t\t\tcomponent={() => <EditList sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Route \tpath='/add_edit'\r\n\t\t\t\t\t\t\t\t\tcomponent={() => <AddEdit sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Route \tpath='/import_structured_data'\r\n\t\t\t\t\t\t\t\t\tcomponent={() => <ImportStructuredData sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Route \tpath='/add_unstructured_data'\r\n\t\t\t\t\t\t\t\t\tcomponent={() => <AddUnstructuredData sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Route \tpath='/export'\r\n\t\t\t\t\t\t\t\t\tcomponent={() => <Export sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Route \tpath='/structured_data_page'\r\n\t\t\t\t\t\t\t\t\tcomponent={() => <StructuredDataPage sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Route path='/user_admin'\r\n                                        component={() => <UserAdmin sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)} />}\r\n                            />\r\n\t\t\t\t\t\t\t<Route path='/user_page'\r\n                                        component={() => <UserPage sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)} />}\r\n                            />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Sidebar.Pusher>\r\n\r\n\t\t\t\t</Sidebar.Pushable>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Switch, Route } from 'react-router-dom';\r\nimport LoginForm from \"./components/login-form.js\";\r\nimport RegisterForm from \"./components/register-form.js\";\r\nimport App from \"./app.js\";\r\n\r\n function getCookie(name) {\r\n\tvar match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));\r\n\tif (match) return match[2];\r\n  }\r\n\r\nclass Site extends Component {\r\n\trender(){\r\n\t\treturn (<div className=\"Auth\" style={{minHeight:\"100vh\"}}>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route \texact path='/' \r\n\t\t\t\t\t\t\t\tcomponent={() => \r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tlet isAuth = getCookie(\"authToken\") !== undefined;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif(isAuth)\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\t\t\t\t\t\treturn(<App></App>)\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\treturn (<LoginForm></LoginForm>)\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Route \tpath='/login-form' \r\n\t\t\t\t\t\t\t\tcomponent={() => <LoginForm/>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Route \tpath='/register-form' \r\n\t\t\t\t\t\t\t\tcomponent={() => <RegisterForm/>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Route \tpath='/*'\r\n\t\t\t\t\t\t\t\tcomponent={() => <App/>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>)\r\n\t}\r\n}\r\n\r\n\r\nexport default Site;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import App from './app.js';\r\nimport Site from './site.js';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport * as serviceWorker from './service-worker';\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <Site />\r\n  </BrowserRouter>\r\n), document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}