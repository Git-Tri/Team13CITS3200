{"version":3,"sources":["components/page-header.js","components/home.js","domain.js","constants.js","components/tables/data-table.js","components/tables/unstructured-data-table.js","data-binding.js","delay-engine.js","components/listpages/list-page.js","components/listpages/unstructured-data-list.js","components/tables/structured-data-table.js","components/listpages/structured-data-list.js","components/tables/match-list-table.js","components/listpages/match-list.js","components/data-pair.js","components/view-match.js","edit-utils.js","components/tables/edit-list-table.js","components/choose-data-modal.js","components/listpages/edit-list.js","components/edit-form.js","components/add-edit.js","components/import-structured-data.js","components/choose-match-modal.js","components/add-unstructured-data.js","components/export.js","components/structured-data-page.js","components/login-form.js","components/register-form.js","app.js","service-worker.js","index.js"],"names":["PageHeader","props","state","isLoggedIn","isLogged","this","setState","history","push","isBackable","undefined","isbackable","URLSearchParams","location","search","get","isloggedin","Grid","style","padding","container","columns","Row","Column","Button","onClick","handleSidebarClick","sidebarVisible","Header","header","goBack","disabled","handleLoginClick","Component","withRouter","Home","className","id","height","UnstructuredData","matchid","title","author","url","published","extracted","data","StructuredData","date","home","away","competitionID","competitionName","Match","Edit","editID","structuredDataID","unstructuredDataID","isCorpus","settings","replace","replaceWith","type","order","Competition","name","countryName","countryId","ImportRequest","begin","end","compId","SearchRequest","value","field","MAX_TITLE_SIZE","STRUCTURED_DATA_FIELDS","EDIT_TYPES","EDIT_NAMES","DataTable","selectFunc","onSelect","activeRow","page","totalPages","Number","isInteger","Container","textAlign","onPageChange","paging","Array","isArray","items","Object","keys","every","k","Error","i","genRows","genHeader","isValidData","isSelectable","renderPageButtons","Table","striped","selectable","Body","UnstructuredDataRow","dateString","getDate","getMonth","getFullYear","length","substring","active","isActive","Cell","UnstructuredDataTable","map","item","index","key","HeaderCell","isIdValid","isPublishedValid","Date","isAuthorValid","isTitleValid","bindStructuredData","rawStructuredData","parseInt","bindUnstructureData","rawUnstructuredData","bindEdit","rawEdit","bindMatch","rawMatch","bindCompetition","rawComp","DelayEngine","delay","callback","start","lastInput","setTimeout","ListPage","target","isLoaded","isError","NaN","searches","delayEngine","error","errorInfo","stop","sendRequest","values","body","route","genBody","JSON","stringify","fetch","method","headers","then","res","ok","json","status","result","pages","loadData","catch","err","console","log","Message","negative","color","edit","Loader","renderLoaded","renderError","renderLoading","loadIfNotAlready","Dimmer","headerText","Form","renderSearch","minHeight","executeRender","UnstructuredDataList","changeHandler","e","handleSearchChange","split","match","league","unstructuredData","d","class","handlePageChange","bind","routeToUnstructuredData","onChange","StructuredDataRow","versus","StructuredDataTable","isMatchIdValid","isDateValid","isHomeValid","isAwayValid","isCompIdValid","isCompNameValid","StructuredDataList","isCompLoaded","structuredData","names","text","charAt","toUpperCase","slice","r","c","genDropDownItems","isAfter","parsedValue","loadComps","Input","placeholder","icon","Group","inline","label","handleDateSearchChange","Select","options","routeToData","MatchRow","MatchListTable","MatchList","matches","routeToMatch","Field","widths","submitHandler","DataPair","ViewMatch","isUnstructuredLoaded","loadUnstructuredData","getDay","Segment","basic","size","src","loadUnstructuredIfNotAlready","genSummary","summariseStructuredData","summariseUnstructuredData","EditRow","orderFunc","onOrderChange","FormatType","replaces","withs","SummaryBuilder","EditListTable","onOrderChangeFunc","isUp","edits","targets","isEditID","isTargetValid","isTypeValid","isSettingsValid","isReplaceValid","isReplaceWithValid","ChooseDataModal","lastSelectedId","lastSelectedIsStructued","isModalOpen","selectedItem","isNoChooseError","handleClose","isStructured","Tab","menu","pointing","panes","menuItem","render","Pane","handleSelection","warning","attached","hidden","primary","handleChooseButtonClick","Modal","closeIcon","onOpen","trigger","handleOpen","onClose","open","Content","Description","EditList","replaceTypes","isCorpusSearchChecked","corpusChoices","searchTarget","unstructuredDataSearches","structuredDataSearches","editSearches","summary","chosenData","editList","u","allData","concat","forEach","find","handleTextSearchChange","clearable","genDataSummaryText","handleChosenData","handleOrderChange","routeToEdit","EditForm","queryId","isNew","isMissing","hasData","isSaveSuccessful","fieldTypes","isSaving","isSaveAttempted","isValid","message","content","isValidObj","isFieldValid","isSettingValid","validateText","t","includes","f","updateSettingsOnTypeChange","isEditValid","genIsErrorSettings","handleSettingChange","fields","multiple","selection","renderSeqReplaceFieldWarningMessage","visible","loading","genIsError","handleChange","Checkbox","checked","handleChecked","renderReplaceFieldOptions","renderSeqReplaceFieldOptions","saveData","deleteData","positive","renderErrorWithData","renderMissing","renderErrorWithoutData","renderHasData","renderSaveSuccessful","ImportStructuredData","isImportSuccessful","request","dateParts","renderSuccessMessage","renderErrorMessage","ChooseMatchModal","AddUnstructuredData","preventDefault","submit","pub","ext","toSend","valid","XMLHttpRequest","idtext","exists","setRequestHeader","send","onload","statusText","hasMessage","onerror","delete","load","alert","chosenMatch","handleChosenMatch","Export","isExported","export","exportedType","b","renderData","StructuredDataPage","LoginForm","username","password","loggedIn","incorrectLogin","loginToken","verticalAlign","maxWidth","as","fluid","iconPosition","handleButton","href","RegisterForm","repeat_password","regkey","passwordMismatch","failedRegistration","App","Sidebar","Pushable","Menu","animation","inverted","onHide","handleSidebarHide","vertical","width","Item","Pusher","exact","path","component","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mWAIMA,E,YAEL,WAAYC,GAAQ,IAAD,8BAClB,4CAAMA,KAEDC,MAAQ,CACZC,YAAY,GAJK,E,8EAQFC,GACZA,EACHC,KAAKC,SAAS,CAACH,YAAY,IAE3BE,KAAKJ,MAAMM,QAAQC,KAAK,iB,+BAIhB,IAAD,OACJC,OAAuCC,IAA1BL,KAAKJ,MAAMU,WAC3B,IAAIC,gBAAgBP,KAAKJ,MAAMY,SAASC,QAAQC,IAAI,cAAgBV,KAAKJ,MAAMU,WAKhF,YAH8BD,IAA1BL,KAAKJ,MAAMU,YACdN,KAAKC,SAAS,CAACH,WAAYE,KAAKJ,MAAMe,aAGtC,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAACC,QAAQ,uBAAwBC,WAAS,EAACC,QAAS,GAChE,kBAACJ,EAAA,EAAKK,IAAN,KACC,kBAACL,EAAA,EAAKM,OAAN,KACC,kBAACC,EAAA,EAAD,CAAQC,QAASpB,KAAKJ,MAAMyB,qBACzBrB,KAAKJ,MAAM0B,eAAe,OAAO,QAAQ,aAG7C,kBAACV,EAAA,EAAKM,OAAN,KACA,kBAACK,EAAA,EAAD,KACEvB,KAAKJ,MAAM4B,SAGb,kBAACZ,EAAA,EAAKM,OAAN,KACCd,EAAa,kBAACe,EAAA,EAAD,CACbC,QAAS,WAAO,EAAKxB,MAAMM,QAAQuB,UACnCC,UAAWtB,GAFE,aAKFC,EACZ,kBAACc,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKO,iBAAiB,EAAK9B,MAAMC,cACrDE,KAAKH,MAAMC,WAAW,SAAS,gB,GA9Cd8B,aAuDVC,cAAWlC,GCtCXmC,E,iLAfb,OACC,yBAAKC,UAAU,QACd,kBAAC,EAAD,CACCP,OAAQ,OACRF,eAAgBtB,KAAKJ,MAAM0B,eAC3BD,mBAAoBrB,KAAKJ,MAAMyB,qBAEhC,yBAAKW,GAAG,YAAYnB,MAAO,CAACoB,OAAO,UAAnC,0B,GAVeL,a,iBCENM,EAGT,WAAYF,EAAGG,EAAQC,EAAMC,EAAOC,EAAIC,EAAUC,EAAUC,GAC3D,oBAEGzC,KAAKgC,GAAKA,EACVhC,KAAKmC,QAAUA,EACfnC,KAAKoC,MAAQA,EACbpC,KAAKqC,OAASA,EACdrC,KAAKsC,IAAMA,EACXtC,KAAKuC,UAAYA,EACjBvC,KAAKwC,UAAYA,EACjBxC,KAAKyC,KAAOA,GASPC,EAGT,WAAYV,EAAGW,EAAKC,EAAKC,EAAKC,EAAcC,EAAgBN,GAC3D,oBAEGzC,KAAKgC,GAAKA,EACVhC,KAAK2C,KAAOA,EACZ3C,KAAK4C,KAAOA,EACZ5C,KAAK6C,KAAOA,EACZ7C,KAAK8C,cAAgBA,EACrB9C,KAAK+C,gBAAkBA,EACvB/C,KAAKyC,KAAOA,GASPO,EAGT,WAAYhB,EAAGW,EAAKC,EAAKC,EAAKC,EAAcC,GAC3C,oBAEG/C,KAAKgC,GAAKA,EACVhC,KAAK2C,KAAOA,EACZ3C,KAAK4C,KAAOA,EACZ5C,KAAK6C,KAAOA,EACZ7C,KAAK8C,cAAgBA,EACrB9C,KAAK+C,gBAAkBA,GASlBE,EAGT,WAAYC,EAAOC,EAAiBC,EAAmBC,EAASC,EAASC,EAAQC,EAAYC,EAAKC,GACjG,oBAEG1D,KAAKkD,OAASA,EACdlD,KAAKmD,iBAAmBA,EACxBnD,KAAKoD,mBAAqBA,EAC1BpD,KAAKqD,SAAWA,EAChBrD,KAAKsD,SAAWA,EAChBtD,KAAKuD,QAAUA,EACfvD,KAAKwD,YAAcA,EACnBxD,KAAKyD,KAAOA,EACZzD,KAAK0D,MAAQA,GAORC,EAGT,WAAY3B,EAAG4B,EAAKC,EAAYC,GAC/B,oBAEG9D,KAAKgC,GAAKA,EACVhC,KAAK4D,KAAOA,EACZ5D,KAAK6D,YAAcA,EACnB7D,KAAK8D,UAAYA,GAMZC,EAGT,WAAYC,EAAMC,EAAIC,GACrB,oBAEGlE,KAAKgE,MAAQA,EAEbhE,KAAKiE,IAAMA,EAEXjE,KAAKkE,OAASA,GAOTC,EAGT,WAAYV,EAAKW,EAAMC,GACtB,oBAEGrE,KAAKyD,KAAOA,EACZzD,KAAKoE,MAAQA,EACbpE,KAAKqE,MAAQA,GC7HRC,EAAiB,GAEjBC,EAAyB,CAAC,QACnC,SACA,aACA,cACA,eACA,eACA,gBACA,sBACA,uBAESC,EAAa,CAAC,UAAU,mBAAmB,qBAE3CC,EAAa,CAAC,UAAU,gBAAgB,sB,SCqGtCC,E,YAxGX,WAAY9E,GACX,IAAD,EAEQ+E,EAFR,2BAKQA,OAFsBtE,IAF1B,4CAAMT,KAEEA,MAAMgF,SAEG,SAACnC,GAEV,EAAKxC,SAAS,CAAC4E,UAAWpC,EAAKT,KAC/B,EAAKpC,MAAMgF,SAASnC,IAMX,aAGjB,EAAK5C,MAAQ,CAACgF,WAAY,EAAEF,WAAYA,EAAWG,KAAK,EAAKlF,MAAMkF,KAAKC,WAAW,EAAKnF,MAAMmF,YAjBlG,E,iFAqBC,IAAD,OAII,GAAGC,OAAOC,UAAUjF,KAAKJ,MAAMmF,aAAeC,OAAOC,UAAUjF,KAAKH,MAAMiF,OAAS9E,KAAKH,MAAMkF,WAAa,EAEvG,OACI,kBAACG,EAAA,EAAD,CAAWC,UAAU,SAEjB,kBAAChE,EAAA,EAAD,CACIC,QAAS,kBAAM,EAAKxB,MAAMwF,eAAe,EAAKvF,MAAMiF,OACpDpD,SAAU1B,KAAKH,MAAMiF,KAAO,GAAK9E,KAAKJ,MAAMyF,QAFhD,QAKA,kBAAClE,EAAA,EAAD,CACIC,QAAS,kBAAM,EAAKxB,MAAMwF,eAAe,EAAKvF,MAAMiF,OACpDpD,SAAU1B,KAAKH,MAAMiF,OAAS9E,KAAKH,MAAMkF,YAAc/E,KAAKJ,MAAMyF,QAFtE,W,+BAmBf,IAAD,OAEI,IAAKC,MAAMC,QAASvF,KAAKJ,MAAM4F,QAAUC,OAAOC,KAAK1F,KAAKJ,MAAM4F,OAC3DG,OAAM,SAACC,GAAD,OAA6C,GAAtCN,MAAMC,QAAQ,EAAK3F,MAAM4F,MAAMI,OAE7C,MAAMC,MAAM,wFAGhB,GAAGP,MAAMC,QAAQvF,KAAKJ,MAAM4F,QAGyC,GAA9DxF,KAAKJ,MAAM4F,MAAMG,OAAM,SAACG,GAAD,YAAYzF,GAALyF,GAAuB,MAALA,KAE/C,MAAM,IAAID,MAAM,0CAIxB,QAAmBxF,GAAhBL,KAAK+F,cAA0C1F,GAAlBL,KAAKgG,UAGjC,MAAM,IAAIH,MAAM,iEAGIxF,IAArBL,KAAKiG,aAGJjG,KAAKiG,cAIT,IAAIC,OAAuC7F,IAAxBL,KAAKJ,MAAMgF,SAE9B,OACA,6BACK5E,KAAKmG,oBACN,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,WAAYJ,GACvB,kBAACE,EAAA,EAAM7E,OAAP,KACKvB,KAAKgG,aAEV,kBAACI,EAAA,EAAMG,KAAP,KACKvG,KAAK+F,iB,GAtGFnE,aCsExB,SAAS4E,EAAoB5G,GAGzB,GAAIA,EAAM6C,gBAAgBP,GAAqB,EAG3C,MAAM2D,MAAM,uDAIhB,IAAIlD,EAAO/C,EAAM6C,KAAKF,UAElBkE,EAAc9D,EAAK+D,UAAa,KAAO/D,EAAKgE,WAAW,GAAK,IAAMhE,EAAKiE,cAEvExE,EAAQxC,EAAM6C,KAAKL,MAEpBA,EAAMyE,OAASvC,IAGdlC,EAAQA,EAAM0E,UAAU,EAAExC,EAAe,GAAK,OAIlD,IAAIK,OAA+BtE,GAAlBT,EAAMgF,SAAwBhF,EAAMgF,SAAW,aAEhE,OACI,kBAACwB,EAAA,EAAMnF,IAAP,CAAWG,QAAS,kBAAMuD,EAAW/E,EAAM6C,OAAOsE,OAAQnH,EAAMoH,UAC5D,kBAACZ,EAAA,EAAMa,KAAP,KAAaR,GACb,kBAACL,EAAA,EAAMa,KAAP,KAAarH,EAAM6C,KAAKJ,QACxB,kBAAC+D,EAAA,EAAMa,KAAP,KAAa7E,IAMV8E,M,YAjGX,WAAYtH,GACX,qEAESA,I,uEAKT,IAAD,OAEI,OAAOI,KAAKJ,MAAM4F,MAAM2B,KAAI,SAACC,EAAMC,GAAP,OACxB,kBAACb,EAAD,CACIc,IAAKF,EAAKpF,GACVS,KAAM2E,EACNxC,SAAU,EAAK/E,MAAM8E,WACrBqC,SAAUI,EAAKpF,IAAM,EAAKnC,MAAMgF,iB,kCASxC,OAAO7E,KAAKH,MAAM2B,OAAU,kBAAC4E,EAAA,EAAMnF,IAAP,KACxB,kBAACmF,EAAA,EAAMmB,WAAP,kBACA,kBAACnB,EAAA,EAAMmB,WAAP,eACA,kBAACnB,EAAA,EAAMmB,WAAP,iB,oCAUJ,GAMU,GANPvH,KAAKJ,MAAM4F,MAAMG,OAAM,SAACG,GACvB,IAAI0B,EAA6B,kBAAV1B,EAAE9D,GACrByF,EAAmB3B,EAAEvD,qBAAqBmF,KAC1CC,EAAqC,kBAAd7B,EAAEzD,OACzBuF,EAAmC,kBAAb9B,EAAE1D,MAC5B,OAAOoF,GAAaC,GAAoBE,GAAiBC,KAMzD,MAAM,IAAI/B,MAAM,6E,GAvDQnB,GCF7B,SAASmD,EAAmBC,GAG/B,OAAO,IAAIpF,EAAesC,OAAO+C,SAASD,EAAkB9F,IACvD,IAAI0F,KAAKI,EAAkBnF,MAC3BmF,EAAkBlF,KAClBkF,EAAkBjF,KAClBmC,OAAO+C,SAASD,EAAkBhF,eAClCgF,EAAkB/E,gBAClB+E,EAAkBrF,MAUpB,SAASuF,EAAoBC,GAGhC,OAAO,IAAI/F,EAAiB8C,OAAO+C,SAASE,EAAoBjG,IAC5DgD,OAAO+C,SAASE,EAAoB9F,SACpC8F,EAAoB7F,MACpB6F,EAAoB5F,OACpB4F,EAAoB3F,IACpB,IAAIoF,KAAKO,EAAoB1F,WAC7B,IAAImF,KAAKO,EAAoBzF,WAC7ByF,EAAoBxF,MAUrB,SAASyF,EAASC,GAGrB,OAAO,IAAIlF,EAAK+B,OAAO+C,SAASI,EAAQjF,QACpC8B,OAAOC,UAAUkD,EAAQhF,kBAAoB6B,OAAO+C,SAASI,EAAQhF,kBAAoB,KACzF6B,OAAOC,UAAUkD,EAAQ/E,oBAAsB4B,OAAO+C,SAASI,EAAQ/E,oBAAsB,KAC7F+E,EAAQ9E,SACR8E,EAAQ7E,SACR6E,EAAQ5E,QACR4E,EAAQ3E,YACR2E,EAAQ1E,KACR0E,EAAQzE,OAUT,SAAS0E,EAAUC,GAGtB,OAAO,IAAIrF,EAAMgC,OAAO+C,SAASM,EAASrG,IACtC,IAAI0F,KAAKW,EAAS1F,MAClB0F,EAASzF,KACTyF,EAASxF,KACTmC,OAAO+C,SAASM,EAASvF,eACzBuF,EAAStF,iBAGV,SAASuF,EAAgBC,GAG5B,OAAO,IAAI5E,EAAYqB,OAAO+C,SAASQ,EAAQvG,IAC3CuG,EAAQ3E,KACR2E,EAAQ1E,YACRmB,OAAO+C,SAASQ,EAAQzE,Y,wCC/BjB0E,E,WA3CX,WAAYC,GACX,oBAEGzI,KAAKyI,MAAQA,E,kDAQXC,GACL,IAAD,OAEQC,EAAQ,IAAIjB,KAEhB1H,KAAK4I,UAAYD,EACjBE,YAAW,WAGJ,EAAKD,YAAcD,GAGlBD,MAIN1I,KAAKyI,S,6BAUPzI,KAAK4I,eAAYvI,M,KCySVyI,EAlVf,YAEC,WAAYlJ,GACX,IAAD,8BAEC,4CAAMA,KAEDC,MAAQ,CACH4C,KAAM,GACNsG,OAAO,GACNC,UAAU,EACTC,SAAS,EACTnE,KAAK,EACLC,WAAWmE,IACX7D,QAAO,EACP8D,SAAS,GACTC,YAAa,IAAIZ,EAAY,MAb1C,EAHD,+EA2BsBa,EAAOC,GAGrBtJ,KAAKC,SAAS,CAACgJ,SAAS,MA9BhC,uCAsCqBnE,GAGb9E,KAAKH,MAAMiF,KAAOA,EAElB9E,KAAKC,SAAS,CAACoF,QAAQ,EAAMP,KAAKA,MA3C1C,yCAiDuBwC,EAAI7G,GACtB,IAAD,YAEkBJ,IAAXI,QAAgCJ,IAARiH,WAGhBtH,KAAKH,MAAMsJ,SAAS7B,GAE3BtH,KAAKC,SAAS,CAACkJ,SAASnJ,KAAKH,MAAMsJ,WAAU,WAKzC,EAAKtJ,MAAMuJ,YAAYT,OAAM,kBAAM,EAAKlI,qBAQlCJ,IAAXI,GACW,OAAXA,GACmB,kBAAZA,GACPA,aAAkB0D,IAKjBnE,KAAKH,MAAMsJ,SAAS7B,GAAO7G,EAE3BT,KAAKC,SAAS,CAACkJ,SAASnJ,KAAKH,MAAMsJ,WAAU,WAKzC,EAAKtJ,MAAMuJ,YAAYT,OAAM,kBAAM,EAAKlI,kBArFxD,+BAqGQT,KAAKH,MAAMuJ,YAAYG,OAEvBvJ,KAAKwJ,YAAY/D,OAAOgE,OAAOzJ,KAAKH,MAAMsJ,aAvGlD,kCA+GgBA,GACX,IAUOO,EAVR,OAEI,QAAwBrJ,IAArBL,KAAKH,MAAM8J,MAGV,MAAM,IAAI9D,MAAM,sCAeZ6D,OAPYrJ,IAAjBL,KAAK4J,aAIYvJ,IAAb8I,EAGQU,KAAKC,UAAU,CAACX,SAASA,IAMzB,GAQJU,KAAKC,UAAU9J,KAAK4J,WAK/BG,MAAM/J,KAAKH,MAAM8J,MAAM,SAAW3J,KAAKH,MAAMiF,KAAK,CAACkF,OAAQ,OACvDN,KAAMA,EACNO,QAAS,CACL,eAAgB,sBAEnBC,MAAK,SAAAC,GAGE,GAAGA,EAAIC,GAGrB,OAAOD,EAAIE,OAGP,MAAiB,KAAdF,EAAIG,OAGL,IAAIzE,MAAM,KAMV,IAAIA,MAAM,QAKTqE,MAAK,SAAAK,GAKF,EAAKtK,SAAS,CAAC8E,WAAWwF,EAAOC,MAAMxB,UAAU,EAAK3D,QAAO,SAE/ChF,IAAXkK,GAGC,EAAKE,SAASF,MAMnBG,OAAM,SAAAC,GAELC,QAAQC,IAAIF,GACZ,EAAK1K,SAAS,CAACgJ,SAAS,SAtMxC,yCAmNE,KAA4B,IAAxBjJ,KAAKH,MAAMmJ,WAA4C,IAAtBhJ,KAAKH,MAAMwF,UAA2C,IAAvBrF,KAAKH,MAAMoJ,QAC/E,CAEU,QAAqB5I,IAAlBL,KAAKyK,SAGJ,MAAM,IAAI5E,MAAM,gDAI7B7F,KAAKwJ,iBA7NR,oCAwOK,IAAD,OAEI,OACA,kBAACsB,EAAA,EAAD,CAASC,UAAQ,GACb,kBAACD,EAAA,EAAQvJ,OAAT,6BACA,kEACA,kBAACJ,EAAA,EAAD,CAAQ6J,MAAM,MAAM5J,QAAS,kBAAM,EAAKoI,gBAAxC,iBA9OZ,kCAwPayB,GAGXjL,KAAKJ,MAAMM,QAAQC,KAAK,gBAAkB8K,EAAK/H,OAAS,sBA3P1D,sCAsQQ,OAAO,kBAACgI,EAAA,EAAD,CAAQnE,QAAM,GAAd,wBAtQf,sCAkRQ,QAAyB1G,IAAtBL,KAAKmL,aAGJ,MAAM,IAAItF,MAAM,mDAIpB,OAAG7F,KAAKH,MAAMoJ,QAGHjJ,KAAKoL,cAGRpL,KAAKH,MAAMmJ,SAGRhJ,KAAKmL,oBAMZnL,KAAKqL,kBAxSjB,+BAuTE,OAFArL,KAAKsL,mBAEG,yBAAKvJ,UAAU,QACd,kBAACwJ,EAAA,EAAD,CAAQxE,QAAU/G,KAAKH,MAAMmJ,UACxB,kBAACkC,EAAA,EAAD,CAAQnE,QAAU/G,KAAKH,MAAMmJ,UAA7B,aAEb,kBAAC,EAAD,CACCxH,YAAiCnB,GAAzBL,KAAKH,MAAM2L,WAA0BxL,KAAKH,MAAM2L,WAAa,YACrElK,eAAgBtB,KAAKJ,MAAM0B,eAC3BD,mBAAoBrB,KAAKJ,MAAMyB,qBAEhC,kBAAC6D,EAAA,EAAD,KACS,kBAACA,EAAA,EAAD,CAAWC,UAAU,UACjB,kBAACsG,EAAA,EAAD,UACuBpL,IAAtBL,KAAK0L,aAA6B1L,KAAK0L,oBAAiBrL,IAItE,6BACS,yBAAK2B,GAAG,YAAYnB,MAAO,CAAC8K,UAAU,UACjC3L,KAAK4L,uBAzUtB,GAA8BhK,aCCxBiK,E,YACF,WAAYjM,GAAQ,IAAD,8BACf,4CAAMA,KAeVkM,cAAgB,SAACC,GAEb,OADA,EAAK9L,SAAL,eAAiB8L,EAAEhD,OAAOnF,KAAOmI,EAAEhD,OAAO3E,QAClC2H,EAAEhD,OAAOnF,MACb,IAAK,SACD,EAAKoI,mBAAmBD,EAAEhD,OAAOnF,KAAM,IAAIO,EAAc,OAAQ4H,EAAEhD,OAAO3E,MAAO,CAAC,SAAU,QAAS,MAAO,UAC5G,MACJ,IAAK,QACD,IAAI6H,EAAQF,EAAEhD,OAAO3E,MAAM6H,MAAM,KAC7BtD,EAAQ,IAAIjB,KAAKuE,EAAM,GAAIA,EAAM,GAAK,EAAGA,EAAM,GAAI,EAAG,EAAG,GAC7D,EAAKD,mBAAmBD,EAAEhD,OAAOnF,KAAM,IAAIO,EAAc,QAASwE,EAAO,cACzEiC,QAAQC,IAAIlC,GACZ,MACJ,IAAK,MACGsD,EAAQF,EAAEhD,OAAO3E,MAAM6H,MAAM,KAAjC,IACIhI,EAAM,IAAIyD,KAAKuE,EAAM,GAAIA,EAAM,GAAK,EAAGA,EAAM,GAAI,EAAG,EAAG,GAC3D,EAAKD,mBAAmBD,EAAEhD,OAAOnF,KAAM,IAAIO,EAAc,SAAUF,EAAK,cACxE2G,QAAQC,IAAI5G,KA9BpB,EAAKpE,MAAMmJ,UAAW,EACtB,EAAKnJ,MAAMY,OAAS,GACpB,EAAKZ,MAAM8I,MAAQ,GACnB,EAAK9I,MAAMoE,IAAM,GACjB,EAAKpE,MAAMqM,MAAQ,GACnB,EAAKrM,MAAMsM,OAAS,GACpB,EAAKtM,MAAM2L,WAAa,yBACxB,EAAK3L,MAAM8J,MAAQ,wBATJ,E,sEA4CVlH,GAGLmI,QAAQC,IAAIpI,GAEZA,EAAK2J,iBAAmB3J,EAAK2J,iBAAiBjF,KAAI,SAACkF,GAAD,OAAOrE,EAAoBqE,MAE7ErM,KAAKC,SAAS,CAAEwC,KAAMA,EAAK2J,iBAAkBpD,UAAU,EAAMC,SAAS,M,8CAQlDxG,GACpBzC,KAAKJ,MAAMM,QAAQC,KAAK,6BAA+BsC,EAAKT,GAAK,sB,qCAMjE,OAAO,yBAAKsK,MAAM,iBAClB,yBAAKA,MAAM,mBACX,yBAAKA,MAAM,uBACP,kBAAC,EAAD,CACIvH,WAAY/E,KAAKH,MAAMkF,WACvBK,aAAcpF,KAAKuM,iBAAiBC,KAAKxM,MACzC8E,KAAM9E,KAAKH,MAAMiF,KACjBO,OAAQrF,KAAKH,MAAMwF,OACnBG,MAAOxF,KAAKH,MAAM4C,KAAMmC,SAAU5E,KAAKyM,wBAAwBD,KAAKxM,Y,qCAQ/E,IAAD,EAEwDA,KAAKH,MAAjDY,EAFZ,EAEYA,OAAQkI,EAFpB,EAEoBA,MAAO1E,EAF3B,EAE2BA,IAAKiI,EAFhC,EAEgCA,MAAOC,EAFvC,EAEuCA,OAFvC,EAE+C1J,KAE3C,OAAO,yBAAKT,GAAG,aACf,0BAAMsK,MAAM,WACR,yBAAKA,MAAM,iBACP,yBAAKA,MAAM,mBACX,yBAAKA,MAAM,uBACP,yCAGA,yBAAKA,MAAM,iBACP,2BAAO7I,KAAK,OAAOG,KAAK,SAASQ,MAAO3D,EAAQiM,SAAU1M,KAAK8L,cAAcU,KAAKxM,QAC9E,uBAAGsM,MAAM,mBAIzB,yBAAKA,MAAM,iBACP,yBAAKA,MAAM,mBACX,yBAAKA,MAAM,oBACP,0CAGA,2BAAO7I,KAAK,OAAOG,KAAK,QAAQQ,MAAOuE,EAAO+D,SAAU1M,KAAK8L,cAAcU,KAAKxM,QAChF,2BAAOyD,KAAK,OAAOG,KAAK,MAAMQ,MAAOH,EAAKyI,SAAU1M,KAAK8L,cAAcU,KAAKxM,SAEhF,yBAAKsM,MAAM,kBACP,wCAGA,2BAAO7I,KAAK,OAAOG,KAAK,QAAQQ,MAAO8H,EAAOQ,SAAU1M,KAAK8L,cAAcU,KAAKxM,UAGxF,yBAAKsM,MAAM,iBACP,yBAAKA,MAAM,oBACX,yBAAKA,MAAM,kBACP,yCAGA,2BAAO7I,KAAK,OAAOG,KAAK,SAASQ,MAAO+H,EAAQO,SAAU1M,KAAK8L,cAAcU,KAAKxM,gB,GA3HnE8I,GAiKpBjH,cAAWgK,GC7F1B,SAASc,EAAkB/M,GAGvB,GAAIA,EAAM6C,gBAAgBC,GAAmB,EAGzC,MAAMmD,MAAM,qDAIhB,IAAIlD,EAAO/C,EAAM6C,KAAKE,KAElB8D,EAAa9D,EAAK+D,UAAY,IAAM/D,EAAKgE,WAAa,IAAMhE,EAAKiE,cAEjEgG,EAAShN,EAAM6C,KAAKG,KAAO,OAAShD,EAAM6C,KAAKI,KAE/C8B,OAA+BtE,GAAlBT,EAAMgF,SAAwBhF,EAAMgF,SAAW,aAEhE,OACI,kBAACwB,EAAA,EAAMnF,IAAP,CAAWG,QAAS,kBAAMuD,EAAW/E,EAAM6C,OAAOsE,OAAQnH,EAAMoH,UAC5D,kBAACZ,EAAA,EAAMa,KAAP,KAAaR,GACb,kBAACL,EAAA,EAAMa,KAAP,KAAa2F,GACb,kBAACxG,EAAA,EAAMa,KAAP,KAAarH,EAAM6C,KAAKM,kBAMrB8J,O,YAtFX,WAAYjN,GACX,qEAESA,I,uEAIT,IAAD,OAEI,OAAOI,KAAKJ,MAAM4F,MAAM2B,KAAI,SAACC,EAAMC,GAAP,OACxB,kBAACsF,EAAD,CACIrF,IAAKF,EAAKpF,GACVS,KAAM2E,EACNxC,SAAU,EAAK/E,MAAM8E,WACrBqC,SAAUI,EAAKpF,IAAM,EAAKnC,MAAMgF,iB,kCASxC,OAAQ,kBAACuB,EAAA,EAAMnF,IAAP,KACJ,kBAACmF,EAAA,EAAMmB,WAAP,aACA,kBAACnB,EAAA,EAAMmB,WAAP,cACA,kBAACnB,EAAA,EAAMmB,WAAP,uB,oCAQJ,IASO,IATJvH,KAAKJ,MAAM4F,MAAMG,OAAM,SAACG,GAEvB,IAAIgH,EAAkC,kBAAVhH,EAAE9D,GAC1B+K,EAAcjH,EAAEnD,gBAAgB+E,KAChCsF,EAAiC,kBAAZlH,EAAElD,KACvBqK,EAAiC,kBAAZnH,EAAEjD,KACvBqK,EAA4C,kBAArBpH,EAAEhD,cACzBqK,EAAgD,kBAAvBrH,EAAE/C,gBAC/B,OAAO+J,GAAkBC,GAAeC,GAAeC,GAAeC,GAAiBC,KAGvF,MAAM,IAAItH,MAAM,yE,GArDMnB,GCArB0I,GAAb,YAEC,WAAYxN,GACX,IAAD,8BAEO,4CAAMA,KAEDC,MAAM2L,WAAa,uBAExB,EAAK3L,MAAM8J,MAAQ,sBAEnB,EAAK9J,MAAMwN,cAAe,EARjC,EAHD,+EAsBsBhE,EAAOC,GAGrBtJ,KAAKC,SAAS,CAACgJ,SAAS,MAzBhC,+BAiCasB,GAGL,IAAI9H,EAAO8H,EAAO+C,eAAenG,KAAI,SAACkF,GAAD,OAAOxE,EAAmBwE,MAE/DrM,KAAKC,SAAS,CAACwC,KAAKA,EAAKuG,UAAU,EAAMC,SAAS,MAtC1D,uCA0CqBzD,EAAM+H,GAGzB,OAAO/H,EAAM2B,KAAI,SAACC,EAAKC,GAItB,IAAImG,OAAiBnN,IAAVkN,EAAsBA,EAAMlG,GAASD,EAAK7D,QAAQ,uBAAwB,SAASkK,OAAO,GAAGC,cAActG,EAAKuG,MAAM,GAAGpK,QAAQ,uBAAwB,SAEpK,MAAO,CAAC+D,IAAIF,EAAKoG,KAAKA,EAAKpJ,MAAMgD,QAnDpC,kCA6DK,IAAD,OAEI2C,MAAM,iBACDG,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAK,GAGE,IAAI9H,EAAO8H,EAAOpD,KAAI,SAAAyG,GAAC,OAAItF,EAAgBsF,MAEtDnE,EAAShH,EAAK0E,KAAI,SAAA0G,GAAC,OAAIA,EAAE7L,MAEzBuL,EAAQ9K,EAAK0E,KAAI,SAAA0G,GAAC,OAAIA,EAAEjK,QAE5B,EAAK3D,SAAS,CAACuF,MAAM,EAAKsI,iBAAiBrE,EAAO8D,GAAOF,cAAc,SA1E5E,6CA+E2BzJ,EAAKQ,EAAM2J,GAG9B,GAAY,IAAT3J,EAGCpE,KAAKgM,mBAAmBpI,OAAKvD,OAIjC,CAEI,IAAIoD,EAAOsK,EAAU,QAAU,SAC3BC,EAAc5J,EAAM6H,MAAM,KAG1BtJ,EAAO,IAAI+E,KAAKsG,EAAY,GAAGA,EAAY,GAAGA,EAAY,IAE9DhO,KAAKgM,mBAAmBpI,EAAK,IAAIO,EAAcV,EAAKd,EAAK,YAjGrE,qCAwGK,IAAD,OAUI,OAR+B,IAA5B3C,KAAKH,MAAMwN,cAGVrN,KAAKiO,YAML,6BACI,kBAACxC,EAAA,EAAKyC,MAAN,CACIC,YAAY,SACZvK,KAAK,SACLwK,KAAK,SACL1B,SAAU,SAACX,EAAD,OAAInI,EAAJ,EAAIA,KAAKQ,EAAT,EAASA,MAAT,OACF,EAAK4H,mBAAmBpI,EAAK,IAAIO,EAAc,OAAOC,EAAM,CAAC,OAAO,OAAO,wBAEvF,kBAACqH,EAAA,EAAK4C,MAAN,CAAYC,QAAM,GACd,kBAAC7C,EAAA,EAAKyC,MAAN,CACIC,YAAY,SACZI,MAAM,UACN3K,KAAK,QACLH,KAAK,OACLiJ,SAAU,SAACX,EAAD,OAAInI,EAAJ,EAAIA,KAAKQ,EAAT,EAASA,MAAT,OACV,EAAKoK,uBAAuB5K,EAAKQ,GAAM,MAE3C,kBAACqH,EAAA,EAAKyC,MAAN,CACIC,YAAY,QACZvK,KAAK,SACLH,KAAK,OACLiJ,SAAU,SAACX,EAAD,OAAInI,EAAJ,EAAIA,KAAKQ,EAAT,EAASA,MAAT,OACV,EAAKoK,uBAAuB5K,EAAKQ,GAAM,MAE3C,kBAACqH,EAAA,EAAKgD,OAAN,CACIF,MAAM,cACN3K,KAAK,SACL8K,QAAS1O,KAAKH,MAAM2F,MACpBkH,SAAU,SAACX,EAAD,KAAInI,KAAJ,IAASQ,EAAT,EAASA,MAAT,OAAoB,EAAK4H,mBAAmB,IAAI7H,EAAc,QAAQC,EAAM,yBA/I9G,qCA+JE,OACE,6BACC,qGACe,kBAAC,GAAD,CACIW,WAAY/E,KAAKH,MAAMkF,WACvBK,aAAcpF,KAAKuM,iBAAiBC,KAAKxM,MACzC8E,KAAM9E,KAAKH,MAAMiF,KACjBO,OAAQrF,KAAKH,MAAMwF,OACnBT,SAAU5E,KAAK2O,YAAYnC,KAAKxM,MAChCwF,MAAOxF,KAAKH,MAAM4C,UAxK1C,kCAkLaA,GAGXzC,KAAKJ,MAAMM,QAAQC,KAAK,4BAA8BsC,EAAKT,GAAK,sBArLlE,sCA+LQ,OAAO,kBAACkJ,EAAA,EAAD,yBA/Lf,GAAwCpC,GAsMzBjH,eAAWuL,I,UCvI1B,SAASwB,GAAShP,GAEd,IAAI+C,EAAO/C,EAAM6C,KAAKE,KAClB8D,EAAa9D,EAAK+D,UAAY,KAAO/D,EAAKgE,WAAW,GAAK,IAAMhE,EAAKiE,cACrEgG,EAAShN,EAAM6C,KAAKG,KAAO,OAAShD,EAAM6C,KAAKI,KAC/C8B,OAA+BtE,GAAlBT,EAAMgF,SAAwBhF,EAAMgF,SAAW,aAChE,OACI,kBAACwB,EAAA,EAAMnF,IAAP,CAAWG,QAAS,kBAAMuD,EAAW/E,EAAM6C,OAAOsE,OAAQnH,EAAMoH,UAC5D,kBAACZ,EAAA,EAAMa,KAAP,KAAaR,GACb,kBAACL,EAAA,EAAMa,KAAP,KAAa2F,GACb,kBAACxG,EAAA,EAAMa,KAAP,KAAarH,EAAM6C,KAAKM,kBAKrB8L,O,YAzEX,WAAYjP,GACX,qEACSA,I,uEAKT,IAAD,OAEI,OAAOI,KAAKJ,MAAM4F,MAAM2B,KAAI,SAACC,EAAMC,GAAP,OACxB,kBAACuH,GAAD,CACItH,IAAKF,EAAKpF,GACVS,KAAM2E,EACNxC,SAAU,EAAK/E,MAAM8E,WACrBqC,SAAUI,EAAKpF,IAAM,EAAKnC,MAAMgF,iB,kCAUxC,OAAQ,kBAACuB,EAAA,EAAMnF,IAAP,KACJ,kBAACmF,EAAA,EAAMmB,WAAP,aACA,kBAACnB,EAAA,EAAMmB,WAAP,cACA,kBAACnB,EAAA,EAAMmB,WAAP,uB,oCAQJ,IASO,IATJvH,KAAKJ,MAAM4F,MAAMG,OAAM,SAACG,GAEvB,IAAIgH,EAAkC,kBAAVhH,EAAE9D,GAC1B+K,EAAcjH,EAAEnD,gBAAgB+E,KAChCsF,EAAiC,kBAAZlH,EAAElD,KACvBqK,EAAiC,kBAAZnH,EAAEjD,KACvBqK,EAA4C,kBAArBpH,EAAEhD,cACzBqK,EAAgD,kBAAvBrH,EAAE/C,gBAC/B,OAAO+J,GAAkBC,GAAeC,GAAeC,GAAeC,GAAiBC,KAGvF,MAAM,IAAItH,MAAM,yE,GArDCnB,GCCvBoK,G,YAEL,WAAYlP,GACX,IAAD,8BAEC,4CAAMA,KAEDC,MAAM2L,WAAa,aAExB,EAAK3L,MAAM8J,MAAQ,aANpB,E,+EAeqBN,EAAOC,GAGrBtJ,KAAKC,SAAS,CAACgJ,SAAS,M,+BAItBsB,GAGRK,QAAQC,IAAIN,GAEZA,EAASA,EAAOwE,QAAQ5H,KAAI,SAACkF,GAAD,OAAOjE,EAAUiE,MAI7CrM,KAAKC,SAAS,CAAEwC,KAAM8H,EAAQvB,UAAU,EAAMC,SAAS,M,mCAI3CiD,GACZlM,KAAKJ,MAAMM,QAAQC,KAAK,kBAAoB+L,EAAMlK,GAAK,sB,qCAMvD,OACC,6BACC,8FACA,6BACC,kBAAC,GAAD,CACC+C,WAAY/E,KAAKH,MAAMkF,WACvBK,aAAcpF,KAAKuM,iBAAiBC,KAAKxM,MACzC8E,KAAM9E,KAAKH,MAAMiF,KACjBO,OAAQrF,KAAKH,MAAMwF,OACnBT,SAAU5E,KAAKgP,aAAaxC,KAAKxM,MACjCwF,MAAOxF,KAAKH,MAAM4C,W,qCAUtB,OAAO,kBAACgJ,EAAA,EAAD,KACN,kBAACA,EAAA,EAAKwD,MAAN,KACC,kBAACf,GAAA,EAAD,CAAOK,MAAM,SAAS9K,KAAK,OAAOG,KAAK,gBAExC,kBAAC6H,EAAA,EAAK4C,MAAN,CAAYa,OAAO,SAClB,kBAACzD,EAAA,EAAKwD,MAAN,KACC,kBAACf,GAAA,EAAD,CAAOK,MAAM,UAAU9K,KAAK,OAAOG,KAAK,YAAYuK,YAAY,gBAEjE,kBAAC1C,EAAA,EAAKwD,MAAN,KACC,kBAACf,GAAA,EAAD,CAAOzK,KAAK,OAAQG,KAAK,UAAUuK,YAAY,cAEhD,kBAAC1C,EAAA,EAAKwD,MAAN,KACC,kBAACf,GAAA,EAAD,CAAOK,MAAM,cAAc9K,KAAK,OAAQG,KAAK,kBAG/C,kBAAC6H,EAAA,EAAKtK,OAAN,CACCC,QAASpB,KAAKmP,eADf,e,GAhFqBrG,GA4FTjH,eAAWiN,IC3EXM,OAjBf,SAAkBxP,GAGd,QAAkBS,IAAfT,EAAM4N,WAAsCnN,IAAhBT,EAAM2O,MAGjC,MAAM,IAAI1I,MAAM,kCAIpB,OACA,yBAAKhF,MAAO,CAACC,QAAQ,sBACjB,uBAAGD,MAAO,CAACC,QAAQ,qBAAnB,IAA0ClB,EAAM2O,MAAhD,KAA4D3O,EAAM4N,O,qBCXpE6B,G,YAEL,WAAYzP,GACR,IAAD,sBAEI,4CAAMA,IAGN,IAAIoC,OAAkB3B,IAAbT,EAAMoC,GACf,IAAIzB,gBAAgBX,EAAMY,SAASC,QAAQC,IAAI,MAAQd,EAAMoC,GAE7D,QAAU3B,IAAP2B,GAA2B,OAAPA,EAGnB,MAAM,IAAI6D,MAAM,sBAXxB,OAeI,EAAKhG,MAAQ,CAACuM,iBAAkB,GAAG3J,KAAM,GAAG6M,sBAAsB,EAAOtG,UAAU,EAAOC,SAAS,EAAOjH,GAAGA,EAAGwJ,WAAW,WAf/H,E,+EAyBkBnC,EAAOC,GAGrBtJ,KAAKC,SAAS,CAACgJ,SAAS,M,iCAQ3B,IAAD,OAEIc,MAAM,sBAAwB/J,KAAKH,MAAMmC,IACpCkI,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAK,GAGE,IAAI9H,EAAOoF,EAAmB0C,GAE1B5H,EAAOF,EAAKE,KAEZ8D,EAAa9D,EAAK+D,UAAY,KAAO/D,EAAKgE,WAAW,GAAK,IAAMhE,EAAKiE,cAErE4E,EAAa/I,EAAKG,KAAO,OAASH,EAAKI,KAAO,OAAS4D,EAE1E,EAAKxG,SAAS,CAACwC,KAAKA,EAAKuG,UAAU,EAAMC,SAAS,EAAMuC,WAAYA,OAE5Dd,OAAM,SAAAC,GAAG,OAAI,EAAK1K,SAAS,CAACgJ,SAAS,EAAKD,UAAS,S,6CAQ3D,IAAD,OAEIe,MAAM,oCAAsC/J,KAAKH,MAAMmC,IAClDkI,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAK,GAGbK,QAAQC,IAAIN,GAEZ,IAAI9H,EAAO8H,EAAO6B,iBAAiBjF,KAAI,SAACkF,GAAD,OAAOrE,EAAoBqE,MAGlEzB,QAAQC,IAAIpI,GAEZ,EAAKxC,SAAS,CAACmM,iBAAiB3J,EAAK6M,sBAAsB,EAAMrG,SAAS,OAElEyB,OAAM,SAAAC,GAAG,OAAI,EAAK1K,SAAS,CAACgJ,SAAS,EAAKqG,sBAAsB,S,0CAUhD,IAAxBtP,KAAKH,MAAMmJ,UAGbhJ,KAAKyK,a,sDAUiC,IAApCzK,KAAKH,MAAMyP,sBAGbtP,KAAKuP,yB,6FAiBA,IAAI5M,EAAO3C,KAAKH,MAAM4C,KAAKE,KAEvB8D,EAAa9D,EAAK6M,SAAW,IAAM7M,EAAKgE,WAAa,IAAMhE,EAAKiE,cAE1E,OAEc,6BAEI,kBAAC1B,EAAA,EAAD,CAAWC,UAAU,QACjB,kBAACsK,EAAA,EAAD,CAASC,OAAK,EAACC,KAAK,SAAQ,oCAAalJ,EAAzC,IAAqD,2CAAoBzG,KAAKH,MAAM4C,KAAKM,iBAC5F,kBAACxB,EAAA,EAAD,0BACf,kBAAC,EAAD,CAAuBiE,MAAOxF,KAAKH,MAAMuM,mBACzC,kBAAC7K,EAAA,EAAD,wBACkB,kBAAC,KAAD,CAAWqO,IAAK5P,KAAKH,MAAM4C,KAAKA,W,oCAiBhD,OACA,kBAACqI,EAAA,EAAD,CAASC,UAAQ,GACb,kBAACD,EAAA,EAAQvJ,OAAT,6BACA,kEACA,kBAACJ,EAAA,EAAD,CAAQ6J,MAAM,MAAM5J,QAASpB,KAAKyK,SAAS+B,KAAKxM,OAAhD,iB,kCAUCyC,GAGXzC,KAAKJ,MAAMM,QAAQC,KAAK,4BAA8BsC,EAAKT,GAAK,sB,sCAU1D,OAAO,kBAACkJ,EAAA,EAAD,uB,sCAWP,OAAGlL,KAAKH,MAAMoJ,QAGHjJ,KAAKoL,cAGRpL,KAAKH,MAAMmJ,SAGRhJ,KAAKmL,eAMLnL,KAAKqL,kB,+BAiBtB,OAJArL,KAAKsL,mBAELtL,KAAK6P,+BAEG,yBAAK9N,UAAU,QACtB,kBAAC,EAAD,CACCP,OAAQxB,KAAKH,MAAM2L,WACnBlK,eAAgBtB,KAAKJ,MAAM0B,eAC3BD,mBAAoBrB,KAAKJ,MAAMyB,qBAEhC,6BACA,yBAAKW,GAAG,YAAYnB,MAAO,CAAC8K,UAAU,UACpC3L,KAAK4L,sB,GAvOchK,aA8OTC,eAAWwN,IC1MnB,SAASS,GAAWrN,GAIvB,OAAY,OAATA,QAA0BpC,IAAToC,EAGT,gBAGRA,aAAgBC,EApDvB,SAAiCD,GAK7B,IAAIE,EAAOF,EAAKE,KAQhB,OANiBA,EAAK+D,UAAY,KAAO/D,EAAKgE,WAAW,GAAK,IAAMhE,EAAKiE,cAMrD,MAJLnE,EAAKM,gBAImB,OAF1BN,EAAKG,KAAO,OAASH,EAAKI,MA4C5BkN,CAAwBtN,GAG3BA,aAAgBP,EAvC5B,SAAmCO,GAI/B,IAAIE,EAAOF,EAAKF,UAEZkE,EAAc9D,EAAK+D,UAAa,KAAO/D,EAAKgE,WAAW,GAAK,IAAMhE,EAAKiE,cAEvEvE,EAASI,EAAKJ,OAEdD,EAAQK,EAAKL,MASjB,OAPGA,EAAMyE,OAASvC,IAGdlC,EAAQA,EAAM0E,UAAU,EAAExC,EAAe,GAAK,OAI3CmC,EAAa,MAAQpE,EAAS,MAAQD,EAuBlC4N,CAA0BvN,GAM1B,gBCoGf,SAASwN,GAAQrQ,GAGb,GAAIA,EAAM6C,KAAKwI,gBAAgBhI,GAAS,EAGpC,MAAM4C,MAAM,0CAKhB,IAAIoF,EAAOrL,EAAM6C,KAAKwI,KAElBlC,EAASnJ,EAAM6C,KAAKsG,OAEpBpE,OAA+BtE,GAAlBT,EAAMgF,SAAwBhF,EAAMgF,SAAW,aAE5DsL,OAAoC7P,IAAxBT,EAAMuQ,cAA8BvQ,EAAMuQ,cAAgB,aAE1E,OACI,kBAAC/J,EAAA,EAAMnF,IAAP,KACI,kBAACmF,EAAA,EAAMa,KAAP,CAAY7F,QAAS,kBAAMuD,EAAW/E,EAAM6C,KAAKwI,OAAOlE,OAAQnH,EAAMoH,UAAW8I,GAAW/G,IAC5F,kBAAC3C,EAAA,EAAMa,KAAP,CAAY7F,QAAS,kBAAMuD,EAAW/E,EAAM6C,KAAKwI,OAAOlE,OAAQnH,EAAMoH,UAhDlF,SAAoBiE,GAGhB,OAAOA,EAAKxH,MAGR,IAAK,UACD,MAAO,UAEX,IAAK,mBACD,MAAO,qBACX,IAAK,oBACD,MAAO,qBACX,QACI,MAAO,SAkC0E2M,CAAWnF,IAC5F,kBAAC7E,EAAA,EAAMa,KAAP,CAAY7F,QAAS,kBAAMuD,EAAW/E,EAAM6C,KAAKwI,OAAOlE,OAAQnH,EAAMoH,UAhGlF,SAAwBiE,GAIpB,OAAOA,EAAKxH,MAGR,IAAK,UACG,OAAO,6BAAK,wCAAL,IAAuBwH,EAAK1H,QAA5B,KAAsC,yCAAtC,KAA0D0H,EAAKzH,aAE9E,IAAK,mBACD,OAAO,6BAAK,wCAAL,IAAuByH,EAAK1H,QAA5B,KAAsC,yCAAtC,KAA0D0H,EAAKzH,YAClE,6CADG,KACqByH,EAAK3H,SAASe,MADnC,KAEX,IAAK,oBACG,IAAIgM,EAAWpF,EAAK1H,QAAQ0I,MAAM,KAE9BqE,EAAQrF,EAAKzH,YAAYyI,MAAM,KAE/BzG,EAAQ6K,EAASlJ,KAAI,SAACyG,EAAEvG,GAAH,OAAc,6BAAMuG,EAAN,IAAS,yCAAT,IAA4B0C,EAAMjJ,OAEzE,OAAG7B,EAAMqB,QAAU,EAGR,6BAAK,4CAAL,IAA2BrB,IAMlCA,EAAQA,EAAMmI,MAAM,EAAE,GAEf,6BAAK,4CAAL,IAA2BnI,EAAM,sCAIpD,QACI,MAAO,SA4D0E+K,CAAetF,IAChG,kBAAC7E,EAAA,EAAMa,KAAP,KACI,6BACI,kBAAC9F,EAAA,EAAD,CAAQC,QAAS,kBAAM8O,GAAU,EAAKtQ,EAAM6C,KAAKwI,QAAjD,MACA,kBAAC9J,EAAA,EAAD,CAAQC,QAAS,kBAAM8O,GAAU,EAAMtQ,EAAM6C,KAAKwI,QAAlD,WAQLuF,O,YA3LX,WAAY5Q,GACX,IAAD,sBAGI,IAAI6Q,OAAoBpQ,EAH5B,OAOQoQ,OAF2BpQ,IAJ/B,4CAAMT,KAIEA,MAAMuQ,cAEU,SAACO,EAAKjO,GAEtB,EAAK7C,MAAMuQ,cAAcO,EAAKjO,IAMd,aAGxB,EAAK5C,MAAM4Q,kBAAoBA,EAlBnC,E,uEAsBC,IAAD,OAII,OAAOzQ,KAAKJ,MAAM4F,MAAMmL,MAAMxJ,KAAI,SAACC,EAAMC,GAAP,OAC9B,kBAAC4I,GAAD,CACI3I,IAAKF,EAAKlE,OACVT,KAAM,CAACwI,KAAK7D,EAAK2B,OAAO,EAAKnJ,MAAM4F,MAAMoL,QAAQvJ,IACjDzC,SAAU,EAAK/E,MAAM8E,WACrBwL,cAAe,EAAKtQ,MAAM4Q,kBAC1BzJ,SAAUI,EAAKpF,IAAM,EAAKnC,MAAMgF,iB,kCASxC,OAAQ,kBAACuB,EAAA,EAAMnF,IAAP,KACJ,kBAACmF,EAAA,EAAMmB,WAAP,eACA,kBAACnB,EAAA,EAAMmB,WAAP,aACA,kBAACnB,EAAA,EAAMmB,WAAP,gBACA,kBAACnB,EAAA,EAAMmB,WAAP,iB,oCAUJ,IAUO,IAVJvH,KAAKJ,MAAM4F,MAAMmL,MAAMhL,OAAM,SAACG,GAE7B,IAAI+K,EAAW7L,OAAOC,UAAUa,EAAE5C,QAC9B4N,EAAgBhL,EAAEzC,UAAY2B,OAAOC,UAAUa,EAAE3C,mBAAqB6B,OAAOC,UAAUa,EAAE1C,oBACzF2N,EAAgC,iBAAXjL,EAAErC,KACvBuN,EAAyC,iBAAflL,EAAExC,UAAmC,oBAAVwC,EAAErC,MAC5C,oBAAVqC,EAAErC,MAAoD,iBAAfqC,EAAExC,eAAwCjD,IAAfyF,EAAExC,UAAyC,OAAfwC,EAAExC,UAAiD,iBAArBwC,EAAExC,SAASe,MACxI4M,EAAsC,iBAAdnL,EAAEvC,QAC1B2N,EAA8C,iBAAlBpL,EAAEtC,YAClC,OAAOqN,GAAYC,GAAiBC,GAAeC,GAAmBC,GAAkBC,KAIxF,MAAM,IAAIrL,MAAM,kD,GA7EAnB,G,oBCsQbyM,G,YAjQX,WAAYvR,GACX,IAAD,EAII,GAJJ,oBAIsC,mBAFlC,4CAAMA,KAESA,MAAMgF,SAGjB,MAAMiB,MAAM,gEAPpB,OAWI,EAAKhG,MAAQ,CAACmJ,UAAU,EACZvG,UAAMpC,EACN4I,SAAS,EACTmI,gBAAiB,EACjBC,yBAAyB,EACzBC,aAAa,EACbC,kBAAclR,EACdmR,iBAAiB,GAlBjC,E,+EA2BkBnI,EAAOC,GAGrBtJ,KAAKC,SAAS,CAACgJ,SAAS,M,iCAS3B,IAAD,OAEIc,MAAM,sBACDG,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAK,GAGEA,EAAO+C,eAAiB/C,EAAO+C,eAAenG,KAAI,SAACkF,GAAD,OAAOxE,EAAmBwE,MAE5E9B,EAAO6B,iBAAmB7B,EAAO6B,iBAAiBjF,KAAI,SAACkF,GAAD,OAAOrE,EAAoBqE,MAEjF,EAAKpM,SAAS,CAACwC,KAAK8H,EAAOvB,UAAU,EAAMC,SAAS,OAG3DyB,OAAM,SAAAC,GAAG,OAAI,EAAK1K,SAAS,CAACgJ,SAAS,S,iDAYT,GAA9BjJ,KAAKH,MAAMuR,gBAGVpR,KAAKJ,MAAMgF,SAAS5E,KAAKH,MAAM0R,cAE/BvR,KAAKyR,eAMLzR,KAAKC,SAAS,CAACuR,iBAAiB,M,sCAUxB/O,GAGZ,IAAIiP,EAAgBjP,aAAgBC,KAAoB,EAEvC1C,KAAKH,MAAMwR,0BAA4BK,GAEvCjP,EAAKT,KAAOhC,KAAKH,MAAMuR,gBAGpCpR,KAAKJ,MAAMgF,SAASnC,GAEpBzC,KAAKC,SAAS,CAACqR,aAAa,EAAME,iBAAiB,KAOnDxR,KAAKC,SAAS,CAACoR,wBAAyBK,EAAaN,eAAgB3O,EAAKT,GAAGuP,aAAc9O,M,qCAUlG,IAAD,OAEI,OAAO,6BACH,kBAACkP,GAAA,EAAD,CAAKC,KAAM,CAACC,UAAS,GAAOC,MAC5B,CACI,CAAEC,SAAU,kBACRC,OAAQ,kBACJ,kBAACL,GAAA,EAAIM,KAAL,KACA,kBAAC,GAAD,CAAqBzM,MAAO,EAAK3F,MAAM4C,KAAK6K,eACxC1I,SAAU,EAAKsN,gBAAgB1F,KAAK,QAGhD,CAAEuF,SAAU,oBACRC,OAAQ,kBAAM,kBAACL,GAAA,EAAIM,KAAL,KACF,kBAAC,EAAD,CAAuBzM,MAAO,EAAK3F,MAAM4C,KAAK2J,iBAC1CxH,SAAU,EAAKsN,gBAAgB1F,KAAK,WAK5D,kBAAC1B,EAAA,EAAD,CAASqH,SAAO,EAACC,UAAQ,EAACC,QAAUrS,KAAKH,MAAM2R,iBAA/C,mGAGA,6BACA,kBAACrQ,EAAA,EAAD,CAAQmR,SAAO,EAAClR,QAASpB,KAAKuS,wBAAwB/F,KAAKxM,OAA3D,a,oCAWJ,OACA,kBAAC8K,EAAA,EAAD,CAASC,UAAQ,GACb,kBAACD,EAAA,EAAQvJ,OAAT,6BACA,kEACA,kBAACJ,EAAA,EAAD,CAAQ6J,MAAM,MAAM5J,QAASpB,KAAKyK,SAAS+B,KAAKxM,OAAhD,iB,sCAYJ,OAAO,kBAACkL,EAAA,EAAD,uB,sCAWP,OAAGlL,KAAKH,MAAMoJ,QAGHjJ,KAAKoL,cAGRpL,KAAKH,MAAMmJ,SAGRhJ,KAAKmL,eAMLnL,KAAKqL,kB,mCASPrL,KAAKC,SAAS,CAACqR,aAAa,M,oCAMrCtR,KAAKC,SAAS,CACVqR,aAAa,EACbF,gBAAiB,EACjBC,yBAAyB,EACzBG,iBAAiB,EACjBD,kBAAclR,M,+BAOrB,IAAD,OAeI,OACI,kBAACmS,GAAA,EAAD,CACIC,WAAS,EACTC,OAhBe,YAIQ,IAAxB,EAAK7S,MAAMmJ,UAGV,EAAKyB,YASoB+B,KAAKxM,MAC9B2S,QAAS,kBAACxR,EAAA,EAAD,CAAQmR,SAAO,EAAClR,QAASpB,KAAK4S,WAAWpG,KAAKxM,YAA4BK,IAApBL,KAAKJ,MAAM4N,KAAqBxN,KAAKJ,MAAM4N,KAAO,UACjHqF,QAAS7S,KAAKyR,YAAYjF,KAAKxM,MAC/B8S,KAAM9S,KAAKH,MAAMyR,aACjB,kBAACkB,GAAA,EAAMjR,OAAP,oBACA,kBAACiR,GAAA,EAAMO,QAAP,KACA,kBAACP,GAAA,EAAMQ,YAAP,KACI,kBAACzR,EAAA,EAAD,2DACA,8BAECvB,KAAK4L,sB,GA3PIhK,aCCjBqR,GAAb,YAEC,WAAYrT,GACX,IAAD,8BAEC,4CAAMA,KAEKC,MAAM2L,WAAa,YACxB,EAAK3L,MAAM8J,MAAQ,WACnB,EAAK9J,MAAMqT,aAAe,EAAKpF,iBAAiBtJ,EAAWC,GAC3D,EAAK5E,MAAMsT,2BAAwB9S,EACnC,EAAKR,MAAMuT,cAAgB,EAAKtF,iBAAiB,EAAC,GAAK,GAAO,CAAC,MAAM,OACrE,EAAKjO,MAAMwT,kBAAehT,EAC1B,EAAKR,MAAMyT,yBAA2B,GACtC,EAAKzT,MAAM0T,uBAAwB,GAX1C,EAHD,uEAwBQ,MAAM,CAACC,aAAa/N,OAAOgE,OAAOzJ,KAAKH,MAAMsJ,UACrCmK,yBAAyB7N,OAAOgE,OAAOzJ,KAAKH,MAAMyT,0BAClDC,uBAAuB9N,OAAOgE,OAAOzJ,KAAKH,MAAM0T,2BA1BhE,6CAoC2BxH,EApC3B,GAqCK,IADyBnI,EAC1B,EAD0BA,KAAKQ,EAC/B,EAD+BA,MAG3BpE,KAAKH,MAAMyT,yBAAyB1P,GAAQ,IAAIO,EAAc,OAAOC,EAAM,CAAC,SAAS,UAErFpE,KAAKH,MAAM0T,uBAAuB3P,GAAQ,IAAIO,EAAc,OAAOC,EAAM,CAAC,kBAAkB,OAAO,SAEnGpE,KAAKgM,mBAAmBpI,EAAK,IAAIO,EAAc,OAAOC,EAAM,CAAC,UAAU,cAAc,YA3C7F,wCA+CsBsM,EAAKzF,GACtB,IAAD,OAEQvB,EAAOG,KAAKC,UAAU,CAAC4G,KAAKA,EAAKzF,KAAKA,IAE1CjL,KAAKC,SAAS,CAAC+I,UAAS,IAGxBe,MAAM,eAAe,CAACC,OAAO,OAAON,KAAKA,EAAKO,QAAS,CACnD,eAAgB,sBAChBC,MAAK,SAAAC,GAGD,IAAGA,EAAIC,GAQF,MAAiB,KAAdD,EAAIG,OAGF,IAAIzE,MAAM,KAMV,IAAIA,MAAM,KAdhB+E,QAAQC,IAAI,mBAEZ,EAAKrB,YAAY,EAAK3J,MAAMsJ,aAiBjCuB,OAAM,SAAAC,GAEDC,QAAQC,IAAIF,GACZ,EAAK1K,SAAS,CAACgJ,SAAS,SArF5C,2CAgGQ,IAEIwK,EAAU3D,GAFD9P,KAAKH,MAAMwT,cAI9B,MAAmB,kBAAZI,EAA8B,mBAAqBA,IApG5D,uCA8GkBjO,EAAM+H,GAGtB,OAAO/H,EAAM2B,KAAI,SAACC,EAAKC,GAItB,IAAImG,OAAiBnN,IAAVkN,EAAsBA,EAAMlG,GAASD,EAAK7D,QAAQ,uBAAwB,SAASkK,OAAO,GAAGC,cAActG,EAAKuG,MAAM,GAAGpK,QAAQ,uBAAwB,SAEpK,MAAO,CAAC+D,IAAIF,EAAKoG,KAAKA,EAAKpJ,MAAMgD,QAvHpC,uCAkIqBsM,GAGb1T,KAAKC,SAAS,CAACkT,uBAAsB,EAAME,aAAaK,IAErDA,aAAsBhR,EAG9B1C,KAAKgM,mBAAmB,SAAS,IAAI7H,EAAc,QAAQuP,EAAW1R,GAAG,qBAGlE0R,aAAsBxR,EAG7BlC,KAAKgM,mBAAmB,SAAS,IAAI7H,EAAc,QAAQuP,EAAW1R,GAAG,uBAMzEhC,KAAKC,SAAS,CAACgJ,SAAS,MAtJ3B,wCAiKsBI,EAAOC,GAGrBtJ,KAAKC,SAAS,CAACgJ,SAAS,MApKhC,+BA4KasB,GAGL,IAAIoJ,EAAWpJ,EAAOoJ,SAASxM,KAAI,SAACkF,GAAD,OAAOnE,EAASmE,MAE/CD,EAAmB7B,EAAO6B,iBAAiBjF,KAAI,SAACyM,GAAD,OAAO5L,EAAoB4L,MAI1EC,EAFiBtJ,EAAO+C,eAAenG,KAAI,SAACyM,GAAD,OAAO/L,EAAmB+L,MAE5CE,OAAO1H,GAEhCrD,EAAS,GAEb4K,EAASI,SAAQ,SAAChI,EAAE1E,GAAH,OAAa0B,EAAO1B,GAASwM,EACrCG,MAAK,SAAClO,GAAD,OAAOA,EAAE9D,KAAO+J,EAAE5I,kBAAoB2C,EAAE9D,KAAO+J,EAAE3I,yBAE/DpD,KAAKC,SAAS,CAACwC,KAAKkR,EAAS3K,UAAU,EAAMC,SAAS,EAAMF,OAAQA,MA5L5E,qCAoMK,IAAD,OAEI,OACI,6BAGQ,kBAAC0C,EAAA,EAAKyC,MAAN,CACAC,YAAY,SACZvK,KAAK,SACLwK,KAAK,SACL1B,SAAU1M,KAAKiU,uBAAuBzH,KAAKxM,QAE3C,kBAACyL,EAAA,EAAK4C,MAAN,CAAYC,QAAM,GACd,kBAAC7C,EAAA,EAAKgD,OAAN,CACAyF,WAAS,EACT/F,YAAY,iBACZvK,KAAK,OACL8K,QAAS1O,KAAKH,MAAMqT,aACpB3E,MAAM,QACN7B,SAAU,SAACX,EAAD,OAAInI,EAAJ,EAAIA,KAAKQ,EAAT,EAASA,MAAT,OACN,EAAK4H,mBAAmBpI,EAAK,IAAIO,EAAc,QAAQC,EAAM,YAEjE,kBAACqH,EAAA,EAAKgD,OAAN,CACAyF,WAAS,EACT/F,YAAY,SACZvK,KAAK,WACL8K,QAAS1O,KAAKH,MAAMuT,cACpB7E,MAAM,iBACNnK,MAAOpE,KAAKH,MAAMsT,sBAClBzG,SAAU,SAACX,EAAD,GACT,IADanI,EACd,EADcA,KAAKQ,EACnB,EADmBA,MAEf,EAAKnE,SAAS,CAACkT,sBAAsB/O,IAAO,kBAC5C,EAAK4H,mBAAmBpI,EACpB,IAAIO,EAAc,QAAQC,EAAM,qBAGvCpE,KAAKH,MAAMsT,uBAA+B,kBAAC,GAAD,CAAU5E,MAAM,OAAOf,KAAMxN,KAAKmU,yBAC3FnU,KAAKH,MAAMsT,uBAA+B,kBAAC,GAAD,CAAiBvO,SAAU5E,KAAKoU,iBAAiB5H,KAAKxM,YAzO1G,qCA8PE,OAFM4K,QAAQC,IAAI7K,KAAKH,MAAM4C,MAG3B,6BACC,2FACA,yBAAKT,GAAG,aACe,kBAAC,GAAD,CACA+C,WAAY/E,KAAKH,MAAMkF,WACvBoL,cAAenQ,KAAKqU,kBAAkB7H,KAAKxM,MAC3CoF,aAAcpF,KAAKuM,iBAAiBC,KAAKxM,MACzC8E,KAAM9E,KAAKH,MAAMiF,KACjBO,OAAQrF,KAAKH,MAAMwF,OACnBT,SAAU5E,KAAKsU,YAAY9H,KAAKxM,MAChCwF,MAAO,CAACmL,MAAM3Q,KAAKH,MAAM4C,KAAKmO,QAAQ5Q,KAAKH,MAAMkJ,cAzQ7E,kCAuRakC,GAGXjL,KAAKJ,MAAMM,QAAQC,KAAK,gBAAkB8K,EAAK/H,OAAS,wBA1R1D,GAA8B4F,GAgSfjH,eAAWoR,IChSbsB,GAAb,YAOC,WAAY3U,GACX,IAAD,sBAEC,4CAAMA,IAEN,IAAIoC,EAAKgD,OAAO+C,SAASnI,EAAMoC,IAE/B,QAAqB3B,IAAlB,EAAKT,MAAMoC,IAAsC,OAAlB,EAAKpC,MAAMoC,KAAwC,IAAzBgD,OAAOC,UAAUjD,GAG5E,MAAM,IAAI6D,MAAM,uBAIjB,QAAkBxF,IAAfT,EAAM6C,MAAuB7C,EAAM6C,gBAAgBQ,KAAU,EAG/D,MAAM,IAAI4C,MAAM,sCAhBlB,OAoBC,EAAKhG,MAAQ,CAAC4C,KAAM7C,EAAM6C,KACzBsG,OAAQnJ,EAAMmJ,OACdyL,QAAQxS,EACRyS,YAAyBpU,IAAlB,EAAKT,MAAMoC,IAAsC,OAAlB,EAAKpC,MAAMoC,UAA+B3B,IAAfT,EAAM6C,KACvEiS,WAAU,EACVzL,SAAQ,EACR0L,aAAwBtU,IAAfT,EAAM6C,KACfmS,kBAAkB,EAClB1B,aAAc,EAAKpF,iBAAiBtJ,EAAWC,GAC/CoQ,WAAY,EAAK/G,iBAAiBvJ,GAClCuQ,UAAU,EAEVC,iBAAiB,EACjBC,QAAS,CAAC1R,SAAS,KAIjB,EAAKzD,MAAM4U,QAGb,EAAK5U,MAAM4C,KAAO,IAAIQ,EAAK,KAAK,KAAK,MAAK,EAAM,GAAG,GAAG,GAAG,KAxC3D,EARD,8EA4DkBuC,EAAM+H,GAGtB,OAAO/H,EAAM2B,KAAI,SAACC,EAAKC,GAItB,IAAImG,OAAiBnN,IAAVkN,EAAsBA,EAAMlG,GAASD,EAAK7D,QAAQ,uBAAwB,SAASkK,OAAO,GAAGC,cAActG,EAAKuG,MAAM,GAAGpK,QAAQ,uBAAwB,SAEpK,MAAO,CAAC+D,IAAIF,EAAKoG,KAAKA,EAAKpJ,MAAMgD,QArEpC,iCAgFYhD,EAAM6Q,GAChB,IAAD,EAIiCjV,KAAKH,MAAhCmV,EAJN,EAIMA,QAAQD,EAJd,EAIcA,gBAEb,YAAsB1U,IAAnB2U,EAAQ5Q,KAA2C,IAAnB4Q,EAAQ5Q,KAAuC,IAApB2Q,OAG7D,EAMO,CAACG,QAAQD,KAhGnB,yCA0GoB7Q,EAAM6Q,GACxB,IAAD,EAEiCjV,KAAKH,MAAhCmV,EAFN,EAEMA,QAAQD,EAFd,EAEcA,gBAEb,YAA4B1U,IAAxB2U,EAAO,UAA8BA,EAAO,SAAa5Q,IAAW4Q,EAAO,SAAa5Q,KAA+B,IAApB2Q,OAGtG,EAMO,CAACG,QAAQD,KAxHnB,2CAoIE,IAEIxB,EAAU3D,GAFD9P,KAAKH,MAAMkJ,QAIxB,MAAmB,kBAAZ0K,EAA8B,mBAAqBA,IAxI5D,iDAiJ4BxI,GAG1B,OAAOA,EAAKxH,MAGX,IAAK,UAEJ,mBADOwH,EAAK3H,SAASe,MAGtB,IAAK,mBAEJ,YADA4G,EAAK3H,SAASe,WAAQhE,MA5J1B,kCA2Ka4K,GACX,IAAD,OAEKkK,EAAa,GAEbH,GAAU,EAuCd,OArCAvP,OAAOC,KAAKuF,GAAM8I,SAAQ,SAAC3M,GAG1B,IAAIgO,EAAe,EAAKA,aAAanK,EAAK7D,GAE1C+N,EAAW/N,GAAQgO,EAEnBJ,IAAUA,GAAUI,KAQrBD,EAAW7R,SAAW,QAEDjD,IAAlB4K,EAAK3H,UAA4C,OAAlB2H,EAAK3H,WAGtC2H,EAAK3H,SAAW,IAIjBmC,OAAOC,KAAKuF,EAAK3H,UAAUyQ,SAAQ,SAAC3M,GAGnC,IAAIiO,EAAiB,EAAKA,eAAepK,EAAK7D,GAE9C+N,EAAW7R,SAAS8D,IAAQ,EAE5B4N,IAAUA,GAAUK,KAIrBrV,KAAKC,SAAS,CAAC+U,QAAQG,IAEhBH,IAvNT,mCAiOc/J,EAAK5G,GAGjB,IAAID,EAAQ6G,EAAK5G,GAEbiR,EAAe,SAACC,GAGnB,OAAOA,EAAE1O,OAAS,GAInB,OAAOxC,GAGN,IAAK,UACJ,OAAOiR,EAAalR,GAErB,IAAK,OACJ,OAAOI,EAAWgR,SAASpR,GAE5B,IAAK,WACJ,OAAkB,IAAVA,GAA2C,MAAzB6G,EAAK9H,kBAAuD,MAA3B8H,EAAK7H,qBACrD,IAAVgB,IAAoBY,OAAOC,UAAUgG,EAAK9H,mBAAqB6B,OAAOC,UAAUgG,EAAK7H,qBAEvF,IAAK,cACJ,OAAOkS,EAAalR,GAErB,IAAK,SACJ,OAAOY,OAAOC,UAAUb,SAAoB/D,IAAV+D,GAAiC,OAAVA,EAE1D,IAAK,WACJ,MAAyB,kBAAXA,EAEf,IAAK,mBACJ,OAAQY,OAAOC,UAAUb,IAAsC,OAA5B6G,EAAK7H,qBAAiD,IAAlB6H,EAAK5H,UACjE,OAAVe,IAAmB6G,EAAK5H,UAAY2B,OAAOC,UAAUgG,EAAK7H,qBAE5D,IAAK,qBACH,OAAQ4B,OAAOC,UAAUb,IAAoC,OAA1B6G,EAAK9H,mBAA+C,IAAlB8H,EAAK5H,UAChE,OAAVe,IAAmB6G,EAAK5H,UAAY2B,OAAOC,UAAUgG,EAAK9H,mBAE5D,IAAK,QACH,OAAO,EAET,QACE,OAAO,KA/QZ,qCA0RgB8H,EAAK5G,GAGnB,IAAID,EAAQ6G,EAAK3H,SAASe,GAE1B,OAAOA,GAGN,IAAK,QACJ,OAAOE,EAAuBiR,SAASpR,GAExC,IAAK,SACJ,OAAOA,EAAMuB,OAAM,SAAC8P,GAAD,OAAOlR,EAAuBiR,SAASC,MAE3D,QACC,OAAO,KAzSX,mCAuTc1J,EAvTd,GAwTE,IADiBnI,EAClB,EADkBA,KAAMQ,EACxB,EADwBA,MAGnB3B,EAAOzC,KAAKH,MAAM4C,KAEtBA,EAAKmB,GAAQQ,EAEbpE,KAAK0V,2BAA2BjT,GAEhCzC,KAAKH,MAAMmV,QAAQpR,GAAQ5D,KAAKoV,aAAa3S,EAAKmB,GAElD5D,KAAKC,SAAS,CAAEwC,KAAMA,EAAMuS,QAAQhV,KAAKH,MAAMmV,YAlUjD,0CA2UqBjJ,EA3UrB,GA4UE,IADsBnI,EACvB,EADuBA,KAAMQ,EAC7B,EAD6BA,MAGxB3B,EAAOzC,KAAKH,MAAM4C,KAEtBA,EAAKa,SAASM,GAAQQ,EAEtBpE,KAAKH,MAAMmV,QAAQ1R,SAASM,GAAQ5D,KAAKqV,eAAe5S,EAAKmB,GAE7D5D,KAAKC,SAAS,CAAEwC,KAAMA,EAAMuS,QAAQhV,KAAKH,MAAMmV,YApVjD,sCA8VE,IAAIvS,EAAOzC,KAAKH,MAAM4C,KAEtBA,EAAKY,UAAaZ,EAAKY,SAEpBZ,EAAKY,WAGPZ,EAAKW,mBAAqB,KAE1BX,EAAKU,iBAAmB,MAIzBnD,KAAKH,MAAMmV,QAAQ3R,SAAWrD,KAAKoV,aAAa3S,EAAK,YAErDzC,KAAKC,SAAS,CAACwC,KAAKA,EAAKuS,QAAQhV,KAAKH,MAAMmV,QAAQjM,YAAO1I,MA7W7D,uCAqXkBqT,GAGhB,IAAIzI,EAAOjL,KAAKH,MAAM4C,KAGtBwI,EAAK9H,iBAAmB,KAExB8H,EAAK7H,mBAAqB,KAEvBsQ,aAAsBhR,EAGxBuI,EAAK9H,iBAAmBuQ,EAAW1R,GAG5B0R,aAAsBxR,EAG7B+I,EAAK7H,mBAAqBsQ,EAAW1R,GAMrChC,KAAKC,SAAS,CAACgJ,SAAS,IAIzBjJ,KAAKH,MAAMmV,QAAQ3R,SAAWrD,KAAKoV,aAAanK,EAAK,YAGrDjL,KAAKC,SAAS,CAACwC,KAAKwI,EAAK+J,QAAQhV,KAAKH,MAAMmV,QAAQjM,OAAQ2K,MArZ9D,iCA+ZK,IAAD,OAEI3J,MAAM,YAAc/J,KAAKH,MAAM2U,SACnCtK,MAAK,SAAAC,GAIJ,GAAGA,EAAIC,GAGN,OAAOD,EAAIE,OAGP,MAAiB,KAAdF,EAAIG,OAGL,IAAIzE,MAAM,KAMV,IAAIA,MAAM,QAITqE,MAAK,SAAAK,GAEb,IAAIU,EAAO/C,EAASqC,EAAOU,MAEvBmB,OAA+C/L,IAA5BkK,EAAO6B,kBAA8D,OAA5B7B,EAAO6B,iBACpEpE,EAAoBuC,EAAO6B,uBAAoB/L,EAE9CiN,OAA2CjN,IAA1BkK,EAAO+C,gBAA0D,OAA1B/C,EAAO+C,eAC/DzF,EAAmB0C,EAAO+C,qBAAkBjN,EAE5C0I,OAA8B1I,IAArB+L,EAAiCkB,EAAiBlB,EAE/D,EAAKnM,SAAS,CAACwC,KAAKwI,EAAK0J,SAAQ,EAAK1L,SAAQ,EAAMF,OAAQA,OAEpD2B,OAAM,SAAAC,GAGf,OAAOA,EAAIsK,SAIV,IAAK,MAOJ,YANK,EAAKpV,MAAM6U,WAGf,EAAKzU,SAAS,CAACyU,WAAW,KAK5B,QAOC,YANK,EAAK7U,MAAMoJ,SAGf,EAAKhJ,SAAS,CAACgJ,SAAS,WA3d/B,iCAueE,IAAD,OAEC2B,QAAQC,IAAI,UAEZ,IAAIb,EAAShK,KAAKH,MAAM4U,MAAQ,OAAS,MAEtCzU,KAAK2V,YAAY3V,KAAKH,MAAM4C,OAE9BmI,QAAQC,IAAI,YACZ7K,KAAKC,SAAS,CAAC6U,UAAU,IAEzB/K,MAAM,QACN,CAACC,OAAQA,EACTN,KAAMG,KAAKC,UAAU9J,KAAKH,MAAM4C,MAChCwH,QAAS,CACR,eAAgB,sBACbC,MAAK,SAACC,GAGTS,QAAQC,IAAI,YAETV,EAAIC,GAGH,EAAKvK,MAAM4U,MAGb,EAAKxU,SAAS,CAACwC,KAAK,IAAIQ,EAAK,KAAK,KAAK,MAAK,EAAM,GAAG,GAAG,GAAG,IAAI2R,kBAAiB,EAAKG,iBAAgB,EAAMD,UAAS,IAOpH,EAAKlV,MAAMM,QAAQuB,SASpB,EAAKxB,SAAS,CAACgJ,SAAS,EAAK0L,SAAS,EAAMG,UAAU,QASxD9U,KAAKC,SAAS,CAAC8U,iBAAiB,MA3hBnC,mCAsiBE,IAAD,OAEChL,MAAM,YAAc/J,KAAKH,MAAM4C,KAAKS,OACnC,CAAC8G,OAAQ,SACTC,QAAS,CACR,eAAgB,sBACbC,MAAK,SAACC,GAGNA,EAAIC,GAGN,EAAKxK,MAAMM,QAAQuB,SAMnB,EAAKxB,SAAS,CAACgJ,SAAS,EAAK0L,SAAS,SAxjB3C,0CAokB4B,IAAvB3U,KAAKH,MAAM8U,UAA0C,IAArB3U,KAAKH,MAAM4U,OAG7CzU,KAAKyK,aAvkBR,kDAolBE,GAA2B,oBAAxBzK,KAAKH,MAAM4C,KAAKgB,KAGlB,OAAO,kBAACgI,EAAA,EAAK4C,MAAN,CAAYC,QAAM,GACtB,kBAAC7C,EAAA,EAAKgD,OAAN,CACApF,MAAOrJ,KAAK4V,mBAAmB,QAAQ,yBACvCzH,YAAY,eACZvK,KAAK,QACL8K,QAAS1O,KAAKH,MAAMgV,WACpBzQ,MAAOpE,KAAKH,MAAM4C,KAAKa,SAASe,MAChCkK,MAAM,SACN7B,SAAU1M,KAAK6V,oBAAoBrJ,KAAKxM,WA/lB9C,qDA8mBE,GAA2B,qBAAxBA,KAAKH,MAAM4C,KAAKgB,YAAqDpD,GAArBL,KAAKH,MAAMkJ,QAAuB/I,KAAKH,MAAMkJ,kBAAkBrG,GAUjH,YAPsCrC,GAAnCL,KAAKH,MAAM4C,KAAKa,SAASwS,SAG3B9V,KAAKH,MAAM4C,KAAKa,SAASwS,OAAS,IAI5B,6BACL,kBAACrK,EAAA,EAAK4C,MAAN,CAAYC,QAAM,GACjB,kBAAC7C,EAAA,EAAKgD,OAAN,CACAsH,UAAQ,EAACC,WAAS,EAClB3M,MAAOrJ,KAAK4V,mBAAmB,QAAQ,yBACvCzH,YAAY,eACZvK,KAAK,SACL8K,QAAS1O,KAAKH,MAAMgV,WACpBzQ,MAAOpE,KAAKH,MAAM4C,KAAKa,SAASwS,OAChCvH,MAAM,UACN7B,SAAU1M,KAAK6V,oBAAoBrJ,KAAKxM,SAItCA,KAAKiW,yCAtoBb,4DAspBE,GAAG3Q,MAAMC,QAAQvF,KAAKH,MAAM4C,KAAKa,SAASwS,SAAW9V,KAAKH,MAAM4C,KAAKa,SAASwS,OAAOjP,OAAS,GAAK7G,KAAKH,MAAM4C,KAAKY,SAElH,OAAO,kBAACyH,EAAA,EAAD,CAASqH,SAAO,EAAC+D,SAAO,GAAxB,uHAxpBV,sCAwqBE,IAAI7S,EAAWrD,KAAKH,MAAM4C,KAAKY,SAE/B,OAAO,kBAAC6B,EAAA,EAAD,KACN,kBAACuG,EAAA,EAAD,CAAMkE,KAAM,QAASwG,QAASnW,KAAKH,MAAMiV,WAAe9U,KAAKH,MAAM8U,UAAa3U,KAAKH,MAAM4U,OAC1F,kBAAChJ,EAAA,EAAK4C,MAAN,CAAYC,QAAM,GACjB,kBAAC7C,EAAA,EAAKgD,OAAN,CACApF,MAAOrJ,KAAKoW,WAAW,OAAO,wBAC9BjI,YAAY,cACZvK,KAAK,OACL8K,QAAS1O,KAAKH,MAAMqT,aACpB9O,MAAOpE,KAAKH,MAAM4C,KAAKgB,KACvB8K,MAAM,QACN7B,SAAU1M,KAAKqW,aAAa7J,KAAKxM,QAEjC,kBAACyL,EAAA,EAAK6K,SAAN,CACAjN,MAAOrJ,KAAKoW,WAAW,WAAW,8CAClCxS,KAAK,WACL2K,MAAQ,yBACRgI,QAASvW,KAAKH,MAAM4C,KAAKY,SACzBqJ,SAAU1M,KAAKwW,cAAchK,KAAKxM,QAEjCqD,OAAWhD,EAAY,kBAAC,GAAD,CAAUkO,MAAM,OAAOf,KAAMxN,KAAKmU,uBACzD9Q,OAAWhD,EAAY,kBAAC,GAAD,CAAiBuE,SAAU5E,KAAKoU,iBAAiB5H,KAAKxM,SAE/E,kBAACyL,EAAA,EAAK4C,MAAN,CAAYC,QAAM,GACjB,kBAAC7C,EAAA,EAAKyC,MAAN,CACA7E,MAAOrJ,KAAKoW,WAAW,UAAU,gCACjCjI,YAAY,OACZvK,KAAK,UACL2K,MAAM,WACNnK,MAAOpE,KAAKH,MAAM4C,KAAKc,QACvBmJ,SAAU1M,KAAKqW,aAAa7J,KAAKxM,QAEjC,kBAACyL,EAAA,EAAKyC,MAAN,CACA7E,MAAOrJ,KAAKoW,WAAW,cAAc,sCACrCjI,YAAY,OACZvK,KAAK,cACL2K,MAAM,OACNnK,MAAOpE,KAAKH,MAAM4C,KAAKe,YACvBkJ,SAAU1M,KAAKqW,aAAa7J,KAAKxM,SAGjCA,KAAKyW,4BACLzW,KAAK0W,+BACN,kBAACjL,EAAA,EAAK4C,MAAN,CAAYa,OAAO,SAClB,kBAAC/N,EAAA,EAAD,CAAQmR,SAAO,EAAClR,QAASpB,KAAK2W,SAASnK,KAAKxM,OAA5C,UACCA,KAAKH,MAAM4U,MAAQ,GAAK,kBAACtT,EAAA,EAAD,CAAQ4J,UAAQ,EAAC3J,QAASpB,KAAK4W,WAAWpK,KAAKxM,OAA/C,iBAttB9B,+CAouBQ,OACA,kBAAC8K,EAAA,EAAD,CAASC,UAAQ,GACb,kBAACD,EAAA,EAAQvJ,OAAT,6BACA,kEACA,kBAACJ,EAAA,EAAD,CAAQ6J,MAAM,MAAM5J,QAASpB,KAAKyK,SAAS+B,KAAKxM,OAAhD,iBAxuBZ,4CAovBQ,OACA,kBAAC8K,EAAA,EAAD,CAASC,UAAQ,GACb,kBAACD,EAAA,EAAQvJ,OAAT,6BACA,gGAvvBZ,sCAmwBE,OACC,kBAACuJ,EAAA,EAAD,CAASqH,SAAO,GACf,kBAACrH,EAAA,EAAQvJ,OAAT,mDACA,oGAtwBJ,6CAkxBE,GAAGvB,KAAKH,MAAM+U,iBAGb,OAAO,kBAAC9J,EAAA,EAAD,CAAS+L,UAAQ,GACrB,kBAAC/L,EAAA,EAAQvJ,OAAT,qDAtxBN,sCAuyBE,OAAIvB,KAAKH,MAAM4U,OAASzU,KAAKH,MAAM8U,UAAY3U,KAAKH,MAAMoJ,QAGlDjJ,KAAK8W,sBAGV9W,KAAKH,MAAM6U,UAGN1U,KAAK+W,gBAGC/W,KAAKH,MAAMoJ,QAGRjJ,KAAKgX,yBAGRhX,KAAKH,MAAM8U,SAAW3U,KAAKH,MAAM4U,MAG9BzU,KAAKiX,qBAHX,IAzzBb,+BA20BE,OAFAjX,KAAKsL,mBAGH,6BACEtL,KAAK4L,gBACL5L,KAAKkX,4BA90BX,GAA8BtV,aAq1BfC,eAAW0S,ICvzBX1S,oBAjCR,SAAiBjC,GAKvB,IAAIoC,OAAkB3B,IAAbT,EAAMoC,GACd,IAAIzB,gBAAgBX,EAAMY,SAASC,QAAQC,IAAI,MAAQd,EAAMoC,GAI1DwJ,SAFkBnL,IAAP2B,GAA2B,OAAPA,GAEV,kBAAoB,YAI7C,OACC,yBAAKD,UAAU,QACd,kBAAC,EAAD,CACCP,OAAQgK,EACRlK,eAAgB1B,EAAM0B,eACtBD,mBAAoBzB,EAAMyB,qBAE3B,yBAAKW,GAAG,YAAYnB,MAAO,CAAC8K,UAAU,UACrC,kBAAC,GAAD,CAAU3J,GAAIA,EAAIS,KAAM7C,EAAM6C,KAAMsG,OAAQnJ,EAAMmJ,cCwKvCoO,G,YAhMd,WAAYvX,GACR,IAAD,8BAEI,4CAAMA,KAEDC,MAAQ,CAAC2F,MAAO,GAAGsP,UAAU,EAAO9L,UAAU,EAAMoO,oBAAoB,EAAOnO,SAAS,EAAOoO,QAAS,IAAItT,GAJrH,E,8EAScyB,EAAM+H,GAGtB,OAAO/H,EAAM2B,KAAI,SAACC,EAAKC,GAItB,IAAImG,OAAiBnN,IAAVkN,EAAsBA,EAAMlG,GAASD,EAAK7D,QAAQ,uBAAwB,SAASkK,OAAO,GAAGC,cAActG,EAAKuG,MAAM,GAAGpK,QAAQ,uBAAwB,SAEpK,MAAO,CAAC+D,IAAIF,EAAKoG,KAAKA,EAAKpJ,MAAMgD,Q,iCAU/B,IAAD,OAEI2C,MAAM,iBACDG,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAK,GAGE,IAAI9H,EAAO8H,EAAOpD,KAAI,SAAAyG,GAAC,OAAItF,EAAgBsF,MAEtDnE,EAAShH,EAAK0E,KAAI,SAAA0G,GAAC,OAAIA,EAAE7L,MAEzBuL,EAAQ9K,EAAK0E,KAAI,SAAA0G,GAAC,OAAIA,EAAEjK,QAE5B,EAAK3D,SAAS,CAACuF,MAAM,EAAKsI,iBAAiBrE,EAAO8D,GAAOvE,UAAU,EAAMC,SAAS,OAE1EyB,OAAM,SAAAC,GAAG,OAAI,EAAK1K,SAAS,CAACgJ,SAAS,S,0CAOrB,IAAxBjJ,KAAKH,MAAMmJ,WAA6C,IAAvBhJ,KAAKH,MAAMoJ,SAG9CjJ,KAAKyK,a,mCAOMsB,E,GACZ,IADiBnI,EAClB,EADkBA,KAAMQ,EACxB,EADwBA,MAGnBiT,EAAUrX,KAAKH,MAAMwX,QAEzB,GAAY,UAATzT,GAA6B,QAATA,EACvB,CAEC,IAAI0T,EAAYlT,EAAM6H,MAAM,KAE5B7H,EAAQ,IAAIsD,KAAK4P,EAAU,GAAGtS,OAAO+C,SAASuP,EAAU,IAAI,EAAEA,EAAU,GAAG,EAAE,EAAE,EAAE,GAIlFD,EAAQzT,GAAQQ,EAGhBpE,KAAKC,SAAS,CAAEoX,QAASA,M,iCAKzB,IAAD,OAEErX,KAAKC,SAAS,CAAC6U,UAAU,IAEzB/K,MAAM,cACN,CAACC,OAAQ,OACTN,KAAMG,KAAKC,UAAU9J,KAAKH,MAAMwX,SAChCpN,QAAS,CACR,eAAgB,sBACbC,MAAK,SAACC,GAGNA,EAAIC,GAGN,EAAKnK,SAAS,CAAC6U,UAAU,EAAO7L,SAAS,EAAMmO,oBAAoB,IAAM,kBAAMxM,QAAQC,IAAI,EAAKhL,UAMhG,EAAKI,SAAS,CAACgJ,SAAS,S,2CAY3B,GAAGjJ,KAAKH,MAAMoJ,QAGb,OACC,kBAAC6B,EAAA,EAAD,CAASC,UAAQ,GAChB,kBAACD,EAAA,EAAQvJ,OAAT,6BACA,gG,6CAYH,GAAGvB,KAAKH,MAAMuX,mBAGb,OAAO,kBAACtM,EAAA,EAAD,CAAS+L,UAAQ,GACvB,kBAAC/L,EAAA,EAAQvJ,OAAT,uD,+BAUF,OADAvB,KAAKsL,mBAEJ,yBAAKvJ,UAAU,QACd,kBAAC,EAAD,CACCP,OAAQ,yBACRF,eAAgBtB,KAAKJ,MAAM0B,eAC3BD,mBAAoBrB,KAAKJ,MAAMyB,qBAEhC,yBAAKW,GAAG,YAAYnB,MAAO,CAACoB,OAAO,UAClC,6BACA,kBAACiD,EAAA,EAAD,KACC,kBAACuG,EAAA,EAAD,CAAM0K,SAAWnW,KAAKH,MAAMmJ,UAAYhJ,KAAKH,MAAMiV,UAClD,kBAACrJ,EAAA,EAAK4C,MAAN,CAAYC,QAAM,GACjB,kBAAC7C,EAAA,EAAKyC,MAAN,CACAC,YAAY,aACZvK,KAAK,QACL2K,MAAM,SACN9K,KAAK,OACLiJ,SAAU1M,KAAKqW,aAAa7J,KAAKxM,QAEjC,kBAACyL,EAAA,EAAKyC,MAAN,CACAC,YAAY,aACZvK,KAAK,MACL2K,MAAM,OACN9K,KAAK,OACLiJ,SAAU1M,KAAKqW,aAAa7J,KAAKxM,QAEjC,kBAACyL,EAAA,EAAKgD,OAAN,CACAF,MAAM,cACN3K,KAAK,SACL8K,QAAS1O,KAAKH,MAAM2F,MACpBkH,SAAU1M,KAAKqW,aAAa7J,KAAKxM,SAGlC,kBAACmB,EAAA,EAAD,CAAQmR,SAAO,EAAClR,QAASpB,KAAK2W,SAASnK,KAAKxM,OAA5C,WAEAA,KAAKuX,uBACLvX,KAAKwX,4B,GA1LuB5V,a,SCmPpB6V,G,YA3OX,WAAY7X,GAAQ,IAAD,EAIf,GAJe,oBAIqB,mBAFpC,4CAAMA,KAEWA,MAAMgF,SAEnB,MAAMiB,MAAM,iEAND,OAUf,EAAKhG,MAAQ,CACTmJ,UAAU,EACVvG,KAAM,CAAC,OACPwG,SAAS,EACTmI,gBAAiB,EACjBE,aAAa,EACbC,kBAAclR,EACdmR,iBAAiB,GAjBN,E,+EA6BDnI,EAAOC,GAErBtJ,KAAKC,SAAS,CAAEgJ,SAAS,M,iCAQjB,IAAD,OAEPc,MAAM,cACDG,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAK,GAGF,IAAIwE,EAAUxE,EAAOwE,QAAQ5H,KAAI,SAACkF,GAAD,OAAOjE,EAAUiE,MAElD,EAAKpM,SAAS,CAAEwC,KAAMsM,EAAS/F,UAAU,EAAMC,SAAS,OAG3DyB,OAAM,SAAAC,GACH,EAAK1K,SAAS,CAAEgJ,SAAS,S,iDAYC,GAA9BjJ,KAAKH,MAAMuR,gBAEXpR,KAAKJ,MAAMgF,SAAS5E,KAAKH,MAAM0R,cAE/BvR,KAAKyR,eAKLzR,KAAKC,SAAS,CAAEuR,iBAAiB,M,sCAUzB/O,GAETA,EAAKT,KAAOhC,KAAKH,MAAMuR,gBAGtBpR,KAAKJ,MAAMgF,SAASnC,GAEpBzC,KAAKC,SAAS,CAACqR,aAAa,EAAME,iBAAiB,KAMnDxR,KAAKC,SAAS,CAAEmR,eAAgB3O,EAAKT,GAAIuP,aAAc9O,M,qCAY/C,IAAD,OACX,OAAQ,6BACJ,kBAACkP,GAAA,EAAD,CAAKC,KAAM,CAAEC,UAAU,GAAQC,MAC3B,CACI,CACIC,SAAU,QACVC,OAAQ,kBACJ,kBAACL,GAAA,EAAIM,KAAL,KACI,kBAAC,GAAD,CAAgBzM,MAAO,EAAK3F,MAAM4C,KAC9BmC,SAAU,EAAKsN,gBAAgB1F,KAAK,WAK5D,kBAAC1B,EAAA,EAAD,CAASqH,SAAO,EAACC,UAAQ,EAACC,QAASrS,KAAKH,MAAM2R,iBAA9C,mGAGA,6BACA,kBAACrQ,EAAA,EAAD,CAAQmR,SAAO,EAAClR,QAASpB,KAAKuS,wBAAwB/F,KAAKxM,OAA3D,a,oCAUJ,OACI,kBAAC8K,EAAA,EAAD,CAASC,UAAQ,GACb,kBAACD,EAAA,EAAQvJ,OAAT,6BACA,kEACA,kBAACJ,EAAA,EAAD,CAAQ6J,MAAM,MAAM5J,QAASpB,KAAKyK,SAAS+B,KAAKxM,OAAhD,iB,sCAWR,OAAQ,kBAACkL,EAAA,EAAD,uB,sCAUR,OAAIlL,KAAKH,MAAMoJ,QAEJjJ,KAAKoL,cAGPpL,KAAKH,MAAMmJ,SAEThJ,KAAKmL,eAKLnL,KAAKqL,kB,mCASLrL,KAAKC,SAAS,CAAEqR,aAAa,M,oCAMxCtR,KAAKC,SAAS,CACVqR,aAAa,EACbF,gBAAiB,EACjBI,iBAAiB,EACjBD,kBAAclR,M,+BAQZ,IAAD,OAaL,OACI,kBAACmS,GAAA,EAAD,CACIC,WAAS,EACTC,OAde,YAGS,IAAxB,EAAK7S,MAAMmJ,UAEX,EAAKyB,YASoB+B,KAAKxM,MAC9B2S,QAAS,kBAACxR,EAAA,EAAD,CAAQmR,SAAO,EAAC7O,KAAM,SAASrC,QAASpB,KAAK4S,WAAWpG,KAAKxM,YAA4BK,IAApBL,KAAKJ,MAAM4N,KAAqBxN,KAAKJ,MAAM4N,KAAO,UAChIqF,QAAS7S,KAAKyR,YAAYjF,KAAKxM,MAC/B8S,KAAM9S,KAAKH,MAAMyR,aACjB,kBAACkB,GAAA,EAAMjR,OAAP,qBACA,kBAACiR,GAAA,EAAMO,QAAP,KACI,kBAACP,GAAA,EAAMQ,YAAP,KACI,kBAACzR,EAAA,EAAD,8BACA,8BAEHvB,KAAK4L,sB,GApOKhK,aCJzB8V,G,YACF,WAAY9X,GAAQ,IAAD,8BACf,4CAAMA,KA2BVkM,cAAgB,SAACC,GACbA,EAAE4L,iBACF,EAAK1X,SAAL,eAAiB8L,EAAEhD,OAAOnF,KAAOmI,EAAEhD,OAAO3E,SA9B3B,EA8FnBwT,OAAS,SAAC7L,GACNA,EAAE4L,iBACF/M,QAAQC,IAAI,EAAKhL,MAAM0C,WACvB,IAAI0J,EAAQ,EAAKpM,MAAM0C,UAAU0J,MAAM,KACnC4L,EAAM,IAAInQ,KAAKuE,EAAM,GAAIA,EAAM,GAAG,EAAGA,EAAM,GAAI,EAAG,EAAG,GACzDA,EAAQ,EAAKpM,MAAM2C,UAAUyJ,MAAM,KACnC,IAAI6L,EAAM,IAAIpQ,KAAKuE,EAAM,GAAIA,EAAM,GAAG,EAAGA,EAAM,GAAI,EAAG,EAAG,GACrD8L,EAAS,IAAI7V,EAAiB,EAAKrC,MAAMmC,GAAI,EAAKnC,MAAMsC,QAAS,EAAKtC,MAAMuC,MAAO,EAAKvC,MAAMwC,OAAQ,EAAKxC,MAAMyC,IAAKuV,EAAKC,EAAK,EAAKjY,MAAM4C,MAC/I,GAAK,EAAKuV,MAAMD,GAAhB,CAGAnN,QAAQC,IAAIkN,GACZ,IAAIV,EAAU,IAAIY,eACdjO,EAAS,MACTkO,EAAM,cAAU,EAAKrY,MAAMmC,IAC1B,EAAKnC,MAAMsY,SACZnO,EAAS,OACTkO,EAAS,IAEbb,EAAQvE,KAAK9I,EAAQ,oBAAsBkO,GAAQ,GACnDb,EAAQe,iBAAiB,eAAgB,oBACzCf,EAAQgB,KAAKxO,KAAKC,UAAUiO,IAC5BV,EAAQiB,OAAS,WACS,KAAlBjB,EAAQ/M,OACRtK,KAAKC,SAAS,CAAEgV,QAAQ,SAAD,OAAWoC,EAAQ/M,OAAnB,aAA8B+M,EAAQkB,YAAcC,YAAY,IAIpFxY,KAAKH,MAAMsY,OAGVnY,KAAKJ,MAAMM,QAAQuB,SAOnBzB,KAAKC,SAAS,CAAC+B,QAAG3B,EAAU6L,MAAM,GAAG/J,QAAQ,EAAEC,MAAM,wBAAwBC,OAAO,GAAGC,IAAI,GAAGC,UAAU,GAAGC,UAAU,GAAGC,KAAK,MAMvI+J,KAtBe,iBAuBjB6K,EAAQoB,QAAU,WACdzY,KAAKC,SAAS,CAAEgV,QAAS,cAAeuD,YAAY,KACtDhM,KAFgB,mBA3IH,EAoJnBkM,OAAS,SAAC3M,GAEN,GADAA,EAAE4L,iBACE,EAAK9X,MAAMsY,OAAQ,CACnB,IAAId,EAAU,IAAIY,eAClBrN,QAAQC,IAAI,EAAKhL,MAAMmC,IACvBqV,EAAQvE,KAAK,SAAb,+BAA+C,EAAKjT,MAAMmC,KAAM,GAChEqV,EAAQe,iBAAiB,eAAgB,oBACzCf,EAAQgB,OACRhB,EAAQiB,OAAS,WACS,KAAlBjB,EAAQ/M,OACRtK,KAAKC,SAAS,CAAEgV,QAAQ,SAAD,OAAWoC,EAAQ/M,OAAnB,aAA8B+M,EAAQkB,YAAcC,YAAY,IAGvFxY,KAAKJ,MAAMM,QAAQuB,UAEzB+K,KAPe,iBAQjB6K,EAAQoB,QAAU,WACdzY,KAAKC,SAAS,CAAEgV,QAAS,gBAAiBuD,YAAY,KACxDhM,KAFgB,mBAjKtB,EAAK3M,MAAQ,CACTmC,GAAI,IAAIzB,gBAAgBX,EAAMY,SAASC,QAAQC,IAAI,MACnDyB,QAAS,GACTC,MAAO,wBACPC,OAAQ,GACRE,UAAW,GACXC,UAAW,GACXF,IAAK,GACL4J,MAAO,GACPzJ,KAAM,GACN0V,QAAQ,EACRlD,QAAS,GACTuD,YAAY,GAGM,OAAlB,EAAK3Y,MAAMmC,IACX,EAAK2W,OAnBM,E,mEAqCblW,GACF,MAAmB,KAAfA,EAAKL,OACLwW,MAAM,sBACC,GAES,KAAhBnW,EAAKJ,SACLuW,MAAM,uBACC,K,6BAQP,IAAD,OACH7O,MAAM,uBAAyB/J,KAAKH,MAAMmC,IACrCkI,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAK,GAEF,GADAK,QAAQC,IAAIN,GAC8B,OAAtCA,EAAO6B,iBAAiB5J,UAAoB,CAC5C,IAAIyJ,EAAQ1B,EAAO6B,iBAAiB5J,UAAUyJ,MAAM,KAChD6L,EAAG,UAAM7L,EAAM,GAAZ,YAAkBA,EAAM,GAAxB,YAA8BlE,SAASkE,EAAM,KAChDlE,SAASkE,EAAM,IAAM,KACrB6L,EAAMA,EAAInK,MAAM,GAAI,GAAK,IAAM5F,SAASkE,EAAM,KAGtD,GAA0C,OAAtC1B,EAAO6B,iBAAiB7J,UAAoB,CAC5C0J,EAAQ1B,EAAO6B,iBAAiB7J,UAAU0J,MAAM,KAChD,IAAI4L,EAAG,UAAM5L,EAAM,GAAZ,YAAkBA,EAAM,GAAxB,YAA8BlE,SAASkE,EAAM,KAChDlE,SAASkE,EAAM,IAAM,KACrB4L,EAAMA,EAAIlK,MAAM,GAAI,GAAK,IAAM5F,SAASkE,EAAM,KAGtDrB,QAAQC,IAAIiN,EAAM,IAAMD,GACxB,EAAK5X,SAAS,CACVkY,QAAQ,EACRhW,QAASoI,EAAO2B,MAAMlK,GACtBkK,MAAM,GAAD,OAAK3B,EAAO2B,MAAMtJ,KAAlB,eAA6B2H,EAAO2B,MAAMrJ,MAC/CR,OAAQkI,EAAO6B,iBAAiB/J,OAChCD,MAAOmI,EAAO6B,iBAAiBhK,MAC/BE,IAAKiI,EAAO6B,iBAAiB9J,IAC7BG,KAAM8H,EAAO6B,iBAAiB3J,KAC9BD,UAAWsV,EACXvV,UAAWsV,OAGlBnN,OAAM,SAAAC,GACHC,QAAQC,IAAI,gBAAkBF,Q,wCAyFxBkO,GACdjO,QAAQC,IAAIgO,GACZ7Y,KAAKC,SAAS,CACVkC,QAAS0W,EAAY7W,GACrBkK,MAAM,GAAD,OAAK2M,EAAYjW,KAAjB,eAA4BiW,EAAYhW,U,+BAO3C,IAAD,EACuG7C,KAAKH,MAA5FuC,GADhB,EACGJ,GADH,EACOG,QADP,EACgBC,OAAOC,EADvB,EACuBA,OAAQE,EAD/B,EAC+BA,UAAWC,EAD1C,EAC0CA,UAAWF,EADrD,EACqDA,IAAK4J,EAD1D,EAC0DA,MAAOzJ,EADjE,EACiEA,KAAcwS,GAD/E,EACuEkD,OADvE,EAC+ElD,SAASuD,EADxF,EACwFA,WACnG,OACC,yBAAKzW,UAAU,QACd,kBAAC,EAAD,CACCP,OAAQY,EACRd,eAAgBtB,KAAKJ,MAAM0B,eAC3BD,mBAAoBrB,KAAKJ,MAAMyB,qBAEpB,kBAAC6D,EAAA,EAAD,KACA,yBAAKlD,GAAG,YAAYnB,MAAO,CAAEoB,OAAQ,UACjC,0BAAMF,UAAU,WACZ,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,2BACX,wCAGA,2BAAO0B,KAAK,OAAOG,KAAK,QAAQQ,MAAOhC,EAAOsK,SAAU1M,KAAK8L,iBAEjE,yBAAK/J,UAAU,4BACX,yCAGA,2BAAO0B,KAAK,OAAOG,KAAK,SAASQ,MAAO/B,EAAQqK,SAAU1M,KAAK8L,kBAGvE,yBAAK/J,UAAU,iBACX,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,mBACX,4CAGA,2BAAO0B,KAAK,OAAOG,KAAK,YAAYQ,MAAO7B,EAAWmK,SAAU1M,KAAK8L,iBAEzE,yBAAK/J,UAAU,mBACX,4CAGA,2BAAO0B,KAAK,OAAOG,KAAK,YAAYQ,MAAO5B,EAAWkK,SAAU1M,KAAK8L,iBAEzE,yBAAK/J,UAAU,mBACX,sCAGA,2BAAO0B,KAAK,OAAOG,KAAK,MAAMQ,MAAO9B,EAAKoK,SAAU1M,KAAK8L,kBAGjE,yBAAK/J,UAAU,iBACX,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,2BAAf,YAIJ,yBAAKA,UAAU,oBACX,yCAGA,+BACKmK,IAGT,yBAAKnK,UAAU,kBACX,kBAAC,GAAD,CAAkB6C,SAAY5E,KAAK8Y,kBAAkBtM,KAAKxM,UAGlE,yBAAK+B,UAAU,iBACX,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,uBACX,8BAAU6B,KAAK,OAAOQ,MAAO3B,EAAMiK,SAAU1M,KAAK8L,kBAG1D,yBAAK/J,UAAU,iBACX,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,kBACX,4BAAQA,UAAU,0BAA0B0B,KAAK,UAAjD,mBAIJ,yBAAK1B,UAAU,oBACVyW,EAAa,kBAAC1N,EAAA,EAAD,CAASC,UAAQ,GAAjB,IAAoBkK,EAApB,UAA0C5U,GAE5D,yBAAK0B,UAAU,kBACT/B,KAAKH,MAAMsY,OAAc,4BAAQpW,UAAU,sBAAsB0B,KAAK,SAASrC,QAASpB,KAAK0Y,OAAOlM,KAAKxM,OAAhF,UAAL,IAI1B,yBAAK+B,UAAU,kBACX,4BAAQA,UAAU,0BAA0B0B,KAAK,SAASrC,QAASpB,KAAK4X,OAAOpL,KAAKxM,OAApF,kB,GAnRE4B,aAgSnBC,eAAW6V,ICrJXqB,G,YA7Id,WAAYnZ,GACR,IAAD,6BAEF,4CAAMA,KAMDC,MAAQ,CAAC2F,MAAM,EAAKsI,iBAJb,CAAC,OAAO,OAER,CAAC,OAAO,QAGnBrK,KAAK,OACLuF,UAAU,EACVC,SAAS,EACToO,QAAS,IAAItT,EACbiV,YAAY,EACZC,YAAQ5Y,EACR6Y,kBAAc7Y,GAfb,E,8EAoBcmF,EAAM+H,GAGtB,OAAO/H,EAAM2B,KAAI,SAACC,EAAKC,GAItB,IAAImG,OAAiBnN,IAAVkN,EAAsBA,EAAMlG,GAASD,EAAK7D,QAAQ,uBAAwB,SAASkK,OAAO,GAAGC,cAActG,EAAKuG,MAAM,GAAGpK,QAAQ,uBAAwB,SAEpK,MAAO,CAAC+D,IAAIF,EAAKoG,KAAKA,EAAKpJ,MAAMgD,Q,iCAU/B,IAAD,OAEFpH,KAAKC,SAAS,CAAC+I,UAAU,EAAOgQ,YAAY,EAAME,aAAclZ,KAAKH,MAAM4D,OAE3EsG,MAAM,gBAAkB/J,KAAKH,MAAM4D,MACjCyG,MAAK,SAACiP,GAAD,OAAOA,EAAE3L,UACLtD,MAAK,SAAAK,GAIb,IAAI9H,EAAO8H,EAEX,EAAKtK,SAAS,CAACgZ,OAAOxW,EAAKuG,UAAU,EAAMC,SAAS,EAAM+P,YAAY,OAE9DtO,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,mCAKxBoB,E,GACb,EADkBnI,KACjB,IADuBQ,EACxB,EADwBA,MAGvBpE,KAAKC,SAAS,CAAEwD,KAAMW,M,2CAQtB,GAAGpE,KAAKH,MAAMoJ,QAGb,OACC,kBAAC6B,EAAA,EAAD,CAASC,UAAQ,GAChB,kBAACD,EAAA,EAAQvJ,OAAT,6BACA,gG,mCAYH,GAAGvB,KAAKH,MAAMmZ,WAGb,MAA+B,SAA5BhZ,KAAKH,MAAMqZ,aAGN,kBAAChU,EAAA,EAAD,CAAWC,UAAU,QAASnF,KAAKH,MAAMoZ,QAMzC,kBAAC/T,EAAA,EAAD,CAAWC,UAAU,QAArB,IAA8BnF,KAAKH,MAAMoZ,U,+BAUlD,OACC,yBAAKlX,UAAU,QACd,kBAAC,EAAD,CACCP,OAAQ,yBACRF,eAAgBtB,KAAKJ,MAAM0B,eAC3BD,mBAAoBrB,KAAKJ,MAAMyB,qBAEhC,yBAAKW,GAAG,YAAYnB,MAAO,CAAC8K,UAAU,UACrC,6BACA,kBAACzG,EAAA,EAAD,KACC,kBAACuG,EAAA,EAAD,CAAM0K,SAAWnW,KAAKH,MAAMmJ,UAC3B,kBAACyC,EAAA,EAAK4C,MAAN,CAAYC,QAAM,GACjB,kBAAC7C,EAAA,EAAKgD,OAAN,CACAF,MAAM,cACN3K,KAAK,SACL8K,QAAS1O,KAAKH,MAAM2F,MACpBkH,SAAU1M,KAAKqW,aAAa7J,KAAKxM,MACjCoE,MAAOpE,KAAKH,MAAM4D,QAGnB,kBAACtC,EAAA,EAAD,CAAQmR,SAAO,EAAClR,QAASpB,KAAKyK,SAAS+B,KAAKxM,OAA5C,WAEAA,KAAKwX,qBACLxX,KAAKoZ,oB,GAvISxX,aCORyX,GAAb,YAGI,WAAYzZ,GACX,IAAD,sBAEI,4CAAMA,IAGN,IAAIoC,OAAkB3B,IAAbT,EAAMoC,GACf,IAAIzB,gBAAgBX,EAAMY,SAASC,QAAQC,IAAI,MAAQd,EAAMoC,GAE7D,QAAU3B,IAAP2B,GAA2B,OAAPA,EAGnB,MAAM,IAAI6D,MAAM,sBAXxB,OAeI,EAAKhG,MAAQ,CAAC4C,KAAM,GAAIuG,UAAU,EAAOC,SAAS,EAAOjH,GAAGA,EAAGwJ,WAAW,WAf9E,EAJJ,+EA6BsBnC,EAAOC,GAGrBtJ,KAAKC,SAAS,CAACgJ,SAAS,MAhChC,mCAqCE,IAAD,OAECc,MAAM,sBAAwB/J,KAAKH,MAAMmC,GACxC,CAACgI,OAAQ,SACTC,QAAS,CACR,eAAgB,sBACbC,MAAK,SAACC,GAGNA,EAAIC,GAGN,EAAKxK,MAAMM,QAAQuB,SAMnB,EAAKxB,SAAS,CAACgJ,SAAS,EAAK0L,SAAS,SAvD3C,iCAmEK,IAAD,OAEI5K,MAAM,sBAAwB/J,KAAKH,MAAMmC,IACpCkI,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAK,GAGE,IAAI9H,EAAOoF,EAAmB0C,GAE1B5H,EAAOF,EAAKE,KAEZ8D,EAAa9D,EAAK+D,UAAY,KAAO/D,EAAKgE,WAAW,GAAK,IAAMhE,EAAKiE,cAErE4E,EAAa/I,EAAKG,KAAO,OAASH,EAAKI,KAAO,OAAS4D,EAE1E,EAAKxG,SAAS,CAACwC,KAAKA,EAAKuG,UAAU,EAAMC,SAAS,EAAMuC,WAAYA,OAE5Dd,OAAM,SAAAC,GAAG,OAAI,EAAK1K,SAAS,CAACgJ,SAAS,SApFlD,0CA8F6B,IAAxBjJ,KAAKH,MAAMmJ,UAGbhJ,KAAKyK,aAjGR,qCA8GQ,IAAI9H,EAAO3C,KAAKH,MAAM4C,KAAKE,KAEvB8D,EAAa9D,EAAK6M,SAAW,IAAM7M,EAAKgE,WAAa,IAAMhE,EAAKiE,cAE1E,OAEc,6BAEI,kBAAC1B,EAAA,EAAD,CAAWC,UAAU,QACjB,kBAACsK,EAAA,EAAD,CAASC,OAAK,EAACC,KAAK,SAAQ,oCAAalJ,EAAzC,IAAqD,2CAAoBzG,KAAKH,MAAM4C,KAAKM,iBACzF,6BACA,kBAAC5B,EAAA,EAAD,CAAQ4J,UAAQ,EAAC3J,QAASpB,KAAK4W,WAAWpK,KAAKxM,OAA/C,UACA,6BACA,kBAAC,KAAD,CAAW4P,IAAK5P,KAAKH,MAAM4C,KAAKA,WA3HxD,oCA4IQ,OACA,kBAACqI,EAAA,EAAD,CAASC,UAAQ,GACb,kBAACD,EAAA,EAAQvJ,OAAT,6BACA,kEACA,kBAACJ,EAAA,EAAD,CAAQ6J,MAAM,MAAM5J,QAASpB,KAAKyK,SAAS+B,KAAKxM,OAAhD,iBAhJZ,kCA0JayC,GAGXzC,KAAKJ,MAAMM,QAAQC,KAAK,4BAA8BsC,EAAKT,GAAK,sBA7JlE,sCAuKQ,OAAO,kBAACkJ,EAAA,EAAD,uBAvKf,sCAkLQ,OAAGlL,KAAKH,MAAMoJ,QAGHjJ,KAAKoL,cAGRpL,KAAKH,MAAMmJ,SAGRhJ,KAAKmL,eAMLnL,KAAKqL,kBAjMxB,+BAgNE,OAFArL,KAAKsL,mBAEG,yBAAKvJ,UAAU,QACtB,kBAAC,EAAD,CACCP,OAAQxB,KAAKH,MAAM2L,WACnBlK,eAAgBtB,KAAKJ,MAAM0B,eAC3BD,mBAAoBrB,KAAKJ,MAAMyB,qBAEhC,6BACA,yBAAKW,GAAG,YAAYnB,MAAO,CAAC8K,UAAU,UACpC3L,KAAK4L,sBAxNV,GAAwChK,aAuOzBC,eAAWwX,IC9OpBC,G,YAEL,WAAY1Z,GAAQ,IAAD,8BAClB,4CAAMA,KAEDC,MAAQ,CACZ0Z,SAAU,GACVC,SAAU,GACVC,UAAU,EACVC,gBAAgB,EAChBzQ,SAAS,EACT0Q,WAAY,IATK,E,yEAelB,OAAO,I,mCAGK5N,E,GAAoB,IAAfnI,EAAc,EAAdA,KAAMQ,EAAQ,EAARA,MACvBpE,KAAKC,SAAL,eAAiB2D,EAAOQ,M,qCAGV,IAAD,OAEbwG,QAAQC,IAAI7K,KAAKH,MAAM0Z,UAEvB3O,QAAQC,IAAIhB,KAAKC,UAAU,CAACyP,SAAUvZ,KAAKH,MAAM0Z,SAAUC,SAAUxZ,KAAKH,MAAM2Z,YAIhFzP,MAAM,SACL,CAACC,OAAQ,OACTN,KAAMG,KAAKC,UAAU,CAACyP,SAAUvZ,KAAKH,MAAM0Z,SAAUC,SAAUxZ,KAAKH,MAAM2Z,WAC1EvP,QAAS,CACR,eAAgB,sBAGjBC,MAAK,SAAAC,GACJS,QAAQC,IAAIV,EAAIG,QACbH,EAAIC,GACN,EAAKxK,MAAMM,QAAQC,KAAK,KAEH,KAAdgK,EAAIG,OAEX,EAAKrK,SAAS,CAACyZ,gBAAgB,IAG/B,EAAKzZ,SAAS,CAACgJ,SAAS,OAG1ByB,OAAM,SAAAC,GACN,OAAOA,EAAIsK,SACT,IAAK,MAGJ,YAFK,EAAKpV,MAAM6Z,gBACf,EAAKzZ,SAAS,CAACyZ,gBAAgB,KAGjC,QAGC,YAFK,EAAK7Z,MAAMoJ,SACf,EAAKhJ,SAAS,CAACgJ,SAAS,W,oCAQ7B,OADA2B,QAAQC,IAAI7K,KAAKH,OACdG,KAAKH,MAAMoJ,QAEZ,kBAAC6B,EAAA,EAAD,CAASoL,SAAO,EAACnL,UAAQ,GACxB,kBAACD,EAAA,EAAQvJ,OAAT,6BACA,mEAGOvB,KAAKH,MAAM6Z,eAEnB,kBAAC5O,EAAA,EAAD,CAASoL,SAAO,EAACnL,UAAQ,GACxB,kBAACD,EAAA,EAAQvJ,OAAT,wBACA,+DAIK,gC,+BAMR,OAAQ,yBAAKQ,UAAU,QACtB,kBAACnB,EAAA,EAAD,CAAMuE,UAAU,SAAStE,MAAO,CAAC8K,UAAU,SAAUiO,cAAc,UAClE,kBAAChZ,EAAA,EAAKM,OAAN,CAAaL,MAAO,CAAEgZ,SAAU,MAE/B,kBAACtY,EAAA,EAAD,CAAQuY,GAAG,KAAK3U,UAAU,UAA1B,SAGA,kBAACsG,EAAA,EAAD,CAAMkE,KAAK,SACV,kBAACF,EAAA,EAAD,KACC,kBAAChE,EAAA,EAAKyC,MAAN,CACA6L,OAAK,EAAC3L,KAAK,OACX4L,aAAa,OACb7L,YAAY,WACZvK,KAAK,WACLQ,MAAOpE,KAAKH,MAAM0Z,SAClB7M,SAAU1M,KAAKqW,aAAa7J,KAAKxM,QAEjC,kBAACyL,EAAA,EAAKyC,MAAN,CACA6L,OAAK,EAAC3L,KAAK,OACX4L,aAAa,OACb7L,YAAY,WACZvK,KAAK,WACLH,KAAK,WACLW,MAAOpE,KAAKH,MAAM2Z,SAClB9M,SAAU1M,KAAKqW,aAAa7J,KAAKxM,QAEjC,kBAACmB,EAAA,EAAD,CAAQmR,SAAO,EAAClR,QAASpB,KAAKia,aAAazN,KAAKxM,OAAhD,WAGF,kBAAC8K,EAAA,EAAD,KACC,uBAAGoP,KAAK,oBAAR,YAEAla,KAAKoL,qB,GA1HaxJ,aAkITC,eAAWyX,IClIpBa,G,YAEL,WAAYva,GAAQ,IAAD,8BAClB,4CAAMA,KAEDC,MAAQ,CACZ0Z,SAAU,GACVC,SAAU,GACVY,gBAAiB,GACjBC,OAAQ,GACRC,kBAAkB,EAClBC,oBAAoB,EACpBtR,SAAS,GAVQ,E,yEAgBlB,OAAO,I,mCAGK8C,E,GAAoB,IAAfnI,EAAc,EAAdA,KAAMQ,EAAQ,EAARA,MACvBpE,KAAKC,SAAL,eAAiB2D,EAAOQ,M,qCAGV,IAAD,OACb2F,MAAM,YACL,CAACC,OAAQ,OACTN,KAAMG,KAAKC,UAAU,CAACyP,SAAUvZ,KAAKH,MAAM0Z,SAAUC,SAAUxZ,KAAKH,MAAM2Z,SAAUa,OAAQra,KAAKH,MAAMwa,SACvGpQ,QAAS,CACR,eAAgB,sBAGjBC,MAAK,SAAAC,GACDA,EAAIC,GACN,EAAKxK,MAAMM,QAAQC,KAAK,KAEH,KAAdgK,EAAIG,OACX,EAAKrK,SAAS,CAACsa,oBAAoB,IAGnC,EAAKta,SAAS,CAACgJ,SAAS,OAG1ByB,OAAM,SAAAC,GACN,OAAOA,EAAIsK,SACT,IAAK,MAGJ,YAFK,EAAKpV,MAAM0a,oBACf,EAAKta,SAAS,CAACsa,oBAAoB,KAGrC,QAGC,YAFK,EAAK1a,MAAMoJ,SACf,EAAKhJ,SAAS,CAACgJ,SAAS,W,oCAO7B,OAAGjJ,KAAKH,MAAMoJ,QAEZ,kBAAC6B,EAAA,EAAD,CAASoL,SAAO,EAACnL,UAAQ,GACxB,kBAACD,EAAA,EAAQvJ,OAAT,6BACA,mEAGOvB,KAAKH,MAAM0a,mBAEnB,kBAACzP,EAAA,EAAD,CAASoL,SAAO,EAACnL,UAAQ,GACxB,kBAACD,EAAA,EAAQvJ,OAAT,kCACA,iFAIK,gC,+BAMR,OAAQ,yBAAKQ,UAAU,QACtB,kBAACnB,EAAA,EAAD,CAAMuE,UAAU,SAAStE,MAAO,CAAC8K,UAAU,SAAUiO,cAAc,UAClE,kBAAChZ,EAAA,EAAKM,OAAN,CAAaL,MAAO,CAAEgZ,SAAU,MAC/B,kBAACtY,EAAA,EAAD,CAAQuY,GAAG,KAAK3U,UAAU,UAA1B,qBAGA,kBAACsG,EAAA,EAAD,CAAMkE,KAAK,SACV,kBAACF,EAAA,EAAD,KACC,kBAAChE,EAAA,EAAKyC,MAAN,CACA6L,OAAK,EAAC3L,KAAK,OACX4L,aAAa,OACb7L,YAAY,WACZvK,KAAK,WACLQ,MAAOpE,KAAKH,MAAM0Z,SAClB7M,SAAU1M,KAAKqW,aAAa7J,KAAKxM,QAEjC,kBAACyL,EAAA,EAAKyC,MAAN,CACA6L,OAAK,EAAC3L,KAAK,OACX4L,aAAa,OACb7L,YAAY,WACZ1K,KAAK,WACLG,KAAK,WACLQ,MAAOpE,KAAKH,MAAM2Z,SAClB9M,SAAU1M,KAAKqW,aAAa7J,KAAKxM,QAEjC,kBAACyL,EAAA,EAAKyC,MAAN,CACA6L,OAAK,EAAC3L,KAAK,KACX4L,aAAa,OACb7L,YAAY,mBACZvK,KAAK,kBACLH,KAAK,WACLW,MAAOpE,KAAKH,MAAMua,gBAClB1N,SAAU1M,KAAKqW,aAAa7J,KAAKxM,QAEjC,kBAACyL,EAAA,EAAKyC,MAAN,CACA6L,OAAK,EAAC3L,KAAK,MACX4L,aAAa,OACb7L,YAAY,mBACZvK,KAAK,SACLQ,MAAOpE,KAAKH,MAAMwa,OAClB3N,SAAU1M,KAAKqW,aAAa7J,KAAKxM,QAEjC,kBAACmB,EAAA,EAAD,CAAQmR,SAAO,EAAClR,QAASpB,KAAKia,aAAazN,KAAKxM,OAAhD,kBAGF,kBAAC8K,EAAA,EAAD,uCACgC,uBAAGoP,KAAK,iBAAR,cAIjCla,KAAKoL,mB,GAnIkBxJ,aAwIZC,eAAWsY,ICTXK,G,YA3Gd,aAAe,IAAD,8BACb,+CACK3a,MAAQ,CACZyB,gBAAgB,GAGjB,EAAKD,mBAAqB,WACzB,EAAKpB,SAAS,CAAEqB,gBAAiB,EAAKzB,MAAMyB,kBAPhC,E,sEAWJ,IAAD,OAER,OACC,6BACC,kBAACmZ,EAAA,EAAQC,SAAT,CAAkBZ,GAAIrK,KACrB,kBAACgL,EAAA,EAAD,CACCX,GAAIa,IACJC,UAAU,OACVxM,KAAK,UACLyM,UAAQ,EACRC,OAAQ9a,KAAK+a,kBACbC,UAAQ,EACR9E,QAASlW,KAAKH,MAAMyB,eACpB2Z,MAAM,QAEN,kBAACN,EAAA,EAAKO,KAAN,CAAWpB,GAAG,IAAII,KAAK,KAAvB,QAGA,kBAACS,EAAA,EAAKO,KAAN,CAAWpB,GAAG,IAAII,KAAK,2BAAvB,0BAGA,kBAACS,EAAA,EAAKO,KAAN,CAAWpB,GAAG,IAAII,KAAK,yBAAvB,wBAGA,kBAACS,EAAA,EAAKO,KAAN,CAAWpB,GAAG,IAAII,KAAK,eAAvB,cAGA,kBAACS,EAAA,EAAKO,KAAN,CAAWpB,GAAG,IAAII,KAAK,cAAvB,aAGA,kBAACS,EAAA,EAAKO,KAAN,CAAWpB,GAAG,IAAII,KAAK,aAAvB,YAGA,kBAACS,EAAA,EAAKO,KAAN,CAAWpB,GAAG,IAAII,KAAK,2BAAvB,0BAGA,kBAACS,EAAA,EAAKO,KAAN,CAAWpB,GAAG,IAAII,KAAK,0BAAvB,yBAGA,kBAACS,EAAA,EAAKO,KAAN,CAAWpB,GAAG,IAAII,KAAK,WAAvB,WAKD,kBAACO,EAAA,EAAQU,OAAT,KACC,yBAAKpZ,UAAU,MAAMlB,MAAO,CAAC8K,UAAU,UACtC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQyP,OAAK,EAACC,KAAK,IACjBC,UAAW,kBAAM,kBAAC,EAAD,CAAMha,eAAgB,EAAKzB,MAAMyB,eAAgBD,mBAAoB,EAAKA,mBAAmBmL,KAAK,QAElH,kBAAC,IAAD,CAAQ6O,KAAK,0BACXC,UAAW,kBAAM,kBAAC,EAAD,CAAsBha,eAAgB,EAAKzB,MAAMyB,eAAgBD,mBAAoB,EAAKA,mBAAmBmL,KAAK,QAErI,kBAAC,IAAD,CAAQ6O,KAAK,wBACXC,UAAW,kBAAM,kBAAC,GAAD,CAAoBha,eAAgB,EAAKzB,MAAMyB,eAAgBD,mBAAoB,EAAKA,mBAAmBmL,KAAK,QAEtI,kBAAC,IAAD,CAAQ6O,KAAK,cACXC,UAAW,kBAAM,kBAAC,GAAD,CAAWha,eAAgB,EAAKzB,MAAMyB,eAAgBD,mBAAoB,EAAKA,mBAAmBmL,KAAK,QAE1H,kBAAC,IAAD,CAAQ6O,KAAK,cACXC,UAAW,kBAAM,kBAAC,GAAD,CAAWha,eAAgB,EAAKzB,MAAMyB,eAAgBD,mBAAoB,EAAKA,mBAAmBmL,KAAK,QAE1H,kBAAC,IAAD,CAAQ6O,KAAK,aACXC,UAAW,kBAAM,kBAAC,GAAD,CAAUha,eAAgB,EAAKzB,MAAMyB,eAAgBD,mBAAoB,EAAKA,mBAAmBmL,KAAK,QAEzH,kBAAC,IAAD,CAAQ6O,KAAK,YACXC,UAAW,kBAAM,kBAAC,GAAD,CAASha,eAAgB,EAAKzB,MAAMyB,eAAgBD,mBAAoB,EAAKA,mBAAmBmL,KAAK,QAExH,kBAAC,IAAD,CAAQ6O,KAAK,0BACXC,UAAW,kBAAM,kBAAC,GAAD,CAAsBha,eAAgB,EAAKzB,MAAMyB,eAAgBD,mBAAoB,EAAKA,mBAAmBmL,KAAK,QAErI,kBAAC,IAAD,CAAQ6O,KAAK,yBACXC,UAAW,kBAAM,kBAAC,GAAD,CAAqBha,eAAgB,EAAKzB,MAAMyB,eAAgBD,mBAAoB,EAAKA,mBAAmBmL,KAAK,QAEpI,kBAAC,IAAD,CAAQ6O,KAAK,UACXC,UAAW,kBAAM,kBAAC,GAAD,CAAQha,eAAgB,EAAKzB,MAAMyB,eAAgBD,mBAAoB,EAAKA,mBAAmBmL,KAAK,QAEvH,kBAAC,IAAD,CAAQ6O,KAAK,wBACXC,UAAW,kBAAM,kBAAC,GAAD,CAAoBha,eAAgB,EAAKzB,MAAMyB,eAAgBD,mBAAoB,EAAKA,mBAAmBmL,KAAK,QAEnI,kBAAC,IAAD,CAAO6O,KAAK,cACVC,UAAW,kBAAM,kBAAC,GAAD,CAAWha,eAAgB,EAAKzB,MAAMyB,eAAgBD,mBAAoB,EAAKA,mBAAmBmL,KAAK,QAE1H,kBAAC,IAAD,CAAO6O,KAAK,iBACVC,UAAW,kBAAM,kBAAC,GAAD,CAAcha,eAAgB,EAAKzB,MAAMyB,eAAgBD,mBAAoB,EAAKA,mBAAmBmL,KAAK,iB,GAhGnH5K,aCXE2Z,QACW,cAA7BC,OAAOhb,SAASib,UAEe,UAA7BD,OAAOhb,SAASib,UAEhBD,OAAOhb,SAASib,SAASvP,MACvB,2DCXNwP,IAAS1J,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAED2J,SAASC,eAAe,SDsHrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7R,MAAK,SAAA8R,GACjCA,EAAaC,kB","file":"static/js/main.bd411617.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Header, Button, Grid } from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass PageHeader extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tisLoggedIn: false //Should get status from index.js\r\n\t\t}\r\n\t}\r\n\r\n\thandleLoginClick(isLogged) {\r\n\t\tif (isLogged) {\r\n\t\t\tthis.setState({isLoggedIn: false});\r\n\t\t} else {\r\n\t\t\tthis.props.history.push('/login-form');\r\n\t\t}\r\n\t}\r\n\r\n\trender() { //isbackable and isloggedin props only used for testing purposes, should be passed through URL under all other circumstances\r\n\t\tlet isBackable = this.props.isbackable === undefined ?\r\n\t\t\tnew URLSearchParams(this.props.location.search).get(\"isbackable\") : this.props.isbackable;\r\n\r\n\t\tif (this.props.isbackable !== undefined)\r\n\t\t\tthis.setState({isLoggedIn: this.props.isloggedin})\r\n\r\n\t\treturn (\r\n\t\t\t<Grid style={{padding:\"15px 15px 15px 15px\"}} container columns={3}>\r\n\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t<Button onClick={this.props.handleSidebarClick} >\r\n\t\t\t\t\t\t\t{(this.props.sidebarVisible?\"Hide\":\"Show\")+\" sidebar\"}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t<Header>\r\n\t\t\t\t\t\t{this.props.header}\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t{isBackable ? <Button \r\n\t\t\t\t\t\tonClick={() => {this.props.history.goBack()}}\r\n\t\t\t\t\t\tdisabled={!isBackable}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBack\r\n\t\t\t\t\t</Button> : undefined }\r\n\t\t\t\t\t<Button onClick={() => this.handleLoginClick(this.state.isLoggedIn)} >\r\n\t\t\t\t\t\t{(this.state.isLoggedIn?\"Logout\":\"Login\")}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(PageHeader);\r\n","import React, { Component } from 'react';\r\nimport PageHeader from './page-header.js';\r\n\r\nclass Home extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"page\">\r\n\t\t\t\t<PageHeader \r\n\t\t\t\t\theader={\"Home\"}\r\n\t\t\t\t\tsidebarVisible={this.props.sidebarVisible}\r\n\t\t\t\t\thandleSidebarClick={this.props.handleSidebarClick}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"container\" style={{height:\"100vh\"}}>\r\n\t\t\t\t\tContent goes here\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home;","/**\r\n * A class representing unstructured data\r\n * for list you may want to leave the data field undefined\r\n * NOTE: this code is duplicated on client and server so is only tested on the server\r\n */\r\nexport class UnstructuredData\r\n{\r\n\r\n    constructor(id,matchid,title,author,url,published,extracted,data)\r\n    {\r\n\r\n        this.id = id;\r\n        this.matchid = matchid;\r\n        this.title = title;\r\n        this.author = author;\r\n        this.url = url;\r\n        this.published = published;\r\n        this.extracted = extracted;\r\n        this.data = data; \r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * A class representing structured data, for lists you may want to leave data undefined\r\n */\r\nexport class StructuredData\r\n{\r\n\r\n    constructor(id,date,home,away,competitionID,competitionName,data)\r\n    {\r\n\r\n        this.id = id;\r\n        this.date = date;\r\n        this.home = home;\r\n        this.away = away;\r\n        this.competitionID = competitionID;\r\n        this.competitionName = competitionName;\r\n        this.data = data; \r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * a class representing a match \r\n */\r\nexport class Match\r\n{\r\n\r\n    constructor(id,date,home,away,competitionID,competitionName)\r\n    {\r\n\r\n        this.id = id;\r\n        this.date = date;\r\n        this.home = home;\r\n        this.away = away;\r\n        this.competitionID = competitionID;\r\n        this.competitionName = competitionName;\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * A class representing an edit \r\n */\r\nexport class Edit \r\n{\r\n\r\n    constructor(editID,structuredDataID,unstructuredDataID,isCorpus,settings,replace,replaceWith,type,order)\r\n    {\r\n\r\n        this.editID = editID;\r\n        this.structuredDataID = structuredDataID;\r\n        this.unstructuredDataID = unstructuredDataID;\r\n        this.isCorpus = isCorpus;\r\n        this.settings = settings;\r\n        this.replace = replace;\r\n        this.replaceWith = replaceWith;\r\n        this.type = type;\r\n        this.order = order;\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Competition\r\n{\r\n\r\n    constructor(id,name,countryName,countryId)\r\n    {\r\n\r\n        this.id = id; \r\n        this.name = name; \r\n        this.countryName = countryName;\r\n        this.countryId = countryId\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ImportRequest\r\n{\r\n\r\n    constructor(begin,end,compId)\r\n    {\r\n\r\n        this.begin = begin; //optional\r\n\r\n        this.end = end; //optional\r\n        \r\n        this.compId = compId; //mandatory \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class SearchRequest\r\n{\r\n\r\n    constructor(type,value,field)\r\n    {\r\n\r\n        this.type = type;\r\n        this.value = value;\r\n        this.field = field; \r\n\r\n    }\r\n\r\n}\r\n\r\n","\r\nexport const APP_NAME = \"Semantic League\";\r\n\r\n//use to truncate long unstructured data titles\r\nexport const MAX_TITLE_SIZE = 45; \r\n\r\nexport const STRUCTURED_DATA_FIELDS = [\"cards\",\r\n    \"lineup\",\r\n    \"goalscorer\",\r\n    \"league_name\",\r\n    \"country_name\",\r\n    \"match_status\",\r\n    \"substitutions\",\r\n    \"match_hometeam_name\",\r\n    \"match_awayteam_name\"];\r\n\r\nexport const EDIT_TYPES = [\"replace\",\"replacewithfield\",\"sequentialreplace\"];\r\n \r\nexport const EDIT_NAMES = [\"Replace\",\"Replace Field\",\"Sequential Replace\"]","import React, { Component } from 'react';\r\nimport { Table, Button, Container, Dimmer,Loader } from 'semantic-ui-react';\r\n/**\r\n * a generic table for other tables to inherit from\r\n * inheritance was choosen over composition becuase\r\n * 1. it allows for more code reuse \r\n * 2. it means that data does need to be piped an additional layer\r\n */\r\nclass DataTable extends Component\r\n{\r\n    /**\r\n     * constructs a new match data table\r\n     * data is mandatory however onSelect is optional \r\n     * @param {*} props the props passed in\r\n     */\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        let selectFunc;\r\n        if(this.props.onSelect != undefined)\r\n        {\r\n            selectFunc = (data) => \r\n            {\r\n                this.setState({activeRow: data.id})\r\n                this.props.onSelect(data);\r\n            }\r\n            \r\n        }\r\n        else\r\n        {\r\n            selectFunc = () => {};\r\n        }\r\n\r\n        this.state = {activeRow: -1,selectFunc: selectFunc,page:this.props.page,totalPages:this.props.totalPages};\r\n    }\r\n\r\n    renderPageButtons()\r\n    {\r\n\r\n        \r\n\r\n        if(Number.isInteger(this.props.totalPages) && Number.isInteger(this.state.page) && this.state.totalPages > 1)\r\n        {\r\n            return(\r\n                <Container textAlign=\"right\"  >\r\n                                \r\n                    <Button \r\n                        onClick={() => this.props.onPageChange(--this.state.page)} \r\n                        disabled={this.state.page < 2 || this.props.paging}>\r\n                        Prev\r\n                    </Button>\r\n                    <Button \r\n                        onClick={() => this.props.onPageChange(++this.state.page)} \r\n                        disabled={this.state.page === this.state.totalPages || this.props.paging}>\r\n                        Next\r\n                    </Button>\r\n                    \r\n                </Container>)\r\n            \r\n \r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * renders the function\r\n     * also checks if the data is valid \r\n     * only checks the fields which are relevant to this component \r\n     */\r\n    render()\r\n    {\r\n\r\n        if(! Array.isArray( this.props.items) && Object.keys(this.props.items)\r\n            .every((k) => Array.isArray(this.props.items[k]) == false))\r\n        {\r\n            throw Error(\"Props.items should contain a list of data or an object containing only lists of data\")\r\n        }\r\n        \r\n        if(Array.isArray(this.props.items))\r\n        {\r\n\r\n            if(this.props.items.every((i) => i != undefined && i != null) == false)\r\n            {\r\n                throw new Error(\"props.data must be an instance of data\")\r\n            }\r\n\r\n        }\r\n        if(this.genRows == undefined || this.genHeader == undefined)\r\n        {\r\n\r\n            throw new Error(\"genRows and genHeader must be defined by child component\")\r\n\r\n        }\r\n        if(this.isValidData !== undefined)\r\n        {\r\n\r\n            this.isValidData()\r\n\r\n        }\r\n\r\n        let isSelectable = this.props.onSelect !== undefined;\r\n\r\n        return(\r\n        <div>\r\n            {this.renderPageButtons()}\r\n            <Table striped selectable={isSelectable} >        \r\n                <Table.Header>\r\n                    {this.genHeader()}\r\n                </Table.Header>  \r\n                <Table.Body>\r\n                    {this.genRows()}\r\n                </Table.Body>        \r\n            </Table>\r\n        </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataTable;\r\n","import React, { Component } from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport { UnstructuredData} from \"../../domain\";\r\nimport {MAX_TITLE_SIZE} from \"../../constants\";\r\nimport DataTable from \"./data-table\"\r\n/**\r\n * shows a table of unstructured data\r\n * has the ability to select a row \r\n */\r\nclass UnstructuredDataTable extends DataTable\r\n{\r\n    /**\r\n     * constructs a new unstructured data table\r\n     * data is mandatory however onselect is optional\r\n     * @param {*} props the props passed in \r\n     */\r\n    constructor(props)\r\n    {\r\n\r\n        super(props);\r\n\r\n    }\r\n\r\n    genRows()\r\n    {\r\n\r\n        return this.props.items.map((item, index) => (\r\n            <UnstructuredDataRow \r\n                key={item.id} \r\n                data={item} \r\n                onSelect={this.state.selectFunc} \r\n                isActive={item.id == this.state.activeRow}\r\n            />\r\n        ))\r\n\r\n    }\r\n\r\n    genHeader()\r\n    {\r\n\r\n        return this.state.header = (<Table.Row>\r\n            <Table.HeaderCell>Published</Table.HeaderCell>\r\n            <Table.HeaderCell>Author</Table.HeaderCell>\r\n            <Table.HeaderCell>Title</Table.HeaderCell>\r\n        </Table.Row>)\r\n\r\n    }\r\n\r\n    isValidData()\r\n    {\r\n\r\n        \r\n        //broken into each predicate for easier debugging\r\n        if(this.props.items.every((i) => {\r\n            let isIdValid = typeof(i.id) === \"number\" \r\n            let isPublishedValid = i.published instanceof Date \r\n            let isAuthorValid = typeof(i.author) === \"string\"\r\n            let isTitleValid = typeof(i.title) === \"string\"\r\n            return isIdValid && isPublishedValid && isAuthorValid && isTitleValid;\r\n            }) == false)\r\n        {\r\n            \r\n\r\n            \r\n            throw new Error(\"every piece of data should have valid id, published, title and author\");\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Represents a row of the unstructured data table  \r\n * as this component isn't exported no additional validation is done \r\n * by this component \r\n * @param {*} props \r\n */\r\nfunction UnstructuredDataRow(props)\r\n{\r\n\r\n    if((props.data instanceof UnstructuredData) == false)\r\n    {\r\n\r\n        throw Error(\"props.data must be an instance of unstructured data\");\r\n\r\n    }\r\n    \r\n    let date = props.data.published;\r\n\r\n    let dateString = (date.getDate()) + \"/\" + (date.getMonth()+1) + \"/\" + date.getFullYear();\r\n\r\n    let title = props.data.title;\r\n\r\n    if(title.length > MAX_TITLE_SIZE)\r\n    {\r\n\r\n        title = title.substring(0,MAX_TITLE_SIZE-3) + \"...\";\r\n\r\n    }\r\n\r\n    let selectFunc = props.onSelect != undefined ? props.onSelect : () => {};\r\n\r\n    return(\r\n        <Table.Row onClick={() => selectFunc(props.data)} active={props.isActive}>\r\n            <Table.Cell>{dateString}</Table.Cell>\r\n            <Table.Cell>{props.data.author}</Table.Cell>\r\n            <Table.Cell>{title}</Table.Cell>\r\n        </Table.Row>\r\n    );\r\n    \r\n}\r\n\r\nexport default UnstructuredDataTable;","import {StructuredData, UnstructuredData, Edit, Match, Competition} from \"./domain\";\r\n/**\r\n * converts a parsed json object of structured data\r\n * to an instance of structured data \r\n * No validation is done\r\n * @param {object} rawStructuredData the object representation\r\n */\r\nexport function bindStructuredData(rawStructuredData)\r\n{\r\n\r\n    return new StructuredData(Number.parseInt(rawStructuredData.id)\r\n        ,new Date(rawStructuredData.date)\r\n        ,rawStructuredData.home\r\n        ,rawStructuredData.away\r\n        ,Number.parseInt(rawStructuredData.competitionID)\r\n        ,rawStructuredData.competitionName\r\n        ,rawStructuredData.data)\r\n\r\n}\r\n\r\n/**\r\n * converts a parsed json object of unstructured data\r\n * to an instance of unstructured data\r\n * no validation is done.\r\n * @param {object} rawUnstructuredData \r\n */\r\nexport function bindUnstructureData(rawUnstructuredData)\r\n{\r\n\r\n    return new UnstructuredData(Number.parseInt(rawUnstructuredData.id),\r\n        Number.parseInt(rawUnstructuredData.matchid),\r\n        rawUnstructuredData.title,\r\n        rawUnstructuredData.author,\r\n        rawUnstructuredData.url,\r\n        new Date(rawUnstructuredData.published),\r\n        new Date(rawUnstructuredData.extracted),\r\n        rawUnstructuredData.data);\r\n\r\n\r\n}\r\n\r\n/**\r\n * converts a parsed json object to an edit \r\n * no validation is done \r\n * @param {*} rawEdit the parsed json object \r\n */\r\nexport function bindEdit(rawEdit)\r\n{\r\n\r\n    return new Edit(Number.parseInt(rawEdit.editID),\r\n        Number.isInteger(rawEdit.structuredDataID) ? Number.parseInt(rawEdit.structuredDataID) : null,\r\n        Number.isInteger(rawEdit.unstructuredDataID) ? Number.parseInt(rawEdit.unstructuredDataID) : null,\r\n        rawEdit.isCorpus,\r\n        rawEdit.settings,\r\n        rawEdit.replace,\r\n        rawEdit.replaceWith,\r\n        rawEdit.type,\r\n        rawEdit.order);    \r\n\r\n}\r\n\r\n/**\r\n * converts a parsed json object to a match\r\n * no validation is done\r\n * @param {*} rawMatch the parsed json object\r\n */\r\n\r\nexport function bindMatch(rawMatch)\r\n{\r\n\r\n    return new Match(Number.parseInt(rawMatch.id),\r\n        new Date(rawMatch.date),\r\n        rawMatch.home,\r\n        rawMatch.away,\r\n        Number.parseInt(rawMatch.competitionID),\r\n        rawMatch.competitionName);\r\n}\r\n\r\nexport function bindCompetition(rawComp)\r\n{\r\n\r\n    return new Competition(Number.parseInt(rawComp.id),\r\n        rawComp.name,\r\n        rawComp.countryName,\r\n        Number.parseInt(rawComp.countryId));\r\n\r\n}\r\n","/**\r\n * An object for executing a function if no additional calls have been made after\r\n * a given number of miliseconds\r\n */\r\nclass DelayEngine\r\n{\r\n    /**\r\n     * creates an object\r\n     * @param {*} delay delay in miliseconds\r\n     */\r\n    constructor(delay)\r\n    {\r\n\r\n        this.delay = delay;\r\n\r\n    }\r\n\r\n    /**\r\n     * starts the process, if called again will reset the timer\r\n     * @param {*} callback the callback to call on success. \r\n     */\r\n    start(callback)\r\n    {\r\n\r\n        let start = new Date();\r\n\r\n        this.lastInput = start;\r\n        setTimeout(() => \r\n        {\r\n\r\n            if(this.lastInput === start)\r\n            {\r\n\r\n                callback()\r\n\r\n            }\r\n\r\n        },this.delay)\r\n\r\n    }\r\n\r\n    /**\r\n     * stops the timer and so the code will not execute after a delay\r\n     */\r\n    stop()\r\n    {\r\n\r\n        this.lastInput = undefined;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default DelayEngine;","import React, { Component } from 'react';\r\nimport PageHeader from '../page-header.js';\r\nimport { Button, Loader, Message, Container, Form, Dimmer} from 'semantic-ui-react'\r\nimport {SearchRequest} from \"../../domain\";\r\nimport DelayEngine from \"../../delay-engine\";\r\n\r\nexport class ListPage extends Component {\r\n\r\n\tconstructor(props)\r\n\t{\r\n\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n            data: [],\r\n            target:[],\r\n             isLoaded: false,\r\n              isError: false,\r\n              page:1,\r\n              totalPages:NaN,\r\n              paging:false,\r\n              searches:{},\r\n              delayEngine: new DelayEngine(750)}\r\n\r\n\t}\r\n\r\n   \r\n\r\n     /**\r\n     * Handles any errors cuased by a sub-component \r\n     * @param {*} error the error recieved\r\n     * @param {*} errorInfo information about the error\r\n     */\r\n    componentDidCatch(error, errorInfo)\r\n    {\r\n\r\n        this.setState({isError: true});\r\n\r\n    }\r\n\r\n    /**\r\n     * handles changing of pages\r\n     * @param {*} page the page to change to\r\n     */\r\n    handlePageChange(page)\r\n    {\r\n\r\n        this.state.page = page;\r\n\r\n        this.setState({paging: true, page:page})\r\n    }\r\n\r\n    /**\r\n     * handles standard searches by child components \r\n     */\r\n    handleSearchChange(key,search)\r\n    {      \r\n        \r\n        if(search === undefined && key !== undefined)\r\n        {\r\n            \r\n            delete this.state.searches[key]\r\n            \r\n            this.setState({searches:this.state.searches},() => \r\n            {\r\n\r\n\r\n\r\n                this.state.delayEngine.start(() => this.search());\r\n\r\n            })\r\n\r\n\r\n        }\r\n        \r\n\r\n        if(search !== undefined &&\r\n           search !== null &&\r\n           typeof(search) === \"object\" &&\r\n           search instanceof SearchRequest)\r\n        {\r\n\r\n\r\n\r\n            this.state.searches[key] = search;\r\n\r\n            this.setState({searches:this.state.searches},() => \r\n            {\r\n\r\n\r\n\r\n                this.state.delayEngine.start(() => this.search());\r\n\r\n            })\r\n\r\n            \r\n\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * starts a search \r\n     */\r\n    search()\r\n    {\r\n\r\n        this.state.delayEngine.stop();        \r\n\r\n        this.sendRequest(Object.values(this.state.searches));       \r\n\r\n    }\r\n\r\n    /**\r\n     * Sends a request to the server and then passes the result to child component's load data function\r\n     * @param {*} searches the searches to perform if there are any\r\n     */\r\n    sendRequest(searches)\r\n    {\r\n        \r\n        if(this.state.route === undefined)\r\n        {\r\n\r\n            throw new Error(\"this.state.route should be defined\");\r\n\r\n        }\r\n\r\n        \r\n        let body;\r\n\r\n        //genBody allows for more complex searching, not neccessary for most list pages \r\n        if(this.genBody === undefined)\r\n        {\r\n\r\n                \r\n            if(searches !== undefined)\r\n            {\r\n\r\n                body = JSON.stringify({searches:searches})\r\n\r\n            }\r\n            else\r\n            {\r\n\r\n                body = \"\"\r\n\r\n            }\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            body = JSON.stringify(this.genBody());\r\n\r\n        }\r\n\r\n\r\n        fetch(this.state.route+\"?page=\" + this.state.page,{method: \"POST\",\r\n            body: body,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }})\r\n            .then(res => \r\n                {\r\n\r\n                    if(res.ok)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn res.json()\r\n\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t\telse if(res.status == 404)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\tthrow new Error(404);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse \r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\tthrow new Error(500);\r\n\r\n\t\t\t\t\t}\t\t\t\t\r\n\r\n                })\r\n            .then(result => \r\n            {\r\n\r\n                \r\n\r\n                this.setState({totalPages:result.pages,isLoaded: true,paging:false});\r\n\r\n                if(result !== undefined)\r\n                {\r\n\r\n                    this.loadData(result);\r\n\r\n                }\r\n\r\n                \r\n\r\n            }).catch(err => \r\n            {\r\n                console.log(err)\r\n                this.setState({isError: true})\r\n            });\r\n            \r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * loads the data if it is not already loaded\r\n     */\r\n\tloadIfNotAlready()\r\n\t{\r\n\r\n\t\tif((this.state.isLoaded === false || this.state.paging === true) && this.state.isError === false)\r\n\t\t{\r\n\r\n            if(this.loadData === undefined)\r\n            {\r\n\r\n                throw new Error(\"Load data must be defined by child component\")\r\n\r\n            }\r\n\r\n\t\t\tthis.sendRequest();\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\t /**\r\n     * Renders the page if an error has occured\r\n     */\r\n    renderError()\r\n    {\r\n\r\n        return(  \r\n        <Message negative>\r\n            <Message.Header>An error has occured</Message.Header>\r\n            <p>Failed to get data from the server.</p>\r\n            <Button color=\"red\" onClick={() => this.sendRequest()}>Try Again?</Button>\r\n          </Message>\r\n          )\r\n\r\n    }\r\n\r\n    /**\r\n     * navigates to an edit page with parameters given by inputted edit\r\n     * @param {*} edit the edit inputted \r\n     */\r\n\trouteToEdit(edit)\r\n\t{\r\n\r\n\t\tthis.props.history.push(\"/add_edit?id=\" + edit.editID + \"&isbackable=true\");\r\n\t\t\r\n\t}\r\n\r\n\r\n    /**\r\n     * renders the page in loading state \r\n     */\r\n    renderLoading()\r\n    {\r\n\r\n        return(<Loader active >Loading your edits</Loader>)\r\n\r\n    }\r\n\r\n    \r\n    /**\r\n     * Chooses which render that should be rendered based on \r\n     * state of the object \r\n     */\r\n    executeRender()\r\n    {\r\n\r\n        if(this.renderLoaded === undefined)\r\n        {\r\n\r\n            throw new Error(\"Renderloaded must be defined in child component\")\r\n\r\n        }\r\n\r\n        if(this.state.isError)\r\n        {\r\n\r\n            return this.renderError();\r\n\r\n        }\r\n        else if(this.state.isLoaded)\r\n        {\r\n\r\n            return this.renderLoaded();\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            this.renderLoading()\r\n\r\n        }\r\n\r\n    }\r\n\r\n\t\r\n\r\n    /**\r\n     * renders the page \r\n     */\r\n\trender() {\r\n\r\n\t\tthis.loadIfNotAlready();\r\n\r\n\t\treturn (<div className=\"page\">\r\n           <Dimmer active={! this.state.isLoaded}>\r\n                <Loader active={! this.state.isLoaded}> Loading</Loader>\r\n           </Dimmer>\r\n\t\t\t<PageHeader \r\n\t\t\t\theader={this.state.headerText != undefined ? this.state.headerText : \"List Page\"}\r\n\t\t\t\tsidebarVisible={this.props.sidebarVisible}\r\n\t\t\t\thandleSidebarClick={this.props.handleSidebarClick}\r\n\t\t\t/>           \r\n\t\t\t<Container>\r\n            <Container textAlign=\"center\">\r\n                <Form>\r\n                {this.renderSearch !== undefined ? this.renderSearch() : undefined}\r\n                </Form>\r\n            </Container>\r\n    \r\n\t\t\t<br/>\r\n            <div id=\"container\" style={{minHeight:\"100vh\"}}>\r\n                {this.executeRender()}    \r\n            </div>\r\n            </Container>\t\r\n            \r\n\t\t</div>)\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport default ListPage;","import React, { Component } from 'react';\r\nimport UnstructuredDataTable from \"../tables/unstructured-data-table\";\r\nimport { bindUnstructureData } from \"../../data-binding\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport ListPage from './list-page.js';\r\nimport { SearchRequest } from \"../../domain\"\r\n\r\nclass UnstructuredDataList extends ListPage {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state.isLoaded = false;\r\n        this.state.search = \"\";\r\n        this.state.start = \"\";\r\n        this.state.end = \"\";\r\n        this.state.match = \"\";\r\n        this.state.league = \"\";\r\n        this.state.headerText = \"Unstructured Data List\"\r\n        this.state.route = \"/UnstructuredDataList\"\r\n    }\r\n\r\n    /**\r\n    * deals with filling out inputs in the form\r\n    * @param e - the event that caused the change\r\n    **/\r\n    changeHandler = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n        switch (e.target.name) {\r\n            case \"search\":\r\n                this.handleSearchChange(e.target.name, new SearchRequest(\"text\", e.target.value, [\"author\", \"title\", \"url\", \"data\"]))\r\n                break;\r\n            case \"start\":\r\n                var split = e.target.value.split('-')\r\n                var start = new Date(split[0], split[1] - 1, split[2], 0, 0, 0)\r\n                this.handleSearchChange(e.target.name, new SearchRequest(\"after\", start, \"published\"))\r\n                console.log(start)\r\n                break;\r\n            case \"end\":\r\n                var split = e.target.value.split('-')\r\n                var end = new Date(split[0], split[1] - 1, split[2], 0, 0, 0)\r\n                this.handleSearchChange(e.target.name, new SearchRequest(\"before\", end, \"published\"))\r\n                console.log(end)\r\n                break;\r\n            case \"match\":\r\n                break;\r\n            case \"league\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * loads all the unstructured data into the list\r\n    **/\r\n    loadData(data)\r\n    {\r\n\r\n        console.log(data)\r\n\r\n        data.unstructuredData = data.unstructuredData.map((d) => bindUnstructureData(d));\r\n        \r\n        this.setState({ data: data.unstructuredData, isLoaded: true, isError: false });                \r\n        \r\n    }\r\n\r\n    /**\r\n     * takes the user to the add unstructured data page with the id of the selected data\r\n     * @param {any} data - the selected data\r\n     */\r\n    routeToUnstructuredData(data) {\r\n        this.props.history.push(\"/add_unstructured_data?id=\" + data.id + \"&isbackable=true\")\r\n    }\r\n\r\n    renderLoaded()\r\n    {      \r\n    \r\n        return(<div class=\"inline fields\" >\r\n        <div class=\"one wide field\"/>\r\n        <div class=\"fourteen wide field\">\r\n            <UnstructuredDataTable             \r\n                totalPages={this.state.totalPages}\r\n                onPageChange={this.handlePageChange.bind(this)}\r\n                page={this.state.page}\r\n                paging={this.state.paging}                \r\n                items={this.state.data} onSelect={this.routeToUnstructuredData.bind(this)}>\r\n            </UnstructuredDataTable>\r\n        </div>\r\n    </div>)\r\n\r\n    }\r\n\r\n    renderSearch()\r\n    {\r\n\r\n        const { search, start, end, match, league, data } = this.state\r\n\r\n        return(<div id=\"container\">\r\n        <form class=\"ui form\">\r\n            <div class=\"inline fields\">\r\n                <div class=\"one wide field\"/>\r\n                <div class=\"fourteen wide field\">\r\n                    <label>\r\n                        Search\r\n                    </label>\r\n                    <div class=\"ui icon input\">\r\n                        <input type=\"text\" name=\"search\" value={search} onChange={this.changeHandler.bind(this)} />\r\n                            <i class=\"search icon\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"inline fields\">\r\n                <div class=\"one wide field\"/>\r\n                <div class=\"eight wide field\">\r\n                    <label>\r\n                        Between\r\n                    </label>\r\n                    <input type=\"date\" name=\"start\" value={start} onChange={this.changeHandler.bind(this)}/>\r\n                    <input type=\"date\" name=\"end\" value={end} onChange={this.changeHandler.bind(this)}/>\r\n                </div>\r\n                <div class=\"six wide field\">\r\n                    <label>\r\n                        Match\r\n                    </label>\r\n                    <input type=\"text\" name=\"match\" value={match} onChange={this.changeHandler.bind(this)} />\r\n                </div>\r\n            </div>\r\n            <div class=\"inline fields\">\r\n                <div class=\"nine wide field\" />\r\n                <div class=\"six wide field\">\r\n                    <label>\r\n                        League\r\n                    </label>\r\n                    <input type=\"text\" name=\"league\" value={league} onChange={this.changeHandler.bind(this)} />\r\n                </div>\r\n            </div>\r\n            \r\n        </form>\r\n    </div>)\r\n\r\n    }\r\n\r\n    /**\r\n     * renders the page\r\n     \r\n    render() {\r\n        if (!this.state.isLoaded) {\r\n            this.load()\r\n            this.state.isLoaded = true;\r\n        }\r\n        \r\n        var test = [\r\n            new UnstructuredData(1, 1, \"some title\", \"some author\", \"some url\", new Date(\"1991-04-20T00:00:00.000Z\"), new Date(\"1991-04-20T00:00:00.000Z\"), \"some data\"),\r\n            new UnstructuredData(2, 1, \"some title really really really really really long title\", \"some author\", \"some url\", new Date(\"1991-04-20T00:00:00.000Z\"), new Date(\"1991-04-20T00:00:00.000Z\"), \"some data\"),\r\n        ];\r\n\t\treturn (\r\n\t\t\t<div className=\"page\">\r\n\t\t\t\t<PageHeader \r\n\t\t\t\t\theader={\"Unstructured Data List\"}\r\n\t\t\t\t\tsidebarVisible={this.props.sidebarVisible}\r\n\t\t\t\t\thandleSidebarClick={this.props.handleSidebarClick}\r\n\t\t\t\t/>\r\n                <Container>\r\n\t\t\t\t\r\n                </Container>\r\n\t\t\t</div>\r\n\t\t);\r\n    }\r\n    */\r\n}\r\n\r\nexport default withRouter(UnstructuredDataList);\r\n","import React, { Component } from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport { StructuredData} from \"../../domain\";\r\nimport DataTable from \"./data-table\"\r\n\r\n/**\r\n * shows a table of structured data \r\n * has the ability to select a row \r\n */\r\nclass StructuredDataTable extends DataTable\r\n{\r\n\r\n    /**\r\n     * constructs a new structured data table\r\n     * data is mandatory however onSelect is optional \r\n     * @param {*} props the props passed in\r\n     */\r\n    constructor(props)\r\n    {\r\n\r\n        super(props);\r\n    }\r\n\r\n    genRows()\r\n    {\r\n\r\n        return this.props.items.map((item, index) => (\r\n            <StructuredDataRow \r\n                key={item.id} \r\n                data={item} \r\n                onSelect={this.state.selectFunc} \r\n                isActive={item.id == this.state.activeRow}\r\n            />\r\n        ))\r\n\r\n    }\r\n\r\n    genHeader()\r\n    {\r\n\r\n        return (<Table.Row>\r\n            <Table.HeaderCell>Date</Table.HeaderCell>\r\n            <Table.HeaderCell>Match</Table.HeaderCell>\r\n            <Table.HeaderCell>Competition</Table.HeaderCell>\r\n        </Table.Row>);\r\n\r\n    }\r\n\r\n    isValidData()\r\n    {\r\n\r\n        if(this.props.items.every((i) => \r\n        {\r\n            let isMatchIdValid = typeof(i.id) === \"number\"\r\n            let isDateValid = i.date instanceof Date;\r\n            let isHomeValid = typeof(i.home) === \"string\";\r\n            let isAwayValid = typeof(i.away) === \"string\";\r\n            let isCompIdValid = typeof(i.competitionID) === \"number\"\r\n            let isCompNameValid = typeof(i.competitionName) === \"string\";\r\n            return isMatchIdValid && isDateValid && isHomeValid && isAwayValid && isCompIdValid && isCompNameValid;\r\n        }) === false)\r\n        {\r\n            throw new Error(\"every piece of data should have valid date, home, away, comp name\");\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Represents a row of the structured data table\r\n * as this component isn't exported no additional validation is done \r\n * by this component \r\n * @param {*} props \r\n */\r\nfunction StructuredDataRow(props)\r\n{\r\n\r\n    if((props.data instanceof StructuredData) == false)\r\n    {\r\n\r\n        throw Error(\"props.data must be an instance of structured data\");\r\n\r\n    }\r\n    \r\n    let date = props.data.date;\r\n\r\n    let dateString = date.getDate() + \"/\" + date.getMonth() + \"/\" + date.getFullYear();\r\n\r\n    let versus = props.data.home + \" vs \" + props.data.away;\r\n\r\n    let selectFunc = props.onSelect != undefined ? props.onSelect : () => {};\r\n\r\n    return(\r\n        <Table.Row onClick={() => selectFunc(props.data)} active={props.isActive}>\r\n            <Table.Cell>{dateString}</Table.Cell>\r\n            <Table.Cell>{versus}</Table.Cell>\r\n            <Table.Cell>{props.data.competitionName}</Table.Cell>\r\n        </Table.Row>\r\n    );\r\n    \r\n}\r\n\r\nexport default StructuredDataTable;","import React, { Component } from 'react';\r\nimport PageHeader from '../page-header.js';\r\nimport StructuredDataTable from \"../tables/structured-data-table\";\r\nimport {bindStructuredData,bindCompetition} from \"../../data-binding\";\r\nimport { Button, Loader, Message, Container, Form, SearchResult} from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ListPage from './list-page.js';\r\nimport {SearchRequest} from \"../../domain\";\r\n\r\nexport class StructuredDataList extends ListPage {\r\n\r\n\tconstructor(props)\r\n\t{\r\n\r\n        super(props)\r\n        \r\n        this.state.headerText = \"Structured Data Page\";\r\n\r\n        this.state.route = \"/structuredDataList\";\r\n\r\n        this.state.isCompLoaded = false;\r\n\r\n\t}\r\n\r\n\r\n\r\n     /**\r\n     * Handles any errors cuased by a sub-component \r\n     * @param {*} error the error recieved\r\n     * @param {*} errorInfo information about the error\r\n     */\r\n    componentDidCatch(error, errorInfo)\r\n    {\r\n\r\n        this.setState({isError: true});\r\n\r\n    }\r\n\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadData(result)\r\n    {\r\n\r\n        let data = result.structuredData.map((d) => bindStructuredData(d));\r\n\r\n        this.setState({data:data,isLoaded: true, isError: false})\r\n\r\n    }\r\n\r\n    genDropDownItems(items,names)\r\n\t{\r\n\r\n\t\treturn items.map((item,index) => \r\n\t\t{\r\n\r\n\t\t\t//taken from https://stackoverflow.com/questions/7225407/convert-camelcasetext-to-sentence-case-text\r\n\t\t\tlet text = names !== undefined ? names[index] : item.replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\").charAt(0).toUpperCase()+item.slice(1).replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\");\r\n\r\n\t\t\treturn {key:item,text:text,value:item};\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadComps()\r\n    {\r\n\r\n        fetch(\"/competitions\")\r\n            .then(res => res.json())\r\n            .then(result => \r\n                {\r\n\r\n                    let data = result.map(r => bindCompetition(r));\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet values = data.map(c => c.id);\r\n\r\n\t\t\t\t\tlet names = data.map(c => c.name);\t\t\t\t\t\r\n\r\n\t\t\t\t\tthis.setState({items:this.genDropDownItems(values,names),isCompLoaded: true})\r\n                })\r\n\r\n    }\r\n\r\n    handleDateSearchChange(name,value,isAfter)\r\n    {\r\n\r\n        if(value == \"\")\r\n        {\r\n\r\n            this.handleSearchChange(name,undefined);\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            let type = isAfter ? \"after\" : \"before\";\r\n            let parsedValue = value.split(\"-\")\r\n\r\n\r\n            let date = new Date(parsedValue[0],parsedValue[1],parsedValue[2]);\r\n        \r\n            this.handleSearchChange(name,new SearchRequest(type,date,\"date\"));\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderSearch()\r\n    {\r\n\r\n        if(this.state.isCompLoaded === false)\r\n        {\r\n        \r\n            this.loadComps();\r\n\r\n        }\r\n\r\n\r\n        return(\r\n            <div>\r\n                <Form.Input\r\n                    placeholder=\"Search\"\r\n                    name=\"search\"\r\n                    icon=\"search\"\r\n                    onChange={(e,{name,value}) => \r\n                            this.handleSearchChange(name,new SearchRequest(\"text\",value,[\"home\",\"away\",\"competitionName\"]))}\r\n                    />\r\n                <Form.Group inline>\r\n                    <Form.Input\r\n                        placeholder=\"before\"\r\n                        label=\"Between\"\r\n                        name=\"after\"\r\n                        type=\"date\"\r\n                        onChange={(e,{name,value}) => \r\n                        this.handleDateSearchChange(name,value,true)}\r\n                        />\r\n                    <Form.Input\r\n                        placeholder=\"after\"\r\n                        name=\"before\"\r\n                        type=\"date\"\r\n                        onChange={(e,{name,value}) => \r\n                        this.handleDateSearchChange(name,value,false)}\r\n                        />\r\n                    <Form.Select\r\n                        label=\"Competition\"\r\n                        name=\"compId\"\r\n                        options={this.state.items}\r\n                        onChange={(e,{name,value}) => this.handleSearchChange(new SearchRequest(\"exact\",value,\"competitionID\"))}\r\n                        />\r\n\r\n\r\n                </Form.Group>\r\n\r\n            </div>)\r\n\r\n    }\r\n\r\n    /**\r\n     * renders the page in loading state \r\n     */\r\n\trenderLoaded()\r\n\t{\r\n\r\n\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p> A list of all structured data. Click on an item to view it in detail </p>\r\n                    <StructuredDataTable \r\n                        totalPages={this.state.totalPages}\r\n                        onPageChange={this.handlePageChange.bind(this)}\r\n                        page={this.state.page}\r\n                        paging={this.state.paging}                \r\n                        onSelect={this.routeToData.bind(this)} \r\n                        items={this.state.data}/>\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n    /**\r\n     * navigates to an edit page with parameters given by inputted edit\r\n     * @param {*} edit the edit inputted \r\n     */\r\n\trouteToData(data)\r\n\t{\r\n\r\n\t\tthis.props.history.push(\"/structured_data_page?id=\" + data.id + \"&isbackable=true\");\r\n\t\t\r\n\t}\r\n\r\n    /**\r\n     * renders the page if the data is still loading \r\n     */\r\n    renderLoading()\r\n    {\r\n\r\n        return(<Loader>Loading Data</Loader>)\r\n\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default withRouter(StructuredDataList);","import React, { Component } from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport DataTable from \"./data-table\";\r\n/**\r\n * shows a table of match data \r\n * has the ability to select a row \r\n */\r\nclass MatchListTable extends DataTable\r\n{\r\n    /**\r\n     * constructs a new match data table\r\n     * data is mandatory however onSelect is optional \r\n     * @param {*} props the props passed in\r\n     */\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n    }\r\n\r\n    genRows()\r\n    {\r\n\r\n        return this.props.items.map((item, index) => (\r\n            <MatchRow \r\n                key={item.id} \r\n                data={item} \r\n                onSelect={this.state.selectFunc} \r\n                isActive={item.id == this.state.activeRow}\r\n            />\r\n        ))\r\n\r\n\r\n    }\r\n\r\n    genHeader()\r\n    {\r\n\r\n        return (<Table.Row>\r\n            <Table.HeaderCell>Date</Table.HeaderCell>\r\n            <Table.HeaderCell>Match</Table.HeaderCell>\r\n            <Table.HeaderCell>Competition</Table.HeaderCell>\r\n        </Table.Row>);\r\n\r\n    }\r\n\r\n    isValidData()\r\n    {\r\n\r\n        if(this.props.items.every((i) => \r\n        {\r\n            let isMatchIdValid = typeof(i.id) === \"number\"\r\n            let isDateValid = i.date instanceof Date;\r\n            let isHomeValid = typeof(i.home) === \"string\";\r\n            let isAwayValid = typeof(i.away) === \"string\";\r\n            let isCompIdValid = typeof(i.competitionID) === \"number\"\r\n            let isCompNameValid = typeof(i.competitionName) === \"string\";\r\n            return isMatchIdValid && isDateValid && isHomeValid && isAwayValid && isCompIdValid && isCompNameValid;\r\n        }) === false)\r\n        {\r\n            throw new Error(\"every piece of data should have valid date, home, away, comp name\");\r\n        }\r\n        \r\n    }\r\n   \r\n}\r\n/**\r\n * Represents a row of the match data table\r\n * as this component isn't exported no additional validation is done \r\n * by this component \r\n * @param {*} props \r\n */\r\nfunction MatchRow(props)\r\n{\r\n    let date = props.data.date;\r\n    let dateString = date.getDate() + \"/\" + (date.getMonth()+1) + \"/\" + date.getFullYear();\r\n    let versus = props.data.home + \" vs \" + props.data.away;\r\n    let selectFunc = props.onSelect != undefined ? props.onSelect : () => {};\r\n    return(\r\n        <Table.Row onClick={() => selectFunc(props.data)} active={props.isActive}>\r\n            <Table.Cell>{dateString}</Table.Cell>\r\n            <Table.Cell>{versus}</Table.Cell>\r\n            <Table.Cell>{props.data.competitionName}</Table.Cell>\r\n        </Table.Row>\r\n    );  \r\n}\r\n\r\nexport default MatchListTable;\r\n","import React, { Component } from 'react';\r\nimport { Container, Form, Input, Loader, Message, Button } from 'semantic-ui-react';\r\nimport MatchListTable from '../tables/match-list-table.js';\r\nimport { bindMatch } from \"../../data-binding\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport ListPage from './list-page.js';\r\n\r\n\r\nclass MatchList extends ListPage {\r\n\r\n\tconstructor(props)\r\n\t{\r\n\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state.headerText = \"Match List\";\r\n\r\n\t\tthis.state.route = \"/matchlist\"\r\n\r\n\t}\r\n\r\n     /**\r\n     * Handles any errors cuased by a sub-component \r\n     * @param {*} error the error recieved\r\n     * @param {*} errorInfo information about the error\r\n     */\r\n    componentDidCatch(error, errorInfo)\r\n    {\r\n\r\n        this.setState({isError: true});\r\n\r\n    }\r\n\r\n\tloadData(result) \r\n\t{\r\n\r\n\t\tconsole.log(result)\r\n\r\n\t\tresult = result.matches.map((d) => bindMatch(d));\r\n\r\n\r\n\r\n\t\tthis.setState({ data: result, isLoaded: true, isError: false });\r\n\r\n\t}\r\n\r\n\trouteToMatch(match) {\r\n\t\tthis.props.history.push(\"/view_match?id=\" + match.id + \"&isbackable=true\");\r\n\t}\r\n\r\n\trenderLoaded()\r\n\t{\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<p> A list of all matches. Click on a match to view it in detail. </p>\t\t\t\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<MatchListTable \r\n\t\t\t\t\t\ttotalPages={this.state.totalPages}\r\n\t\t\t\t\t\tonPageChange={this.handlePageChange.bind(this)}\r\n\t\t\t\t\t\tpage={this.state.page}\r\n\t\t\t\t\t\tpaging={this.state.paging}             \r\n\t\t\t\t\t\tonSelect={this.routeToMatch.bind(this)} \r\n\t\t\t\t\t\titems={this.state.data}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t); \r\n\r\n\t}\r\n\r\n\trenderSearch()\r\n\t{\r\n\r\n\t\treturn(<Form>\r\n\t\t\t<Form.Field>\r\n\t\t\t\t<Input label=\"Search\" type=\"text\" name=\"searchtext\"/> \r\n\t\t\t</Form.Field>\r\n\t\t\t<Form.Group widths=\"equal\">\r\n\t\t\t\t<Form.Field>\r\n\t\t\t\t\t<Input label=\"Between\" type=\"date\" name=\"startdate\" placeholder=\"Start date\"/>\r\n\t\t\t\t</Form.Field>\r\n\t\t\t\t<Form.Field>\r\n\t\t\t\t\t<Input type=\"date\"  name=\"enddate\" placeholder=\"End date\"/>\r\n\t\t\t\t</Form.Field>\r\n\t\t\t\t<Form.Field>\r\n\t\t\t\t\t<Input label=\"Competition\" type=\"text\"  name=\"competition\"/>\r\n\t\t\t\t</Form.Field>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Form.Button \r\n\t\t\t\tonClick={this.submitHandler}\r\n\t\t\t>\r\n\t\t\tSubmit\r\n\t\t\t</Form.Button>\r\n\t\t</Form>)\r\n\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default withRouter(MatchList);\r\n","\r\nimport React from 'react';\r\n\r\n/**\r\n * Creates a simple data pair with a label and a text valued\r\n * passed into the function\r\n * @param {*} props the props passed in, must contain a label and text properties \r\n */\r\nfunction DataPair(props)\r\n{\r\n\r\n    if(props.text === undefined || props.label === undefined)\r\n    {\r\n\r\n        throw new Error(\"text and label must be defined\")\r\n\r\n    }\r\n\r\n    return(\r\n    <div style={{padding:\"0px 15px 0px 15px\"}}>\r\n        <b style={{padding:\"0px 0px 0px 15px\"}}> {props.label}:</b>{props.text}        \r\n    </div>);\r\n\r\n}\r\n\r\nexport default DataPair;","import React, { Component } from 'react';\r\nimport PageHeader from './page-header.js';\r\nimport DataPair from \"./data-pair\"\r\nimport ReactJson from 'react-json-view'\r\nimport {bindStructuredData, bindUnstructureData} from \"../data-binding\";\r\nimport { Button, Loader, Message, Segment, Container, TextArea,Form,Header} from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport UnstructuredDataTable from \"./tables/unstructured-data-table\";\r\n\r\nclass ViewMatch extends Component {\r\n\t\r\n\tconstructor(props)\r\n    {\r\n        \r\n        super(props)\r\n\r\n        //allow passing in of id for testing \r\n        let id = props.id === undefined ? \r\n        new URLSearchParams(props.location.search).get(\"id\") : props.id;\r\n\r\n        if(id === undefined || id === null)\r\n        {\r\n\r\n            throw new Error(\"id must be defined\")\r\n\r\n        }\r\n\r\n        this.state = {unstructuredData: [],data: [],isUnstructuredLoaded: false, isLoaded: false, isError: false, id:id,headerText:\"Loading\"}\r\n\r\n\r\n    }\r\n\r\n\t/**\r\n     * Handles any errors cuased by a sub-component \r\n     * @param {*} error the error recieved\r\n     * @param {*} errorInfo information about the error\r\n     */\r\n    componentDidCatch(error, errorInfo)\r\n    {\r\n\r\n        this.setState({isError: true});\r\n\r\n    }\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadData()\r\n    {\r\n\r\n        fetch(\"/StructuredData?id=\" + this.state.id)\r\n            .then(res => res.json())\r\n            .then(result => \r\n                {\r\n\r\n                    let data = bindStructuredData(result);\r\n\r\n                    let date = data.date;\r\n\r\n                    let dateString = date.getDate() + \"/\" + (date.getMonth()+1) + \"/\" + date.getFullYear();\r\n                    \r\n                    let headerText = data.home + \" vs \" + data.away + \" on \" + dateString; \r\n\r\n\t\t\t\t\tthis.setState({data:data,isLoaded: true, isError: false,headerText: headerText})\r\n                })\r\n            .catch(err => this.setState({isError: true,isLoaded:true}));\r\n\r\n\t}\r\n\t\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadUnstructuredData()\r\n    {\r\n\r\n        fetch(\"/getUnstructuredDataByMatchId?id=\" + this.state.id)\r\n            .then(res => res.json())\r\n            .then(result => \r\n                {\r\n\r\n\t\t\t\t\tconsole.log(result)\r\n\r\n\t\t\t\t\tlet data = result.unstructuredData.map((d) => bindUnstructureData(d));\r\n                \r\n\r\n\t\t\t\t\tconsole.log(data)\r\n\r\n\t\t\t\t\tthis.setState({unstructuredData:data,isUnstructuredLoaded: true, isError: false})\r\n                })\r\n            .catch(err => this.setState({isError: true,isUnstructuredLoaded: true}));\r\n\r\n    }\r\n\r\n    /**\r\n     * loads the data if it is not already loaded\r\n     */\r\n\tloadIfNotAlready()\r\n\t{\r\n\r\n\t\tif(this.state.isLoaded === false)\r\n\t\t{\r\n\r\n\t\t\tthis.loadData();\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tloadUnstructuredIfNotAlready()\r\n\t{\r\n\r\n\t\tif(this.state.isUnstructuredLoaded === false)\r\n\t\t{\r\n\r\n\t\t\tthis.loadUnstructuredData();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trenderLoadedUnstructuredData()\r\n\t{\r\n\r\n\t}\r\n\r\n    /**\r\n     * renders the page in loading state \r\n     */\r\n\trenderLoaded()\r\n\t{\r\n\r\n        let date = this.state.data.date;\r\n\r\n        let dateString = date.getDay() + \"/\" + date.getMonth() + \"/\" + date.getFullYear();\r\n\r\n\t\treturn (\r\n\t\t\t\t\t\t\t\r\n                <div>\r\n                    \r\n                    <Container textAlign=\"left\">\r\n                        <Segment basic size=\"large\"><b>Date:</b>{dateString} <b>Competition:</b>{this.state.data.competitionName}</Segment>\r\n                    \t<Header>Unstructured Data</Header>\r\n\t\t\t\t\t\t<UnstructuredDataTable items={this.state.unstructuredData}/>\r\n\t\t\t\t\t\t<Header>Structured Data</Header>\r\n                        <ReactJson src={this.state.data.data}/>   \r\n                        \r\n                    </Container>\r\n                    \r\n                    \r\n                </div>                  \r\n\t\t\t\t\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t /**\r\n     * Renders the page if an error has occured\r\n     */\r\n    renderError()\r\n    {\r\n\r\n        return(  \r\n        <Message negative>\r\n            <Message.Header>An error has occured</Message.Header>\r\n            <p>Failed to get data from the server.</p>\r\n            <Button color=\"red\" onClick={this.loadData.bind(this)}>Try Again?</Button>\r\n          </Message>\r\n          )\r\n\r\n    }\r\n\r\n    /**\r\n     * navigates to an edit page with parameters given by inputted edit\r\n     * @param {*} edit the edit inputted \r\n     */\r\n\trouteToData(data)\r\n\t{\r\n\r\n\t\tthis.props.history.push(\"/structured_data_page?id=\" + data.id + \"&isbackable=true\");\r\n\t\t\r\n\t}\r\n\r\n    /**\r\n     * renders the page if the data is still loading \r\n     */\r\n    renderLoading()\r\n    {\r\n\r\n        return(<Loader>Loading Data</Loader>)\r\n\r\n    }\r\n    \r\n    /**\r\n     * Chooses which render that should be rendered based on \r\n     * state of the object \r\n     */\r\n    executeRender()\r\n    {\r\n\r\n        if(this.state.isError)\r\n        {\r\n\r\n            return this.renderError();\r\n\r\n        }\r\n        else if(this.state.isLoaded)\r\n        {\r\n\r\n            return this.renderLoaded();\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            return this.renderLoading();\r\n\r\n        }\r\n\r\n    }\r\n\r\n\t\r\n\r\n    /**\r\n     * renders the page \r\n     */\r\n\trender() {\r\n\r\n\t\tthis.loadIfNotAlready();\r\n\r\n\t\tthis.loadUnstructuredIfNotAlready();\r\n\r\n\t\treturn (<div className=\"page\">\r\n\t\t\t<PageHeader \r\n\t\t\t\theader={this.state.headerText}\r\n\t\t\t\tsidebarVisible={this.props.sidebarVisible}\r\n\t\t\t\thandleSidebarClick={this.props.handleSidebarClick}\r\n\t\t\t/>\r\n\t\t\t<br/>\t\t\t\t\t\t\t    \r\n\t\t\t<div id=\"container\" style={{minHeight:\"100vh\"}}>\r\n\t\t\t\t{this.executeRender()}\r\n\t\t\t</div>\r\n\t\t</div>)\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport default withRouter(ViewMatch);\r\n","import {MAX_TITLE_SIZE} from \"./constants\"\r\nimport {UnstructuredData,StructuredData} from \"./domain\"\r\n\r\nfunction summariseStructuredData(data)\r\n{\r\n\r\n    \r\n\r\n    let date = data.date;\r\n\r\n    let dateString = date.getDate() + \"/\" + (date.getMonth()+1) + \"/\" + date.getFullYear();\r\n\r\n    let compName = data.competitionName\r\n\r\n    let versus = data.home + \" vs \" + data.away;\r\n\r\n    return dateString + \" - \" + compName + \" : \" + versus;\r\n\r\n\r\n}\r\n\r\n\r\nfunction summariseUnstructuredData(data)\r\n{\r\n\r\n\r\n    let date = data.published;\r\n\r\n    let dateString = (date.getDate()) + \"/\" + (date.getMonth()+1) + \"/\" + date.getFullYear();\r\n\r\n    let author = data.author;\r\n\r\n    let title = data.title;\r\n\r\n    if(title.length > MAX_TITLE_SIZE)\r\n    {\r\n\r\n        title = title.substring(0,MAX_TITLE_SIZE-3) + \"...\";\r\n\r\n    }\r\n\r\n    return dateString + \" - \" + author + \" : \" + title;\r\n\r\n}\r\n\r\nexport function genSummary(data)\r\n{\r\n\r\n\r\n    if(data === null || data === undefined)\r\n    {\r\n\r\n        return \"Entire Corpus\"\r\n\r\n    }\r\n    if(data instanceof StructuredData)\r\n    {\r\n\r\n        return summariseStructuredData(data);\r\n\r\n    }\r\n    else if(data instanceof UnstructuredData)\r\n    {\r\n\r\n        return summariseUnstructuredData(data)\r\n\r\n    }\r\n    else\r\n    {\r\n\r\n        return \"Entire Corpus\";\r\n\r\n    }\r\n\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Table, Container, Button, Form } from 'semantic-ui-react';\r\nimport { Edit} from \"../../domain\";\r\nimport { genSummary} from \"../../edit-utils\";\r\nimport DataTable from \"./data-table\"\r\n\r\n/**\r\n * shows a table of structured data \r\n * has the ability to select a row \r\n */\r\nclass EditListTable extends DataTable\r\n{\r\n\r\n    /**\r\n     * constructs a new structured data table\r\n     * data is mandatory however onSelect is optional \r\n     * @param {*} props the props passed in\r\n     */\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        let onOrderChangeFunc = undefined\r\n\r\n        if(this.props.onOrderChange != undefined)\r\n        {\r\n            onOrderChangeFunc = (isUp,data) => \r\n            {\r\n                this.props.onOrderChange(isUp,data);\r\n            }\r\n            \r\n        }\r\n        else\r\n        {\r\n            onOrderChangeFunc = () => {};\r\n        }\r\n\r\n        this.state.onOrderChangeFunc = onOrderChangeFunc;\r\n    }\r\n\r\n    genRows()\r\n    {\r\n\r\n\r\n\r\n        return this.props.items.edits.map((item, index) => (\r\n            <EditRow \r\n                key={item.editID} \r\n                data={{edit:item,target:this.props.items.targets[index]}} \r\n                onSelect={this.state.selectFunc} \r\n                onOrderChange={this.state.onOrderChangeFunc}\r\n                isActive={item.id == this.state.activeRow}\r\n            />\r\n        ))\r\n\r\n    }\r\n\r\n    genHeader()\r\n    {\r\n\r\n        return (<Table.Row>\r\n            <Table.HeaderCell>Target</Table.HeaderCell>\r\n            <Table.HeaderCell>Type</Table.HeaderCell>\r\n            <Table.HeaderCell>Summary</Table.HeaderCell>\r\n            <Table.HeaderCell>Order</Table.HeaderCell>\r\n        </Table.Row>)\r\n\r\n    }\r\n\r\n    isValidData()\r\n    {\r\n\r\n       \r\n        //borken into each predicate for easier debugging\r\n        if(this.props.items.edits.every((i) => \r\n        {\r\n            let isEditID = Number.isInteger(i.editID);\r\n            let isTargetValid = i.isCorpus || Number.isInteger(i.structuredDataID) || Number.isInteger(i.unstructuredDataID)\r\n            let isTypeValid = typeof(i.type) == \"string\";\r\n            let isSettingsValid = (typeof(i.settings) == \"object\" && i.type != \"replacewithfield\") || \r\n                (i.type == \"replacewithfield\" && typeof(i.settings) == \"object\" && i.settings !== undefined && i.settings !== null && typeof(i.settings.field) == \"string\");    \r\n            let isReplaceValid = typeof(i.replace) == \"string\";\r\n            let isReplaceWithValid = typeof(i.replaceWith) == \"string\";\r\n            return isEditID && isTargetValid && isTypeValid && isSettingsValid && isReplaceValid && isReplaceWithValid;\r\n        }) === false)\r\n        {\r\n\r\n            throw new Error(\"every piece of data should be a valid edit\");\r\n\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * builds a summary for an edit using it's type and other fields\r\n * @param {*} edit the edit to build a summary for \r\n */\r\nfunction SummaryBuilder(edit)\r\n{\r\n\r\n\r\n    switch(edit.type)\r\n    {\r\n\r\n        case \"replace\":\r\n                return <div><i>Replace: </i> {edit.replace}  <i> - with - </i>  {edit.replaceWith}</div>\r\n\r\n        case \"replacewithfield\":\r\n            return <div><i>Replace: </i> {edit.replace}  <i> - with - </i>  {edit.replaceWith} \r\n                <i> - on field - </i>  {edit.settings.field} </div>\r\n        case \"sequentialreplace\":\r\n                let replaces = edit.replace.split(\",\");\r\n\r\n                let withs = edit.replaceWith.split(\",\");\r\n\r\n                let items = replaces.map((r,index) => (<div>{r} <i> - with - </i> {withs[index]}</div>));\r\n\r\n                if(items.length <= 5)\r\n                {\r\n\r\n                    return <div><i>Replace All: </i> {items}</div>\r\n\r\n                }\r\n                else\r\n                {\r\n\r\n                    items = items.slice(0,5);\r\n\r\n                    return <div><i>Replace All: </i> {items}<div>...</div></div>\r\n\r\n                }\r\n                \r\n        default:\r\n            return \"Error\";\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n/**\r\n * formats the type field of an edit to something more human readable\r\n * @param {*} edit the edit to return the formatted type field to\r\n */\r\nfunction FormatType(edit)\r\n{\r\n\r\n    switch(edit.type)\r\n    {\r\n\r\n        case \"replace\":\r\n            return \"Replace\"\r\n\r\n        case \"replacewithfield\":\r\n            return \"Replace with Field\"\r\n        case \"sequentialreplace\":\r\n            return \"Sequential Replace\"\r\n        default:\r\n            return \"Error\";\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Represents a row of the edit list table\r\n * as this component isn't exported no additional validation is done \r\n * by this component \r\n * @param {*} props \r\n */\r\nfunction EditRow(props)\r\n{\r\n\r\n    if((props.data.edit instanceof Edit) == false)\r\n    {\r\n\r\n        throw Error(\"props.data must be an instance of edit\");\r\n\r\n    }\r\n    \r\n\r\n    let edit = props.data.edit;\r\n\r\n    let target = props.data.target;\r\n\r\n    let selectFunc = props.onSelect != undefined ? props.onSelect : () => {};\r\n\r\n    let orderFunc = props.onOrderChange !== undefined ? props.onOrderChange : () => {};\r\n\r\n    return(\r\n        <Table.Row >\r\n            <Table.Cell onClick={() => selectFunc(props.data.edit)} active={props.isActive}>{genSummary(target)}</Table.Cell>\r\n            <Table.Cell onClick={() => selectFunc(props.data.edit)} active={props.isActive}>{FormatType(edit)}</Table.Cell>\r\n            <Table.Cell onClick={() => selectFunc(props.data.edit)} active={props.isActive}>{SummaryBuilder(edit)}</Table.Cell>\r\n            <Table.Cell>\r\n                <div>\r\n                    <Button onClick={() => orderFunc(true,props.data.edit)}>Up</Button>\r\n                    <Button onClick={() => orderFunc(false,props.data.edit)}>Down</Button>\r\n                </div>\r\n            </Table.Cell>\r\n        </Table.Row>\r\n    );\r\n    \r\n}\r\n\r\nexport default EditListTable;","import React, { Component } from 'react';\r\nimport { Tab, Button, Header, Modal, Loader, Message, Container } from 'semantic-ui-react';\r\nimport StructuredDataTable from './tables/structured-data-table';\r\nimport {StructuredData,UnstructuredData} from \"../domain\";\r\nimport UnstructuredDataTable from \"./tables/unstructured-data-table\";\r\nimport {bindStructuredData,bindUnstructureData} from \"../data-binding\";\r\n\r\n\r\n/**\r\n * Shows all unstructured and structured data and allows the user\r\n * to select a piece of data \r\n */\r\nclass ChooseDataModal extends Component\r\n{ \t\r\n\r\n    constructor(props)\r\n    {\r\n\r\n        super(props);\r\n      \r\n        if(typeof(this.props.onSelect) != \"function\")\r\n        {\r\n\r\n            throw Error(\"Choose Data Modal requires onSelect prop which is a function\")\r\n\r\n        }  \r\n\r\n        this.state = {isLoaded: false,\r\n                    data: undefined,\r\n                    isError: false,\r\n                    lastSelectedId: -1,\r\n                    lastSelectedIsStructued: false,\r\n                    isModalOpen: false,\r\n                    selectedItem: undefined,\r\n                    isNoChooseError: false};\r\n\r\n    }\r\n\r\n    /**\r\n     * Handles any errors cuased by a sub-component \r\n     * @param {*} error the error recieved\r\n     * @param {*} errorInfo information about the error\r\n     */\r\n    componentDidCatch(error, errorInfo)\r\n    {\r\n\r\n        this.setState({isError: true});\r\n\r\n    }\r\n\r\n    /**\r\n     * Loads all unstructured and structured data \r\n     * and binds those objects to structured or unstructured data types \r\n     */\r\n    loadData()\r\n    {\r\n\r\n        fetch(\"/allchooseableData\")\r\n            .then(res => res.json())\r\n            .then(result => \r\n                {\r\n\r\n                    result.structuredData = result.structuredData.map((d) => bindStructuredData(d));\r\n\r\n                    result.unstructuredData = result.unstructuredData.map((d) => bindUnstructureData(d));\r\n\r\n                    this.setState({data:result,isLoaded: true, isError: false});\r\n\r\n                })\r\n            .catch(err => this.setState({isError: true}));\r\n\r\n    }\r\n\r\n    /**\r\n     * handles the click on the choose button\r\n     * will update state to display an error if no item is selected\r\n     */\r\n    handleChooseButtonClick()\r\n    {\r\n\r\n\r\n        if(this.state.lastSelectedId != -1)\r\n        {\r\n\r\n            this.props.onSelect(this.state.selectedItem);\r\n\r\n            this.handleClose();\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            this.setState({isNoChooseError: true});\r\n            \r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * handles the selection of data\r\n     * @param {*} data should be type unstructured or structured data \r\n     */\r\n    handleSelection(data)\r\n    {\r\n\r\n        let isStructured = (data instanceof StructuredData) === true ? true : false;\r\n\r\n        let isSameType = this.state.lastSelectedIsStructued === isStructured;\r\n\r\n        if(isSameType && data.id === this.state.lastSelectedId)\r\n        {\r\n\r\n            this.props.onSelect(data);      \r\n\r\n            this.setState({isModalOpen: false,isNoChooseError: false});\r\n\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            this.setState({lastSelectedIsStructued: isStructured,lastSelectedId: data.id,selectedItem: data});\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Renders the page if the data has been loaded \r\n     */\r\n    renderLoaded()\r\n    {\r\n\r\n        return(<div>\r\n            <Tab menu={{pointing:true}} panes={\r\n            [\r\n                { menuItem: 'Structured Data', \r\n                    render: () => \r\n                        <Tab.Pane>\r\n                        <StructuredDataTable items={this.state.data.structuredData} \r\n                            onSelect={this.handleSelection.bind(this)}/>\r\n                        </Tab.Pane> \r\n                },\r\n                { menuItem: 'Unstructured Data', \r\n                    render: () => <Tab.Pane>\r\n                                <UnstructuredDataTable items={this.state.data.unstructuredData} \r\n                                    onSelect={this.handleSelection.bind(this)} />\r\n                                </Tab.Pane> \r\n                }\r\n\r\n            ]}/>\r\n            <Message warning attached hidden={! this.state.isNoChooseError}>\r\n                Please select an item before clicking choose. You can select an item by clicking on a table row\r\n            </Message>\r\n            <br/>\r\n            <Button primary onClick={this.handleChooseButtonClick.bind(this)}>Choose</Button>\r\n            </div>);\r\n\r\n    }\r\n\r\n    /**\r\n     * Renders the page if an error has occured\r\n     */\r\n    renderError()\r\n    {\r\n\r\n        return(  \r\n        <Message negative>\r\n            <Message.Header>An error has occured</Message.Header>\r\n            <p>Failed to get data from the server.</p>\r\n            <Button color=\"red\" onClick={this.loadData.bind(this)}>Try Again?</Button>\r\n          </Message>\r\n          )\r\n\r\n    }\r\n\r\n    /**\r\n     * renders the page if the data is still loading \r\n     */\r\n    renderLoading()\r\n    {\r\n\r\n        return(<Loader>Loading Data</Loader>)\r\n\r\n    }\r\n    \r\n    /**\r\n     * Chooses which render that should be rendered based on \r\n     * state of the object \r\n     */\r\n    executeRender()\r\n    {\r\n\r\n        if(this.state.isError)\r\n        {\r\n\r\n            return this.renderError();\r\n\r\n        }\r\n        else if(this.state.isLoaded)\r\n        {\r\n\r\n            return this.renderLoaded();\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            return this.renderLoading();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * handles modal opening \r\n     */\r\n    handleOpen(){this.setState({isModalOpen: true})}\r\n\r\n    /**\r\n     * handles the modal closing\r\n     */\r\n    handleClose(){\r\n        this.setState({\r\n            isModalOpen: false,\r\n            lastSelectedId: -1,\r\n            lastSelectedIsStructued: false,\r\n            isNoChooseError: false,\r\n            selectedItem: undefined});}\r\n\r\n\r\n    /**\r\n     * renders the component \r\n     */\r\n    render()\r\n    {\r\n              \r\n        let loadIfNotAlready = () => \r\n        {\r\n\r\n\r\n            if(this.state.isLoaded === false)\r\n            {\r\n\r\n                this.loadData();\r\n\r\n            }\r\n\r\n        }\r\n        \r\n        return (\r\n            <Modal \r\n                closeIcon\r\n                onOpen={loadIfNotAlready.bind(this)}  \r\n                trigger={<Button primary onClick={this.handleOpen.bind(this)}>{this.props.text !== undefined ? this.props.text : \"Change\"}</Button>}\r\n                onClose={this.handleClose.bind(this)}\r\n                open={this.state.isModalOpen}>\r\n                <Modal.Header>Choose Data</Modal.Header>\r\n                <Modal.Content>                                    \r\n                <Modal.Description>\r\n                    <Header>Please select a piece of data to apply the edit to</Header>\r\n                    <br/>\r\n                </Modal.Description>\r\n                    {this.executeRender()}\r\n                </Modal.Content>\r\n            </Modal>\r\n        );\r\n        \r\n\t\r\n    }\r\n}\r\n\r\nexport default ChooseDataModal;","import React, { Component } from 'react';\r\nimport EditListTable from \"../tables/edit-list-table\";\r\nimport {bindEdit, bindUnstructureData, bindStructuredData} from \"../../data-binding\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport ListPage from \"./list-page\"\r\nimport {Form, Container, Loader, Dimmer} from 'semantic-ui-react';\r\nimport {EDIT_TYPES,EDIT_NAMES} from \"../../constants\";\r\nimport DataPair from \"../data-pair\";\r\nimport ChooseDataModal from \"../choose-data-modal\";\r\nimport {SearchRequest} from \"../../domain\"\r\nimport {genSummary} from \"../../edit-utils\";\r\nimport {StructuredData,UnstructuredData} from \"../../domain\";\r\n\r\nexport class EditList extends ListPage {\r\n\r\n\tconstructor(props)\r\n\t{\r\n\r\n\t\tsuper(props)\r\n        \r\n        this.state.headerText = \"Edit List\"\r\n        this.state.route = \"editList\"\r\n        this.state.replaceTypes = this.genDropDownItems(EDIT_TYPES,EDIT_NAMES)\r\n        this.state.isCorpusSearchChecked = undefined; \r\n        this.state.corpusChoices = this.genDropDownItems([true,false],[\"yes\",\"no\"])\r\n        this.state.searchTarget = undefined;\r\n        this.state.unstructuredDataSearches = {};\r\n        this.state.structuredDataSearches ={};\r\n\r\n\t}\r\n\r\n    /**\r\n     * creates the body of a request with three different categories of searches \r\n     */\r\n    genBody()\r\n    {\r\n\r\n        return{editSearches:Object.values(this.state.searches),\r\n                unstructuredDataSearches:Object.values(this.state.unstructuredDataSearches),\r\n                structuredDataSearches:Object.values(this.state.structuredDataSearches) }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * creates a text searches on the edit and it's target\r\n     * @param {*} e not used\r\n     * @param {*} param1 the name and value of the search\r\n     */\r\n    handleTextSearchChange(e,{name,value})\r\n    {\r\n\r\n        this.state.unstructuredDataSearches[name] = new SearchRequest(\"text\",value,[\"author\",\"title\"]);\r\n\r\n        this.state.structuredDataSearches[name] = new SearchRequest(\"text\",value,[\"competitionName\",\"home\",\"away\"])\r\n\r\n        this.handleSearchChange(name,new SearchRequest(\"text\",value,[\"replace\",\"replaceWith\",\"type\"]));\r\n\r\n    }\r\n\r\n    handleOrderChange(isUp,edit)\r\n    {\r\n\r\n        let body = JSON.stringify({isUp:isUp,edit:edit})\r\n\r\n        this.setState({isLoaded:false})\r\n\r\n    \r\n        fetch(\"reorder_edit\",{method:\"POST\",body:body,headers: {\r\n            'Content-Type': 'application/json'\r\n        }}).then(res => \r\n            {\r\n\r\n                if(res.ok)\r\n                {\r\n                    \r\n                    console.log(\"sending request\")\r\n\r\n                    this.sendRequest(this.state.searches);\r\n\r\n                }\t\t\t\t\r\n                else if(res.status == 404)\r\n                {\r\n\r\n                    throw new Error(404);\r\n\r\n                }\r\n                else \r\n                {\r\n\r\n                    throw new Error(500);\r\n\r\n                }\t\t\t\t\r\n\r\n\r\n            }).catch(err => \r\n                {\r\n                    console.log(err)\r\n                    this.setState({isError: true})\r\n                });\r\n\r\n    }\r\n\r\n\t/**\r\n\t * Generates summary text of the target of the edit \r\n\t */\r\n\tgenDataSummaryText()\r\n\t{\t\r\n\r\n        let target = this.state.searchTarget;\r\n\r\n        let summary = genSummary(target)\r\n\r\n\t\treturn summary === \"Entire Corpus\" ? \"No Data Selected\" : summary\r\n\r\n\t}\r\n\r\n\r\n    /**\r\n\t * Generates drop down list items from a list of items (values) and names\r\n\t * @param {*} items the values to be stored in the object\r\n\t * @param {*} names the name of the field \r\n\t */\r\n\tgenDropDownItems(items,names)\r\n\t{\r\n\r\n\t\treturn items.map((item,index) => \r\n\t\t{\r\n\r\n\t\t\t//taken from https://stackoverflow.com/questions/7225407/convert-camelcasetext-to-sentence-case-text\r\n\t\t\tlet text = names !== undefined ? names[index] : item.replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\").charAt(0).toUpperCase()+item.slice(1).replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\");\r\n\r\n\t\t\treturn {key:item,text:text,value:item};\r\n\r\n\t\t})\r\n\r\n    }\r\n    \r\n\r\n    /**\r\n     * handle chosen data by creating a search for that specific piece of data \r\n     * @param {*} chosenData \r\n     */\r\n    handleChosenData(chosenData)\r\n    {\r\n\r\n        this.setState({isCorpusSearchChecked:false,searchTarget:chosenData})\r\n\r\n        if(chosenData instanceof StructuredData)\r\n\t\t{\r\n\r\n\t\t\tthis.handleSearchChange(\"target\",new SearchRequest(\"exact\",chosenData.id,\"structuredDataID\"));\r\n\r\n\t\t}\r\n\t\telse if(chosenData instanceof UnstructuredData)\r\n\t\t{\r\n\r\n\t\t\tthis.handleSearchChange(\"target\",new SearchRequest(\"exact\",chosenData.id,\"unstructuredDataID\"))\r\n\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\r\n\t\t\tthis.setState({isError: true});\r\n\r\n\t\t}\r\n\r\n    }\r\n\r\n     /**\r\n     * Handles any errors cuased by a sub-component \r\n     * @param {*} error the error recieved\r\n     * @param {*} errorInfo information about the error\r\n     */\r\n    componentDidCatch(error, errorInfo)\r\n    {\r\n\r\n        this.setState({isError: true});\r\n\r\n    }\r\n\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadData(result)\r\n    {\r\n\r\n        let editList = result.editList.map((d) => bindEdit(d));\r\n\r\n        let unstructuredData = result.unstructuredData.map((u) => bindUnstructureData(u))\r\n\r\n        let structuredData = result.structuredData.map((u) => bindStructuredData(u)); \r\n\r\n        let allData = structuredData.concat(unstructuredData);\r\n\r\n        let target = [];\r\n\r\n        editList.forEach((e,index) => target[index] = allData\r\n                .find((i) => i.id === e.structuredDataID || i.id === e.unstructuredDataID))\r\n\r\n        this.setState({data:editList,isLoaded: true, isError: false,target: target})               \r\n            \r\n    }\r\n\r\n    /**\r\n     * renders the search component on thep list page \r\n     */\r\n    renderSearch()\r\n    {\r\n\r\n        return(\r\n            <div>\r\n                    \r\n                \r\n                    <Form.Input\r\n                    placeholder=\"search\"\r\n                    name=\"search\"\r\n                    icon=\"search\"\r\n                    onChange={this.handleTextSearchChange.bind(this)}\r\n                    />\r\n                    <Form.Group inline>\r\n                        <Form.Select \r\n                        clearable\r\n                        placeholder='Search by Type'\r\n                        name='type'\r\n                        options={this.state.replaceTypes}\r\n                        label=\"Type:\"                        \r\n                        onChange={(e,{name,value}) => \r\n                            this.handleSearchChange(name,new SearchRequest(\"exact\",value,\"type\"))}\r\n                        />\r\n                        <Form.Select \r\n                        clearable\r\n                        placeholder='yes/no'\r\n                        name='isCorpus'\r\n                        options={this.state.corpusChoices}\r\n                        label=\"Entire Corpus:\"\r\n                        value={this.state.isCorpusSearchChecked}\r\n                        onChange={(e,{name,value}) => \r\n                        {\r\n                            this.setState({isCorpusSearchChecked:value},() => \r\n                            this.handleSearchChange(name,\r\n                                new SearchRequest(\"exact\",value,\"isCorpus\")));                            \r\n                        }}                        \r\n                        />\r\n                        {this.state.isCorpusSearchChecked ? true : <DataPair label=\"Data\" text={this.genDataSummaryText()}/>}\r\n\t\t\t\t\t    {this.state.isCorpusSearchChecked ? true : <ChooseDataModal onSelect={this.handleChosenData.bind(this)}></ChooseDataModal>}\r\n                    </Form.Group>\r\n            </div>\r\n        \r\n                        \r\n        )\r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * renders the page in loading state \r\n     */\r\n\trenderLoaded()\r\n\t{\r\n\r\n        console.log(this.state.data)\r\n\r\n\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p> A list of all edits. Click on an edit to view it in detail </p>\t\t\t\t\r\n\t\t\t\t\t<div id=\"container\">\r\n                            <EditListTable \r\n                            totalPages={this.state.totalPages}\r\n                            onOrderChange={this.handleOrderChange.bind(this)}\r\n                            onPageChange={this.handlePageChange.bind(this)}\r\n                            page={this.state.page}\r\n                            paging={this.state.paging}                        \r\n                            onSelect={this.routeToEdit.bind(this)} \r\n                            items={{edits:this.state.data,targets:this.state.target}}/>\r\n                        \r\n                       \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n\r\n    /**\r\n     * navigates to an edit page with parameters given by inputted edit\r\n     * @param {*} edit the edit inputted \r\n     */\r\n\trouteToEdit(edit)\r\n\t{\r\n\r\n\t\tthis.props.history.push(\"/add_edit?id=\" + edit.editID + \"&isbackable=true\");\r\n\t\t\r\n\t}\r\n\r\n}\r\n\r\nexport default withRouter(EditList);","import React, { Component } from 'react';\r\nimport { Form, Container, Button, Message} from 'semantic-ui-react'\r\nimport ChooseDataModal from \"./choose-data-modal\";\r\nimport {bindEdit,bindStructuredData,bindUnstructureData} from \"../data-binding\";\r\nimport {Edit,StructuredData,UnstructuredData} from \"../domain\";\r\nimport {STRUCTURED_DATA_FIELDS,EDIT_TYPES,EDIT_NAMES} from \"../constants\"\r\nimport DataPair from \"./data-pair\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport {genSummary} from \"../edit-utils\";\r\n\r\n/**\r\n * An edit form which for creating and editing edits\r\n */\r\nexport class EditForm extends Component {\r\n\r\n\t/**\r\n\t * Creates a new edit form\r\n\t * @param {*} props id if passed in must be a number, data may be passed and should be\r\n\t * an instance of edit \r\n\t */\r\n\tconstructor(props)\r\n\t{\r\n\r\n\t\tsuper(props)\t\r\n\r\n\t\tlet id = Number.parseInt(props.id)\r\n\t\r\n\t\tif(this.props.id !== undefined && this.props.id !== null && Number.isInteger(id) === false)\r\n\t\t{\r\n\r\n\t\t\tthrow new Error(\"Id must be a number\");\r\n\r\n\t\t}\r\n\r\n\t\tif(props.data !== undefined && (props.data instanceof Edit) === false )\r\n\t\t{\r\n\r\n\t\t\tthrow new Error(\"inputted data must be of type edit\");\r\n\r\n\t\t}\r\n\t\t\r\n\t\tthis.state = {data: props.data,\r\n\t\t\ttarget: props.target,\r\n\t\t\tqueryId:id,\r\n\t\t\tisNew:(this.props.id === undefined || this.props.id === null) && props.data === undefined,\r\n\t\t\tisMissing:false,\r\n\t\t\tisError:false,\r\n\t\t\thasData: props.data !== undefined,\r\n\t\t\tisSaveSuccessful: false,\r\n\t\t\treplaceTypes: this.genDropDownItems(EDIT_TYPES,EDIT_NAMES),\r\n\t\t\tfieldTypes: this.genDropDownItems(STRUCTURED_DATA_FIELDS),\r\n\t\t\tisSaving: false,\r\n\t\t\t//validation state properties \r\n\t\t\tisSaveAttempted: false,\r\n\t\t\tisValid: {settings:{}}\r\n\t\t\t}\t\r\n\r\n\r\n\t\tif(this.state.isNew)\r\n\t\t{\r\n\r\n\t\t\tthis.state.data = new Edit(null,null,null,false,{},\"\",\"\",\"\")\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t//********************** GENERATORS **********************//\r\n\r\n\t/**\r\n\t * Generates drop down list items from a list of items (values) and names\r\n\t * @param {*} items the values to be stored in the object\r\n\t * @param {*} names the name of the field \r\n\t */\r\n\tgenDropDownItems(items,names)\r\n\t{\r\n\r\n\t\treturn items.map((item,index) => \r\n\t\t{\r\n\r\n\t\t\t//taken from https://stackoverflow.com/questions/7225407/convert-camelcasetext-to-sentence-case-text\r\n\t\t\tlet text = names !== undefined ? names[index] : item.replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\").charAt(0).toUpperCase()+item.slice(1).replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\");\r\n\r\n\t\t\treturn {key:item,text:text,value:item};\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Generates error messages if the field is in an error state\r\n\t * @param {*} value the value to check (key)\r\n\t * @param {*} message the message if in error state\r\n\t */\r\n\tgenIsError(value,message)\r\n\t{\r\n\r\n\t\r\n\r\n\t\tlet {isValid,isSaveAttempted} = this.state;\t\t\r\n\r\n\t\tif(isValid[value] === undefined || isValid[value] === true || isSaveAttempted === false )\r\n\t\t{\t\r\n\r\n\t\t\treturn undefined;\r\n\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\r\n\t\t\treturn {content:message}\t\t\t\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generate error message if a field in the setting is in an erro state\r\n\t * @param {*} value the value in the settings (key)\r\n\t * @param {*} message the message to be rendered if in an error state \r\n\t */\r\n\tgenIsErrorSettings(value,message)\r\n\t{\r\n\r\n\t\tlet {isValid,isSaveAttempted} = this.state; \r\n\r\n\t\tif((isValid[\"settings\"] === undefined || isValid[\"settings\"][value]  || isValid[\"settings\"][value]) || isSaveAttempted === false)\r\n\t\t{\r\n\r\n\t\t\treturn undefined;\r\n\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\r\n\t\t\treturn {content:message}\t\t\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Generates summary text of the target of the edit \r\n\t */\r\n\tgenDataSummaryText()\r\n\t{\r\n\r\n\t\tlet target = this.state.target;\r\n\r\n\t\tlet summary = genSummary(target)\r\n\r\n\t\treturn summary === \"Entire Corpus\" ? \"No Data Selected\" : summary\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * updates the settings fields based\r\n\t * ont the type of edit \r\n\t * @param {*} edit \r\n\t */\r\n\tupdateSettingsOnTypeChange(edit)\r\n\t{\r\n\r\n\t\tswitch(edit.type)\r\n\t\t{\r\n\r\n\t\t\tcase \"replace\":\r\n\t\t\t\tdelete edit.settings.field;\r\n\t\t\t\treturn;\r\n\r\n\t\t\tcase \"replacewithfield\":\r\n\t\t\t\tedit.settings.field = undefined;\r\n\t\t\t\treturn; \r\n\t\t\t\r\n\r\n\t\t}\r\n\r\n\t}\r\n\t//********************** Validation **********************//\r\n\r\n\t/**\r\n\t * Checks if an edit has valid properties.\r\n\t * Adds the isValid object which lists for each property if it\r\n\t * is valid or invalid\r\n\t * @param {*} edit the edit to validate \r\n\t */\r\n\tisEditValid(edit)\r\n\t{\r\n\t\r\n\t\tlet isValidObj = {};\t\t\r\n\r\n\t\tlet isValid = true;\r\n\r\n\t\tObject.keys(edit).forEach((item) => \r\n\t\t{\r\n\r\n\t\t\tlet isFieldValid = this.isFieldValid(edit,item);\r\n\r\n\t\t\tisValidObj[item] = isFieldValid;\r\n\r\n\t\t\tisValid = isValid ? isFieldValid : false;\r\n\r\n\t\t})\r\n\t\r\n\t\t//weird implementation detail\r\n\t\t//but the validity of the setting object is overwritten\r\n\t\t//but if it's not valid then the next operation is skipped \r\n\t\t//and it returns false anyway. \r\n\t\tisValidObj.settings = {};\r\n\r\n\t\tif(edit.settings === undefined || edit.settings === null)\r\n\t\t{\r\n\r\n\t\t\tedit.settings = {};\r\n\r\n\t\t}\r\n\r\n\t\tObject.keys(edit.settings).forEach((item) => \r\n\t\t{\r\n\r\n\t\t\tlet isSettingValid = this.isSettingValid(edit,item);\r\n\r\n\t\t\tisValidObj.settings[item] = true;\r\n\r\n\t\t\tisValid = isValid ? isSettingValid : false; \r\n\r\n\t\t})\r\n\r\n\t\tthis.setState({isValid:isValidObj})\r\n\r\n\t\treturn isValid; \r\n\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a field is valid \r\n\t * @param {*} edit the edit to validate the field for\r\n\t * @param {*} field the name of the property \r\n\t */\r\n\tisFieldValid(edit,field)\r\n\t{\r\n\r\n\t\tlet value = edit[field];\r\n\r\n\t\tlet validateText = (t) => \r\n\t\t{\r\n\r\n\t\t\treturn t.length > 0; \r\n\r\n\t\t}\r\n\r\n\t\tswitch(field)\r\n\t\t{\r\n\r\n\t\t\tcase \"replace\":\r\n\t\t\t\treturn validateText(value);\r\n\r\n\t\t\tcase \"type\":\r\n\t\t\t\treturn EDIT_TYPES.includes(value);\r\n\r\n\t\t\tcase \"isCorpus\":\r\n\t\t\t\treturn (value === true && edit.structuredDataID == null && edit.unstructuredDataID == null) ||\r\n\t\t\t\t\tvalue === false && (Number.isInteger(edit.structuredDataID) || Number.isInteger(edit.unstructuredDataID));\r\n\r\n\t\t\tcase \"replaceWith\":\r\n\t\t\t\treturn validateText(value);\r\n\t\t\t\r\n\t\t\tcase \"editID\":\r\n\t\t\t\treturn Number.isInteger(value) || value === undefined || value === null;\r\n\t\t\t\r\n\t\t\tcase \"settings\": \r\n\t\t\t\treturn typeof(value) === \"object\";\r\n\r\n\t\t\tcase \"structuredDataID\":\r\n\t\t\t\treturn (Number.isInteger(value) && edit.unstructuredDataID === null && edit.isCorpus === false) ||\r\n\t\t\t\t\tvalue === null && (edit.isCorpus || Number.isInteger(edit.unstructuredDataID));\t\t\t\t\r\n\r\n\t\t\tcase \"unstructuredDataID\":\r\n\t\t\t\t\treturn (Number.isInteger(value) && edit.structuredDataID === null && edit.isCorpus === false) ||\r\n\t\t\t\t\tvalue === null && (edit.isCorpus || Number.isInteger(edit.structuredDataID));\r\n\r\n\t\t\tcase \"order\":\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\t\treturn false; \r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * checks if a field on the settings is valid\r\n\t * @param {*} edit the edit to validate\r\n\t * @param {*} field the field to validate \r\n\t */\r\n\tisSettingValid(edit,field)\r\n\t{\t\r\n\r\n\t\tlet value = edit.settings[field];\r\n\r\n\t\tswitch(field)\r\n\t\t{\r\n\r\n\t\t\tcase \"field\":\r\n\t\t\t\treturn STRUCTURED_DATA_FIELDS.includes(value);\r\n\t\t\t\r\n\t\t\tcase \"fields\":\r\n\t\t\t\treturn value.every((f) => STRUCTURED_DATA_FIELDS.includes(f));\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t//********************** HANDLERS **********************//\r\n\r\n\t/**\r\n\t * handles changes in text inputs or drop downs\r\n\t * @param {*} e not used\r\n\t * @param {*} param1 the name and value of the control\r\n\t */\r\n\thandleChange(e, { name, value })\r\n\t{\r\n\r\n\t\tlet data = this.state.data; \r\n\r\n\t\tdata[name] = value;\r\n\r\n\t\tthis.updateSettingsOnTypeChange(data);\r\n\r\n\t\tthis.state.isValid[name] = this.isFieldValid(data,name);\r\n\r\n\t\tthis.setState({ data: data, isValid:this.state.isValid });\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles changes in the settings \r\n\t * @param {*} e not used\r\n\t * @param {*} param1 the name and value of the control \r\n\t */\r\n\thandleSettingChange(e,{name, value})\r\n\t{\r\n\r\n\t\tlet data = this.state.data; \r\n\r\n\t\tdata.settings[name] = value;\r\n\r\n\t\tthis.state.isValid.settings[name] = this.isSettingValid(data,name);\r\n\r\n\t\tthis.setState({ data: data, isValid:this.state.isValid })\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * handles changes in the isCorpus text box \r\n\t */\r\n\thandleChecked()\r\n\t{\r\n\r\n\t\tlet data = this.state.data;\r\n\r\n\t\tdata.isCorpus = ! data.isCorpus\r\n\r\n\t\tif(data.isCorpus)\r\n\t\t{\r\n\r\n\t\t\tdata.unstructuredDataID = null;\r\n\r\n\t\t\tdata.structuredDataID = null;\r\n\r\n\t\t}\r\n\r\n\t\tthis.state.isValid.isCorpus = this.isFieldValid(data,\"isCorpus\");\r\n\r\n\t\tthis.setState({data:data,isValid:this.state.isValid,target:undefined})\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles choosing data in the data choosing modal\r\n\t * @param {*} chosenData the choosen data \r\n\t */\r\n\thandleChosenData(chosenData)\r\n\t{\r\n\r\n\t\tlet edit = this.state.data;\r\n\r\n\t\t//reset\r\n\t\tedit.structuredDataID = null;\r\n\r\n\t\tedit.unstructuredDataID = null;\r\n\r\n\t\tif(chosenData instanceof StructuredData)\r\n\t\t{\r\n\r\n\t\t\tedit.structuredDataID = chosenData.id;\r\n\r\n\t\t}\r\n\t\telse if(chosenData instanceof UnstructuredData)\r\n\t\t{\r\n\r\n\t\t\tedit.unstructuredDataID = chosenData.id;\r\n\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\r\n\t\t\tthis.setState({isError: true});\r\n\r\n\t\t}\r\n\r\n\t\tthis.state.isValid.isCorpus = this.isFieldValid(edit,\"isCorpus\");\r\n\r\n\r\n\t\tthis.setState({data:edit,isValid:this.state.isValid,target: chosenData});\r\n\r\n\t}\r\n\r\n\t//********************** SERVER COMMUNICATION **********************//\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadData()\r\n    {\r\n\r\n        fetch(\"/edit?id=\" + this.state.queryId )\r\n\t\t\t.then(res => \r\n\t\t\t\t{\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(res.ok)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn res.json()\r\n\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t\telse if(res.status == 404)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\tthrow new Error(404);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse \r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\tthrow new Error(500);\r\n\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t})\r\n            .then(result => \r\n                {\r\n\t\t\t\t\tlet edit = bindEdit(result.edit);\r\n\r\n\t\t\t\t\tlet unstructuredData = result.unstructuredData !== undefined && result.unstructuredData !== null\r\n\t\t\t\t\t\t? bindUnstructureData(result.unstructuredData) : undefined;\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet structuredData = result.structuredData !== undefined && result.structuredData !== null\r\n\t\t\t\t\t\t ? bindStructuredData(result.structuredData) : undefined;\r\n\r\n\t\t\t\t\tlet target = unstructuredData === undefined ? structuredData : unstructuredData;\r\n\r\n\t\t\t\t\tthis.setState({data:edit,hasData:true,isError:false,target: target})\r\n                })\r\n            .catch(err => {\r\n\r\n\t\t\t\t\r\n\t\t\t\tswitch(err.message)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\r\n\t\t\t\t\tcase \"404\":\r\n\t\t\t\t\t\tif(! this.state.isMissing)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.setState({isMissing: true })\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\tdefault: \r\n\t\t\t\t\t\tif(! this.state.isError)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.setState({isError: true})\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Saves the data. Post if a new edit, put if an old edit \r\n\t */\r\n\tsaveData()\r\n\t{\r\n\r\n\t\tconsole.log(\"saving\")\r\n\r\n\t\tlet method = this.state.isNew ? \"POST\" : \"PUT\";\r\n\r\n\t\tif(this.isEditValid(this.state.data))\r\n\t\t{\r\n\t\t\tconsole.log(\"savingss\")\r\n\t\t\tthis.setState({isSaving: true})\r\n\r\n\t\t\tfetch(\"/edit\",\r\n\t\t\t{method: method,\r\n\t\t\tbody: JSON.stringify(this.state.data),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}}).then((res) => \r\n\t\t\t{\r\n\r\n\t\t\t\tconsole.log(\"response\")\r\n\r\n\t\t\t\tif(res.ok)\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tif(this.state.isNew)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\tthis.setState({data:new Edit(null,null,null,false,{},\"\",\"\",\"\"),isSaveSuccessful:true,isSaveAttempted:false,isSaving:false})\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\tthis.props.history.goBack();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({isError: true,hasData: false,isSaving: false });\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\r\n\t\t\tthis.setState({isSaveAttempted: true});\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sends a delete request for the data \r\n\t */\r\n\tdeleteData()\r\n\t{\r\n\r\n\t\tfetch(\"/edit?id=\" + this.state.data.editID,\r\n\t\t\t{method: \"DELETE\",\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}}).then((res) => \r\n\t\t\t{\r\n\r\n\t\t\t\tif(res.ok)\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tthis.props.history.goBack();\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({isError: true,hasData: false});\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n    /**\r\n     * loads the data if it is not already loaded\r\n     */\r\n\tloadIfNotAlready()\r\n\t{\r\n\r\n\t\tif(this.state.hasData === false && this.state.isNew === false)\r\n\t\t{\r\n\t\t\r\n\t\t\tthis.loadData();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\t//********************** RENDERS COMMUNICATION **********************//\r\n\r\n\t/**\r\n\t * Renders the extra fields for the replace with field type of edit \r\n\t */\r\n\trenderReplaceFieldOptions()\r\n\t{\r\n\r\n\t\tif(this.state.data.type == \"replacewithfield\")\r\n\t\t{\r\n\r\n\t\t\treturn(<Form.Group inline>\r\n\t\t\t\t\t\t<Form.Select \r\n\t\t\t\t\t\terror={this.genIsErrorSettings(\"field\",\"Please select a field\")}\r\n\t\t\t\t\t\tplaceholder='Choose Field'\r\n\t\t\t\t\t\tname='field'\r\n\t\t\t\t\t\toptions={this.state.fieldTypes}\r\n\t\t\t\t\t\tvalue={this.state.data.settings.field}\r\n\t\t\t\t\t\tlabel=\"Field:\"\r\n\t\t\t\t\t\tonChange={this.handleSettingChange.bind(this)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t   </Form.Group>)\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Renders the extra fields for the sequential replace if the target is not unstructured data \r\n\t */\r\n\trenderSeqReplaceFieldOptions()\r\n\t{\r\n\r\n\t\tif(this.state.data.type == \"sequentialreplace\" && (this.state.target == undefined || this.state.target instanceof StructuredData))\r\n\t\t{\r\n\r\n\t\t\tif(this.state.data.settings.fields == undefined)\r\n\t\t\t{\r\n\r\n\t\t\t\tthis.state.data.settings.fields = []\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn(<div>\r\n\t\t\t\t\t<Form.Group inline>\r\n\t\t\t\t\t\t<Form.Select \r\n\t\t\t\t\t\tmultiple selection \r\n\t\t\t\t\t\terror={this.genIsErrorSettings(\"field\",\"Please select a field\")}\r\n\t\t\t\t\t\tplaceholder='Choose Field'\r\n\t\t\t\t\t\tname='fields'\r\n\t\t\t\t\t\toptions={this.state.fieldTypes}\r\n\t\t\t\t\t\tvalue={this.state.data.settings.fields}\r\n\t\t\t\t\t\tlabel=\"Fields:\"\r\n\t\t\t\t\t\tonChange={this.handleSettingChange.bind(this)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t   </Form.Group>\r\n\t\t\t\t   {this.renderSeqReplaceFieldWarningMessage()}\r\n\t\t\t\t   </div>)\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders a warning if you select fields on a entire corpus edit informing the user \r\n\t * that this means the edit will only be applied to structured data \r\n\t */\r\n\trenderSeqReplaceFieldWarningMessage()\r\n\t{\r\n\r\n\r\n\r\n\t\tif(Array.isArray(this.state.data.settings.fields) && this.state.data.settings.fields.length > 0 && this.state.data.isCorpus)\r\n\t\t{\r\n\t\t\treturn(<Message warning visible>\r\n\t\t\t\t\tWhen you select a field on this type of edit, it means that the edit will only apply to structured data (matches)\r\n\t\t\t\t   </Message>)\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n     * renders the page in loading state \r\n     */\r\n\trenderHasData()\r\n\t{\r\n\r\n\t\tlet isCorpus = this.state.data.isCorpus;\r\n\r\n\t\treturn(<Container>\r\n\t\t\t<Form size={\"large\"} loading={this.state.isSaving || (! this.state.hasData && ! this.state.isNew)} >\r\n\t\t\t\t<Form.Group inline>\r\n\t\t\t\t\t<Form.Select \r\n\t\t\t\t\terror={this.genIsError(\"type\",\"Please select a type\")}\r\n\t\t\t\t\tplaceholder='Choose Type'\r\n\t\t\t\t\tname='type'\r\n\t\t\t\t\toptions={this.state.replaceTypes}\r\n\t\t\t\t\tvalue={this.state.data.type}\r\n\t\t\t\t\tlabel=\"Type:\"\r\n\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Checkbox\r\n\t\t\t\t\terror={this.genIsError(\"isCorpus\",\"Please tick apply to corpus or choose data\")}\r\n\t\t\t\t\tname=\"isCorpus\"\r\n\t\t\t\t\tlabel = \"Apply to Entire Corpus\"\r\n\t\t\t\t\tchecked={this.state.data.isCorpus}\r\n\t\t\t\t\tonChange={this.handleChecked.bind(this)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{isCorpus ? undefined : <DataPair label=\"Data\" text={this.genDataSummaryText()}/>}\r\n\t\t\t\t\t{isCorpus ? undefined : <ChooseDataModal onSelect={this.handleChosenData.bind(this)}></ChooseDataModal>}\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group inline>\r\n\t\t\t\t\t<Form.Input\r\n\t\t\t\t\terror={this.genIsError(\"replace\",\"Please enter text to replace\")}\r\n\t\t\t\t\tplaceholder=\"text\"\r\n\t\t\t\t\tname=\"replace\"\r\n\t\t\t\t\tlabel=\"Replace:\"\r\n\t\t\t\t\tvalue={this.state.data.replace}\r\n\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Input\r\n\t\t\t\t\terror={this.genIsError(\"replaceWith\",\"Please enter text to replace with \")}\r\n\t\t\t\t\tplaceholder=\"text\"\r\n\t\t\t\t\tname=\"replaceWith\"\r\n\t\t\t\t\tlabel=\"with\"\r\n\t\t\t\t\tvalue={this.state.data.replaceWith}\r\n\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t{this.renderReplaceFieldOptions()}\r\n\t\t\t\t{this.renderSeqReplaceFieldOptions()}\r\n\t\t\t\t<Form.Group widths=\"equal\">\r\n\t\t\t\t\t<Button primary onClick={this.saveData.bind(this)}> Save </Button>\r\n\t\t\t\t\t{this.state.isNew ? \"\" : <Button negative onClick={this.deleteData.bind(this)}> Delete </Button>}\r\n\t\t\t\t</Form.Group>\t\t\t\t\t\r\n\t\t\t</Form>\t\t\t\t\t\t\r\n\t\t</Container>);\r\n\r\n\t}\r\n\r\n\r\n\t /**\r\n     * Renders the page if an error has occured\r\n     */\r\n    renderErrorWithoutData()\r\n    {\r\n\r\n        return(  \r\n        <Message negative>\r\n            <Message.Header>An error has occured</Message.Header>\r\n            <p>Failed to get data from the server.</p>\r\n            <Button color=\"red\" onClick={this.loadData.bind(this)}>Try Again?</Button>\r\n          </Message>\r\n          )\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * renders the erorr message if it has data already \r\n\t */\r\n    renderErrorWithData()\r\n    {\r\n\r\n        return(  \r\n        <Message negative>\r\n            <Message.Header>An error has occured</Message.Header>\r\n            <p>Something has gone wrong! Reloading the page may fix the issue</p>\r\n          </Message>\r\n          )\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the 404 error message \r\n\t */\r\n\trenderMissing()\r\n\t{\r\n\r\n\t\treturn(  \r\n\t\t\t<Message warning>\r\n\t\t\t\t<Message.Header>We couldn't find what you are looking for </Message.Header>\r\n\t\t\t\t<p>404: We tried really hard and couldn't find the data you wanted :(</p>\r\n\t\t\t  </Message>\r\n\t\t\t  )\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders a successful save message \r\n\t */\r\n\trenderSaveSuccessful()\r\n\t{\r\n\r\n\t\tif(this.state.isSaveSuccessful)\r\n\t\t{\r\n\r\n\t\t\treturn(<Message positive>\r\n\t\t\t\t\t\t<Message.Header>Successfully added an edit to the corpus!</Message.Header>\r\n\t\t\t\t   </Message>)\r\n\r\n\t\t}\r\n\r\n\t}\r\n    /**\r\n     * renders the page if the data is still loading \r\n     */\r\n\r\n\t/**\r\n     * Chooses which render that should be rendered based on \r\n     * state of the object \r\n     */\r\n    executeRender()\r\n    {\r\n\r\n\t\tif((this.state.isNew || this.state.hasData) && this.state.isError )\r\n\t\t{\r\n\r\n\t\t\treturn this.renderErrorWithData();\r\n\r\n\t\t}\r\n\t\tif(this.state.isMissing)\r\n\t\t{\r\n\r\n\t\t\treturn this.renderMissing();\r\n\r\n\t\t}\r\n        else if(this.state.isError)\r\n        {\r\n\r\n            return this.renderErrorWithoutData();\r\n\r\n\t\t}\r\n        else if(this.state.hasData || this.state.isNew)\r\n        {\r\n\r\n            return this.renderHasData();\r\n\r\n        }\r\n\r\n    }\r\n\r\n\t/**\r\n\t * renders the component \r\n\t */\r\n\trender() {\r\n\r\n\t\t\r\n\r\n\t\tthis.loadIfNotAlready()\r\n\r\n\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{this.executeRender()}\r\n\t\t\t\t\t{this.renderSaveSuccessful()}\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default withRouter(EditForm);","import React from 'react';\r\nimport PageHeader from './page-header.js';\r\nimport { withRouter } from 'react-router-dom';\r\nimport EditForm from \"./edit-form\"\r\n\r\n\r\n/**\r\n * The page for adding an edit \r\n * @param {*} props should only be passed in for testing purposes \r\n */\r\nexport function AddEdit(props) \r\n{\r\n\r\n\r\n\t//allow passing in of id for testing \r\n\tlet id = props.id === undefined ? \r\n\t\tnew URLSearchParams(props.location.search).get(\"id\") : props.id;\r\n\r\n\tlet isNew = ! (id === undefined || id === null);\r\n\r\n\tlet headerText = isNew ? \"Create new Edit\" : \"View Edit\";\r\n\r\n\t//data prop should always be undefined in production\r\n\t//passed in testing purposes \r\n\treturn (\r\n\t\t<div className=\"page\">\r\n\t\t\t<PageHeader \r\n\t\t\t\theader={headerText}\r\n\t\t\t\tsidebarVisible={props.sidebarVisible}\r\n\t\t\t\thandleSidebarClick={props.handleSidebarClick}\r\n\t\t\t/>\r\n\t\t\t<div id=\"container\" style={{minHeight:\"100vh\"}}>\r\n\t\t\t\t<EditForm id={id} data={props.data} target={props.target}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default withRouter(AddEdit);","import React, { Component } from 'react';\r\nimport PageHeader from './page-header.js';\r\nimport { Button, Loader, Message, Segment, Container, TextArea,Form} from 'semantic-ui-react';\r\nimport {bindCompetition} from \"../data-binding\"\r\nimport {ImportRequest} from \"../domain\";\r\n\r\nclass ImportStructuredData extends Component {\r\n\r\n\tconstructor(props)\r\n    {\r\n        \r\n        super(props)\r\n\r\n        this.state = {items: [],isSaving: false, isLoaded: false,isImportSuccessful: false, isError: false, request: new ImportRequest() }\r\n\r\n\r\n    }\r\n\r\n\tgenDropDownItems(items,names)\r\n\t{\r\n\r\n\t\treturn items.map((item,index) => \r\n\t\t{\r\n\r\n\t\t\t//taken from https://stackoverflow.com/questions/7225407/convert-camelcasetext-to-sentence-case-text\r\n\t\t\tlet text = names !== undefined ? names[index] : item.replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\").charAt(0).toUpperCase()+item.slice(1).replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\");\r\n\r\n\t\t\treturn {key:item,text:text,value:item};\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadData()\r\n    {\r\n\r\n        fetch(\"/competitions\")\r\n            .then(res => res.json())\r\n            .then(result => \r\n                {\r\n\r\n                    let data = result.map(r => bindCompetition(r));\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet values = data.map(c => c.id);\r\n\r\n\t\t\t\t\tlet names = data.map(c => c.name);\t\t\t\t\t\r\n\r\n\t\t\t\t\tthis.setState({items:this.genDropDownItems(values,names),isLoaded: true, isError: false})\r\n                })\r\n            .catch(err => this.setState({isError: true}));\r\n\r\n    }\r\n\r\n\tloadIfNotAlready()\r\n\t{\r\n\r\n\t\tif(this.state.isLoaded === false && this.state.isError === false)\r\n\t\t{\r\n\r\n\t\t\tthis.loadData();\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\thandleChange(e, { name, value })\r\n\t{\r\n\r\n\t\tlet request = this.state.request; \r\n\r\n\t\tif(name === \"begin\" || name === \"end\")\r\n\t\t{\r\n\r\n\t\t\tlet dateParts = value.split(\"-\")\r\n\r\n\t\t\tvalue = new Date(dateParts[0],Number.parseInt(dateParts[1])-1,dateParts[2],0,0,0,0);\r\n\r\n\t\t}\r\n\r\n\t\trequest[name] = value;\r\n\r\n\r\n\t\tthis.setState({ request: request});\t\t\r\n\r\n\t}\r\n\r\n\tsaveData()\r\n\t{\r\n\r\n\t\t\tthis.setState({isSaving: true})\r\n\r\n\t\t\tfetch(\"/importdata\",\r\n\t\t\t{method: \"POST\",\r\n\t\t\tbody: JSON.stringify(this.state.request),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}}).then((res) => \r\n\t\t\t{\r\n\r\n\t\t\t\tif(res.ok)\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tthis.setState({isSaving: false, isError: false,isImportSuccessful: true},() => console.log(this.state))\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({isError: true});\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\r\n\t}\r\n\r\n\trenderErrorMessage()\r\n\t{\r\n\r\n\t\tif(this.state.isError)\r\n\t\t{\r\n\r\n\t\t\treturn(  \r\n\t\t\t\t<Message negative>\r\n\t\t\t\t\t<Message.Header>An error has occured</Message.Header>\r\n\t\t\t\t\t<p>Something has gone wrong! Reloading the page may fix the issue</p>\r\n\t\t\t\t  </Message>\r\n\t\t\t\t  )\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trenderSuccessMessage()\r\n\t{\r\n\r\n\r\n\t\tif(this.state.isImportSuccessful)\r\n\t\t{\r\n\r\n\t\t\treturn(<Message positive>\r\n\t\t\t\t<Message.Header>Successfully imported data into the corpus!</Message.Header>\r\n\t\t   </Message>)\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.loadIfNotAlready();\r\n\t\treturn (\r\n\t\t\t<div className=\"page\">\r\n\t\t\t\t<PageHeader \r\n\t\t\t\t\theader={\"Import Structured Data\"}\r\n\t\t\t\t\tsidebarVisible={this.props.sidebarVisible}\r\n\t\t\t\t\thandleSidebarClick={this.props.handleSidebarClick}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"container\" style={{height:\"100vh\"}}>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Form loading={! this.state.isLoaded || this.state.isSaving}>\r\n\t\t\t\t\t\t\t<Form.Group inline>\r\n\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\tplaceholder=\"dd/mm/yyyy\"\r\n\t\t\t\t\t\t\t\tname=\"begin\"\r\n\t\t\t\t\t\t\t\tlabel=\"Begin:\"\r\n\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\tplaceholder=\"dd/mm/yyyy\"\r\n\t\t\t\t\t\t\t\tname=\"end\"\r\n\t\t\t\t\t\t\t\tlabel=\"End:\"\r\n\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Form.Select\r\n\t\t\t\t\t\t\t\tlabel=\"Competition\"\r\n\t\t\t\t\t\t\t\tname=\"compId\"\r\n\t\t\t\t\t\t\t\toptions={this.state.items}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Button primary onClick={this.saveData.bind(this)}>Import</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t{this.renderSuccessMessage()}\r\n\t\t\t\t\t\t{this.renderErrorMessage()}\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ImportStructuredData;","import React, { Component } from 'react';\r\nimport { Tab, Button, Header, Modal, Loader, Message, Container } from 'semantic-ui-react';\r\nimport StructuredDataTable from './tables/structured-data-table';\r\nimport { Match } from \"../domain\";\r\nimport { bindMatch } from \"../data-binding\";\r\nimport MatchListTable from './tables/match-list-table';\r\n\r\n\r\n/**\r\n * Shows all unstructured and structured data and allows the user\r\n * to select a piece of data \r\n */\r\nclass ChooseMatchModal extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        if (typeof (this.props.onSelect) != \"function\") {\r\n\r\n            throw Error(\"Choose Match Modal requires onSelect prop which is a function\")\r\n\r\n        }\r\n\r\n        this.state = {\r\n            isLoaded: false,\r\n            data: ['sss'],\r\n            isError: false,\r\n            lastSelectedId: -1,\r\n            isModalOpen: false,\r\n            selectedItem: undefined,\r\n            isNoChooseError: false\r\n        };\r\n\r\n        \r\n\r\n    }\r\n\r\n    /**\r\n     * Handles any errors cuased by a sub-component \r\n     * @param {*} error the error recieved\r\n     * @param {*} errorInfo information about the error\r\n     */\r\n    componentDidCatch(error, errorInfo) {\r\n\r\n        this.setState({ isError: true });\r\n\r\n    }\r\n\r\n    /**\r\n     * Loads all match data \r\n     * and binds those objects to match data types \r\n     */\r\n    loadData() {\r\n\r\n        fetch(\"/matchList\")\r\n            .then(res => res.json())\r\n            .then(result => {\r\n\r\n                \r\n                let matches = result.matches.map((d) => bindMatch(d));\r\n\r\n                this.setState({ data: matches, isLoaded: true, isError: false });\r\n\r\n            })\r\n            .catch(err => {\r\n                this.setState({ isError: true })\r\n            });\r\n\r\n    }\r\n\r\n    /**\r\n     * handles the click on the choose button\r\n     * will update state to display an error if no item is selected\r\n     */\r\n    handleChooseButtonClick() {\r\n\r\n\r\n        if (this.state.lastSelectedId != -1) {\r\n\r\n            this.props.onSelect(this.state.selectedItem);\r\n\r\n            this.handleClose();\r\n\r\n        }\r\n        else {\r\n\r\n            this.setState({ isNoChooseError: true });\r\n\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * handles the selection of data\r\n     * @param {*} data should be type unstructured or structured data \r\n     */\r\n    handleSelection(data) {\r\n\r\n        if(data.id === this.state.lastSelectedId)\r\n        {\r\n\r\n            this.props.onSelect(data);      \r\n\r\n            this.setState({isModalOpen: false,isNoChooseError: false});\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            this.setState({ lastSelectedId: data.id, selectedItem: data });\r\n\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Renders the page if the data has been loaded \r\n     */\r\n    renderLoaded() {\r\n        return (<div>\r\n            <Tab menu={{ pointing: true }} panes={\r\n                [\r\n                    {\r\n                        menuItem: 'Match',\r\n                        render: () =>\r\n                            <Tab.Pane>\r\n                                <MatchListTable items={this.state.data}\r\n                                    onSelect={this.handleSelection.bind(this)} />\r\n                            </Tab.Pane>\r\n                    },\r\n\r\n                ]} />\r\n            <Message warning attached hidden={!this.state.isNoChooseError}>\r\n                Please select an item before clicking choose. You can select an item by clicking on a table row\r\n            </Message>\r\n            <br />\r\n            <Button primary onClick={this.handleChooseButtonClick.bind(this)}>Choose</Button>\r\n        </div>);\r\n\r\n    }\r\n\r\n    /**\r\n     * Renders the page if an error has occured\r\n     */\r\n    renderError() {\r\n\r\n        return (\r\n            <Message negative>\r\n                <Message.Header>An error has occured</Message.Header>\r\n                <p>Failed to get data from the server.</p>\r\n                <Button color=\"red\" onClick={this.loadData.bind(this)}>Try Again?</Button>\r\n            </Message>\r\n        )\r\n\r\n    }\r\n\r\n    /**\r\n     * renders the page if the data is still loading \r\n     */\r\n    renderLoading() {\r\n\r\n        return (<Loader>Loading Data</Loader>)\r\n\r\n    }\r\n\r\n    /**\r\n     * Chooses which render that should be rendered based on \r\n     * state of the object \r\n     */\r\n    executeRender() {\r\n\r\n        if (this.state.isError) {\r\n\r\n            return this.renderError();\r\n\r\n        }\r\n        else if (this.state.isLoaded) {\r\n\r\n            return this.renderLoaded();\r\n\r\n        }\r\n        else {\r\n\r\n            return this.renderLoading();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * handles modal opening \r\n     */\r\n    handleOpen() { this.setState({ isModalOpen: true }) }\r\n\r\n    /**\r\n     * handles the modal closing\r\n     */\r\n    handleClose() {\r\n        this.setState({\r\n            isModalOpen: false,\r\n            lastSelectedId: -1,\r\n            isNoChooseError: false,\r\n            selectedItem: undefined\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * renders the component \r\n     */\r\n    render() {\r\n\r\n        let loadIfNotAlready = () => {\r\n\r\n\r\n            if (this.state.isLoaded === false) {\r\n\r\n                this.loadData();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return (\r\n            <Modal\r\n                closeIcon\r\n                onOpen={loadIfNotAlready.bind(this)}\r\n                trigger={<Button primary type =\"button\" onClick={this.handleOpen.bind(this)}>{this.props.text !== undefined ? this.props.text : \"Change\"}</Button>}\r\n                onClose={this.handleClose.bind(this)}\r\n                open={this.state.isModalOpen}>\r\n                <Modal.Header>Choose Match</Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description>\r\n                        <Header>Please select a match</Header>\r\n                        <br />\r\n                    </Modal.Description>\r\n                    {this.executeRender()}\r\n                </Modal.Content>\r\n            </Modal>\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default ChooseMatchModal;","import React, { Component } from 'react';\r\nimport { Message, Container } from 'semantic-ui-react'\r\nimport PageHeader from './page-header.js';\r\nimport { UnstructuredData } from \"../domain\";\r\nimport ChooseMatchModal from \"./choose-match-modal\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\nclass AddUnstructuredData extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: new URLSearchParams(props.location.search).get(\"id\"),\r\n            matchid: '',\r\n            title: 'New unstructured data',\r\n            author: '',\r\n            published: '',\r\n            extracted: '',\r\n            url: '',\r\n            match: '',\r\n            data: '',\r\n            exists: false,\r\n            message: '',\r\n            hasMessage: false\r\n        }\r\n\r\n        if (this.state.id !== null) {\r\n            this.load()\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n    * deals with filling out inputs in the form\r\n    * @param e - the event that caused the change\r\n    **/\r\n    changeHandler = (e) => {\r\n        e.preventDefault()\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    /**\r\n     * loosely validates inputs\r\n     * @param {any} data the data collected by the form which will be sent if it passes validation\r\n     */\r\n    valid(data) {\r\n        if (data.title === '') {\r\n            alert('title is required')\r\n            return false\r\n        }\r\n        if (data.author === '') {\r\n            alert('author is required')\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    /**\r\n     * loads the data with id passed into the page if one exists\r\n     */\r\n    load() {\r\n        fetch(\"unstructuredData?id=\" + this.state.id)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                if (result.unstructuredData.extracted !== null) {\r\n                    var split = result.unstructuredData.extracted.split('-')\r\n                    var ext = `${split[0]}-${split[1]}-${parseInt(split[2])}`\r\n                    if (parseInt(split[2]) < 10) {\r\n                        ext = ext.slice(0, -1) + '0' + parseInt(split[2])\r\n                    }\r\n                }\r\n                if (result.unstructuredData.published !== null) {\r\n                    split = result.unstructuredData.published.split('-')\r\n                    var pub = `${split[0]}-${split[1]}-${parseInt(split[2])}`\r\n                    if (parseInt(split[2]) < 10) {\r\n                        pub = pub.slice(0, -1) + '0' + parseInt(split[2])\r\n                    }\r\n                }\r\n                console.log(ext + ' ' + pub)\r\n                this.setState({\r\n                    exists: true,\r\n                    matchid: result.match.id,\r\n                    match: `${result.match.home} vs ${result.match.away}`,\r\n                    author: result.unstructuredData.author,\r\n                    title: result.unstructuredData.title,\r\n                    url: result.unstructuredData.url,\r\n                    data: result.unstructuredData.data,\r\n                    extracted: ext,\r\n                    published: pub\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('error loading' + err)\r\n            })\r\n              \r\n    }\r\n\r\n    /**\r\n    * deal with submission of the form\r\n    * @param e - the event that caused the submission\r\n    **/\r\n    submit = (e) => {\r\n        e.preventDefault()\r\n        console.log(this.state.published)\r\n        var split = this.state.published.split('-')\r\n        var pub = new Date(split[0], split[1]-1, split[2], 0, 0, 0)\r\n        split = this.state.extracted.split('-')\r\n        var ext = new Date(split[0], split[1]-1, split[2], 0, 0, 0)\r\n        var toSend = new UnstructuredData(this.state.id, this.state.matchid, this.state.title, this.state.author, this.state.url, pub, ext, this.state.data)\r\n        if (!this.valid(toSend)) {\r\n            return\r\n        }\r\n        console.log(toSend)\r\n        var request = new XMLHttpRequest()\r\n        var method = 'PUT'\r\n        var idtext = `?id=${this.state.id}`\r\n        if (!this.state.exists) {\r\n            method = 'POST'\r\n            idtext = ''\r\n        }\r\n        request.open(method, '/unstructuredData' + idtext, true)\r\n        request.setRequestHeader('Content-Type', 'application/json')\r\n        request.send(JSON.stringify(toSend))\r\n        request.onload = function () {\r\n            if (request.status != 200) {\r\n                this.setState({ message: `Error ${request.status}: ${request.statusText}`, hasMessage: true })\r\n            }\r\n            else {\r\n\r\n                if(this.state.exists)\r\n                {\r\n\r\n                    this.props.history.goBack()\r\n\r\n                }\r\n                else\r\n                {\r\n\r\n                    //TODO replace with clear\r\n                    this.setState({id:undefined,match:\"\",matchid:0,title:\"New unstructured data\",author:\"\",url:\"\",published:\"\",extracted:\"\",data:\"\"})\r\n\r\n                }\r\n\r\n                \r\n            }\r\n        }.bind(this)\r\n        request.onerror = function () {\r\n            this.setState({ message: 'save failed', hasMessage: true })\r\n        }.bind(this)\r\n    }\r\n\r\n    /**\r\n    * deals with deleting the data\r\n    * @param e - the event that caused the delete\r\n    **/\r\n    delete = (e) => {\r\n        e.preventDefault()\r\n        if (this.state.exists) {\r\n            var request = new XMLHttpRequest()\r\n            console.log(this.state.id)\r\n            request.open('DELETE', `/unstructuredData?id=${this.state.id}`, true)\r\n            request.setRequestHeader('Content-Type', 'application/json')\r\n            request.send()\r\n            request.onload = function () {\r\n                if (request.status != 200) {\r\n                    this.setState({ message: `Error ${request.status}: ${request.statusText}`, hasMessage: true })\r\n                }\r\n                else {\r\n                    this.props.history.goBack();\r\n                }\r\n            }.bind(this)\r\n            request.onerror = function () {\r\n                this.setState({ message: 'delete failed', hasMessage: true })\r\n            }.bind(this)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * deals with the match chosen by the choose match modal\r\n     * @param {any} chosenMatch - the chosen match\r\n     */\r\n    handleChosenMatch(chosenMatch) {\r\n        console.log(chosenMatch)\r\n        this.setState({\r\n            matchid: chosenMatch.id,\r\n            match: `${chosenMatch.home} vs ${chosenMatch.away}`,\r\n        })\r\n    }\r\n\r\n    /**\r\n     * renders the page\r\n     */\r\n    render() {\r\n        const { id, matchid, title, author, published, extracted, url, match, data, exists, message, hasMessage } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"page\">\r\n\t\t\t\t<PageHeader \r\n\t\t\t\t\theader={title}\r\n\t\t\t\t\tsidebarVisible={this.props.sidebarVisible}\r\n\t\t\t\t\thandleSidebarClick={this.props.handleSidebarClick}\r\n\t\t\t\t/>\r\n                <Container>\r\n                <div id=\"container\" style={{ height: \"100vh\" }}>\r\n                    <form className=\"ui form\">\r\n                        <div className=\"inline fields\">\r\n                            <div className=\"one wide field\"/>\r\n                            <div className=\"required ten wide field\">\r\n                                <label>\r\n                                    Title\r\n                                </label>\r\n                                <input type=\"text\" name=\"title\" value={title} onChange={this.changeHandler} />\r\n                            </div>\r\n                            <div className=\"required four wide field\">\r\n                                <label>\r\n                                    Author\r\n                                </label>\r\n                                <input type=\"text\" name=\"author\" value={author} onChange={this.changeHandler} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"inline fields\">\r\n                            <div className=\"one wide field\"/>\r\n                            <div className=\"five wide field\">\r\n                                <label>\r\n                                    Published\r\n                                </label>\r\n                                <input type=\"date\" name=\"published\" value={published} onChange={this.changeHandler}/>\r\n                            </div>\r\n                            <div className=\"five wide field\">\r\n                                <label>\r\n                                    Extracted\r\n                                </label>\r\n                                <input type=\"date\" name=\"extracted\" value={extracted} onChange={this.changeHandler}/>\r\n                            </div>\r\n                            <div className=\"four wide field\">\r\n                                <label>\r\n                                    URL\r\n                                </label>\r\n                                <input type=\"text\" name=\"url\" value={url} onChange={this.changeHandler} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"inline fields\">\r\n                            <div className=\"one wide field\"/>\r\n                            <div className=\"five wide field\">\r\n                                <div className=\"ui pointing below label\">\r\n                                    Content\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"seven wide field\">\r\n                                <label>\r\n                                    Match:\r\n                                </label>\r\n                                <label>\r\n                                    {match} \r\n                                </label>\r\n                            </div>\r\n                            <div className=\"two wide field\">\r\n                                <ChooseMatchModal onSelect= { this.handleChosenMatch.bind(this) } ></ChooseMatchModal>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"inline fields\">\r\n                            <div className=\"one wide field\"/>\r\n                            <div className=\"fourteen wide field\">\r\n                                <textarea name=\"data\" value={data} onChange={this.changeHandler} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"inline fields\">\r\n                            <div className=\"one wide field\" />\r\n                            <div className=\"two wide field\">\r\n                                <button className=\"fluid ui primary button\" type=\"button\">\r\n                                    Toggle: edited\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"eight wide field\">\r\n                                {hasMessage ? <Message negative> {message} </Message> : undefined}\r\n                            </div>\r\n                            <div className=\"two wide field\">\r\n                                {!this.state.exists ? \"\" : <button className=\"fluid ui red button\" type=\"button\" onClick={this.delete.bind(this)} >\r\n                                    Delete\r\n                                </button>}\r\n                            </div>\r\n                            <div className=\"two wide field\">\r\n                                <button className=\"fluid ui primary button\" type=\"button\" onClick={this.submit.bind(this)} >\r\n                                    Save\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\t\t\t\t</div>\r\n                </Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(AddUnstructuredData);","import React, { Component } from 'react';\r\nimport PageHeader from './page-header.js';\r\nimport { Button, Loader, Message, Segment, Container, TextArea,Form} from 'semantic-ui-react';\r\nimport {ImportRequest} from \"../domain\";\r\nclass Export extends Component {\r\n\r\n\tconstructor(props)\r\n    {\r\n        \r\n\t\tsuper(props)\r\n\t\t\r\n\t\tlet types = [\"json\",\"xml\"];\r\n\r\n\t\tlet names = [\"JSON\",\"XML\"];\r\n\r\n\t\tthis.state = {items:this.genDropDownItems(types,names),\r\n\t\t\ttype:\"json\",\r\n\t\t\tisLoaded: true,\r\n\t\t\tisError: false,\r\n\t\t\trequest: new ImportRequest(),\r\n\t\t\tisExported: false,\r\n\t\t\texport: undefined,\r\n\t\t\texportedType: undefined }\r\n\r\n\r\n    }\r\n\r\n\tgenDropDownItems(items,names)\r\n\t{\r\n\r\n\t\treturn items.map((item,index) => \r\n\t\t{\r\n\r\n\t\t\t//taken from https://stackoverflow.com/questions/7225407/convert-camelcasetext-to-sentence-case-text\r\n\t\t\tlet text = names !== undefined ? names[index] : item.replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\").charAt(0).toUpperCase()+item.slice(1).replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\");\r\n\r\n\t\t\treturn {key:item,text:text,value:item};\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadData()\r\n    {\r\n\r\n\t\tthis.setState({isLoaded: false, isExported: false,exportedType: this.state.type});\r\n\r\n\t\tfetch(\"/export?type=\" + this.state.type)\r\n\t\t\t.then((b) => b.text())            \r\n            .then(result => \r\n                {\r\n\r\n\r\n\t\t\t\t\tlet data = result\r\n\r\n\t\t\t\t\tthis.setState({export:data,isLoaded: true, isError: false,isExported: true})\r\n                })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n\r\n\thandleChange(e, { name, value })\r\n\t{\r\n\r\n\t\tthis.setState({ type: value});\t\t\r\n\r\n\t}\r\n\r\n\r\n\trenderErrorMessage()\r\n\t{\r\n\r\n\t\tif(this.state.isError)\r\n\t\t{\r\n\r\n\t\t\treturn(  \r\n\t\t\t\t<Message negative>\r\n\t\t\t\t\t<Message.Header>An error has occured</Message.Header>\r\n\t\t\t\t\t<p>Something has gone wrong! Reloading the page may fix the issue</p>\r\n\t\t\t\t  </Message>\r\n\t\t\t\t  )\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\trenderData()\r\n\t{\r\n\r\n\t\tif(this.state.isExported)\r\n\t\t{\r\n\r\n\t\t\tif(this.state.exportedType === \"json\")\r\n\t\t\t{\r\n\r\n\t\t\t\treturn(<Container textAlign=\"left\" >{this.state.export}</Container>)\r\n\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\r\n\t\t\t\treturn(<Container textAlign=\"left\"> {this.state.export}</Container>)\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"page\">\r\n\t\t\t\t<PageHeader \r\n\t\t\t\t\theader={\"Import Structured Data\"}\r\n\t\t\t\t\tsidebarVisible={this.props.sidebarVisible}\r\n\t\t\t\t\thandleSidebarClick={this.props.handleSidebarClick}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"container\" style={{minHeight:\"100vh\"}}>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Form loading={! this.state.isLoaded}>\r\n\t\t\t\t\t\t\t<Form.Group inline>\r\n\t\t\t\t\t\t\t\t<Form.Select\r\n\t\t\t\t\t\t\t\tlabel=\"Export Type\"\r\n\t\t\t\t\t\t\t\tname=\"compId\"\r\n\t\t\t\t\t\t\t\toptions={this.state.items}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t\tvalue={this.state.type}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Button primary onClick={this.loadData.bind(this)}>Export</Button>\r\n\t\t\t\t\t\t</Form>\t\t\t\t\t\t\r\n\t\t\t\t\t\t{this.renderErrorMessage()}\r\n\t\t\t\t\t\t{this.renderData()}\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Export;","import React, { Component } from 'react';\r\nimport PageHeader from './page-header.js';\r\nimport DataPair from \"./data-pair\"\r\nimport ReactJson from 'react-json-view'\r\nimport {bindStructuredData} from \"../data-binding\";\r\nimport { Button, Loader, Message, Segment, Container, TextArea,Form} from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\n/**\r\n * The page for adding an edit \r\n * @param {*} props should only be passed in for testing purposes \r\n */\r\nexport class StructuredDataPage extends Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        \r\n        super(props)\r\n\r\n        //allow passing in of id for testing \r\n        let id = props.id === undefined ? \r\n        new URLSearchParams(props.location.search).get(\"id\") : props.id;\r\n\r\n        if(id === undefined || id === null)\r\n        {\r\n\r\n            throw new Error(\"id must be defined\")\r\n\r\n        }\r\n\r\n        this.state = {data: [], isLoaded: false, isError: false, id:id,headerText:\"Loading\"}\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * Handles any errors cuased by a sub-component \r\n     * @param {*} error the error recieved\r\n     * @param {*} errorInfo information about the error\r\n     */\r\n    componentDidCatch(error, errorInfo)\r\n    {\r\n\r\n        this.setState({isError: true});\r\n\r\n    }\r\n\r\n    deleteData()\r\n\t{\r\n\r\n\t\tfetch(\"/structureddata?id=\" + this.state.id,\r\n\t\t\t{method: \"DELETE\",\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}}).then((res) => \r\n\t\t\t{\r\n\r\n\t\t\t\tif(res.ok)\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tthis.props.history.goBack();\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({isError: true,hasData: false});\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n     * Loads all edits and bind the parsed json to edit objects\r\n     */\r\n    loadData()\r\n    {\r\n\r\n        fetch(\"/StructuredData?id=\" + this.state.id)\r\n            .then(res => res.json())\r\n            .then(result => \r\n                {\r\n\r\n                    let data = bindStructuredData(result);\r\n\r\n                    let date = data.date;\r\n\r\n                    let dateString = date.getDate() + \"/\" + (date.getMonth()+1) + \"/\" + date.getFullYear();\r\n                    \r\n                    let headerText = data.home + \" vs \" + data.away + \" on \" + dateString; \r\n\r\n\t\t\t\t\tthis.setState({data:data,isLoaded: true, isError: false,headerText: headerText})\r\n                })\r\n            .catch(err => this.setState({isError: true}));\r\n\r\n    }\r\n\r\n    /**\r\n     * loads the data if it is not already loaded\r\n     */\r\n\tloadIfNotAlready()\r\n\t{\r\n\r\n\t\tif(this.state.isLoaded === false)\r\n\t\t{\r\n\r\n\t\t\tthis.loadData();\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n    /**\r\n     * renders the page in loading state \r\n     */\r\n\trenderLoaded()\r\n\t{\r\n\r\n        let date = this.state.data.date;\r\n\r\n        let dateString = date.getDay() + \"/\" + date.getMonth() + \"/\" + date.getFullYear();\r\n\r\n\t\treturn (\r\n\t\t\t\t\t\t\t\r\n                <div>\r\n                    \r\n                    <Container textAlign=\"left\">\r\n                        <Segment basic size=\"large\"><b>Date:</b>{dateString} <b>Competition:</b>{this.state.data.competitionName}</Segment>\r\n                        <br/>\r\n                        <Button negative onClick={this.deleteData.bind(this)}>Delete</Button> \r\n                        <br/>\r\n                        <ReactJson src={this.state.data.data}/>   \r\n                        \r\n                    </Container>\r\n                    \r\n                    \r\n                </div>                  \r\n\t\t\t\t\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t /**\r\n     * Renders the page if an error has occured\r\n     */\r\n    renderError()\r\n    {\r\n\r\n        return(  \r\n        <Message negative>\r\n            <Message.Header>An error has occured</Message.Header>\r\n            <p>Failed to get data from the server.</p>\r\n            <Button color=\"red\" onClick={this.loadData.bind(this)}>Try Again?</Button>\r\n          </Message>\r\n          )\r\n\r\n    }\r\n\r\n    /**\r\n     * navigates to an edit page with parameters given by inputted edit\r\n     * @param {*} edit the edit inputted \r\n     */\r\n\trouteToData(data)\r\n\t{\r\n\r\n\t\tthis.props.history.push(\"/structured_data_page?id=\" + data.id + \"&isbackable=true\");\r\n\t\t\r\n\t}\r\n\r\n    /**\r\n     * renders the page if the data is still loading \r\n     */\r\n    renderLoading()\r\n    {\r\n\r\n        return(<Loader>Loading Data</Loader>)\r\n\r\n    }\r\n    \r\n    /**\r\n     * Chooses which render that should be rendered based on \r\n     * state of the object \r\n     */\r\n    executeRender()\r\n    {\r\n\r\n        if(this.state.isError)\r\n        {\r\n\r\n            return this.renderError();\r\n\r\n        }\r\n        else if(this.state.isLoaded)\r\n        {\r\n\r\n            return this.renderLoaded();\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            return this.renderLoading();\r\n\r\n        }\r\n\r\n    }\r\n\r\n\t\r\n\r\n    /**\r\n     * renders the page \r\n     */\r\n\trender() {\r\n\r\n\t\tthis.loadIfNotAlready();\r\n\r\n\t\treturn (<div className=\"page\">\r\n\t\t\t<PageHeader \r\n\t\t\t\theader={this.state.headerText}\r\n\t\t\t\tsidebarVisible={this.props.sidebarVisible}\r\n\t\t\t\thandleSidebarClick={this.props.handleSidebarClick}\r\n\t\t\t/>\r\n\t\t\t<br/>\t\t\t\t\t\t\t    \r\n\t\t\t<div id=\"container\" style={{minHeight:\"100vh\"}}>\r\n\t\t\t\t{this.executeRender()}\r\n\t\t\t</div>\r\n\t\t</div>)\r\n\t\t\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default withRouter(StructuredDataPage);","import React, { Component } from 'react';\r\nimport { Header, Button, Grid, Form, Message, Segment } from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass LoginForm extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tusername: \"\",\r\n\t\t\tpassword: \"\",\r\n\t\t\tloggedIn: false,\r\n\t\t\tincorrectLogin: false,\r\n\t\t\tisError: false,\r\n\t\t\tloginToken: {}\r\n\t\t}\r\n\t}\r\n\r\n\t//Placeholder\r\n\tvalidData(){\r\n\t\treturn true;\r\n\t}\r\n\r\n\thandleChange(e, { name, value }){\r\n\t\tthis.setState({ [name]: value });\t\t\r\n\t}\r\n\r\n\thandleButton(){\r\n\r\n\t\tconsole.log(this.state.username)\r\n\r\n\t\tconsole.log(JSON.stringify({username: this.state.username, password: this.state.password}))\r\n\r\n\r\n\r\n\t\tfetch(\"/login\",\r\n\t\t\t{method: \"POST\",\r\n\t\t\tbody: JSON.stringify({username: this.state.username, password: this.state.password}),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t\t})\r\n\t\t.then(res => {\r\n\t\t\t\tconsole.log(res.status)\r\n\t\t\t\tif(res.ok) {\r\n\t\t\t\t\tthis.props.history.push(\"/\");\r\n\t\t\t\t}\r\n\t\t\t\telse if(res.status == 400){\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({incorrectLogin: true })\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.setState({isError: true})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tswitch(err.message) {\r\n\t\t\t\t\tcase \"400\":\r\n\t\t\t\t\t\tif(! this.state.incorrectLogin)\r\n\t\t\t\t\t\t\tthis.setState({incorrectLogin: true })\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\tdefault: \r\n\t\t\t\t\t\tif(! this.state.isError)\r\n\t\t\t\t\t\t\tthis.setState({isError: true})\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\t\r\n\t\t})\r\n\t}\r\n\r\n\trenderError(){\r\n\t\tconsole.log(this.state)\r\n\t\tif(this.state.isError){\r\n\t\t\treturn (\r\n\t\t\t\t<Message visible negative>\r\n\t\t\t\t\t<Message.Header>An error has occured</Message.Header>\r\n\t\t\t\t\t<p>Failed to get data from the server.</p>\r\n\t\t\t\t</Message>\r\n\t\t\t)\r\n\t\t} else if(this.state.incorrectLogin){\r\n\t\t\treturn (\r\n\t\t\t\t<Message visible negative>\r\n\t\t\t\t\t<Message.Header>Incorrect Login</Message.Header>\r\n\t\t\t\t\t<p>Please recheck your login info.</p>\r\n\t\t\t\t</Message>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn <div></div>\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (<div className=\"page\">\r\n\t\t\t<Grid textAlign='center' style={{minHeight:\"100vh\"}} verticalAlign='middle'>\r\n\t\t\t\t<Grid.Column style={{ maxWidth: 450 }}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Header as='h2' textAlign='center'>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t\t<Form size='large'>\r\n\t\t\t\t\t\t<Segment>\r\n\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\tfluid icon='user'\r\n\t\t\t\t\t\t\ticonPosition='left'\r\n\t\t\t\t\t\t\tplaceholder='Username'\r\n\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\tvalue={this.state.username}\r\n\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\tfluid icon='lock'\r\n\t\t\t\t\t\t\ticonPosition='left'\r\n\t\t\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button primary onClick={this.handleButton.bind(this)}>Login</Button>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t<Message>\r\n\t\t\t\t\t\t<a href='../register-form'>Sign Up</a>\r\n\t\t\t\t\t</Message>\r\n\t\t\t\t\t{this.renderError()}\t\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t\t\r\n\t\t</div>)\r\n\t}\r\n}\r\n\r\nexport default withRouter(LoginForm);\r\n","import React, { Component } from 'react';\r\nimport { Header, Button, Grid, Form, Message, Segment } from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass RegisterForm extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tusername: \"\",\r\n\t\t\tpassword: \"\",\r\n\t\t\trepeat_password: \"\",\r\n\t\t\tregkey: \"\",\r\n\t\t\tpasswordMismatch: false,\r\n\t\t\tfailedRegistration: false,\r\n\t\t\tisError: false\r\n\t\t}\r\n\t}\r\n\r\n\t//Placeholder\r\n\tvalidData(){\r\n\t\treturn true;\r\n\t}\r\n\r\n\thandleChange(e, { name, value }){\r\n\t\tthis.setState({ [name]: value });\t\t\r\n\t}\r\n\r\n\thandleButton(){\r\n\t\tfetch(\"/register\",\r\n\t\t\t{method: \"POST\",\r\n\t\t\tbody: JSON.stringify({username: this.state.username, password: this.state.password, regkey: this.state.regkey}),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t\t})\r\n\t\t.then(res => {\r\n\t\t\t\tif(res.ok) {\r\n\t\t\t\t\tthis.props.history.push('/');\r\n\t\t\t\t}\r\n\t\t\t\telse if(res.status == 400){\r\n\t\t\t\t\tthis.setState({failedRegistration: true})\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.setState({isError: true})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tswitch(err.message) {\r\n\t\t\t\t\tcase \"400\":\r\n\t\t\t\t\t\tif(! this.state.failedRegistration)\r\n\t\t\t\t\t\t\tthis.setState({failedRegistration: true })\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\tdefault: \r\n\t\t\t\t\t\tif(! this.state.isError)\r\n\t\t\t\t\t\t\tthis.setState({isError: true})\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\t\r\n\t\t})\r\n\t}\r\n\r\n\trenderError(){\r\n\t\tif(this.state.isError){\r\n\t\t\treturn (\r\n\t\t\t\t<Message visible negative>\r\n\t\t\t\t\t<Message.Header>An error has occured</Message.Header>\r\n\t\t\t\t\t<p>Failed to get data from the server.</p>\r\n\t\t\t\t</Message>\r\n\t\t\t)\r\n\t\t} else if(this.state.failedRegistration){\r\n\t\t\treturn (\r\n\t\t\t\t<Message visible negative>\r\n\t\t\t\t\t<Message.Header>Registration unsuccessful</Message.Header>\r\n\t\t\t\t\t<p>Please check your registration key and try again.</p>\r\n\t\t\t\t</Message>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn <div></div>\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (<div className=\"page\">\r\n\t\t\t<Grid textAlign='center' style={{minHeight:\"100vh\"}} verticalAlign='middle'>\r\n\t\t\t\t<Grid.Column style={{ maxWidth: 450 }}>\r\n\t\t\t\t\t<Header as='h2' textAlign='center'>\r\n\t\t\t\t\t\tRegister New User\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t\t<Form size='large'>\r\n\t\t\t\t\t\t<Segment>\r\n\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\tfluid icon='user'\r\n\t\t\t\t\t\t\ticonPosition='left'\r\n\t\t\t\t\t\t\tplaceholder='Username'\r\n\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\tvalue={this.state.username}\r\n\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\tfluid icon='lock'\r\n\t\t\t\t\t\t\ticonPosition='left'\r\n\t\t\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\tfluid icon='th'\r\n\t\t\t\t\t\t\ticonPosition='left'\r\n\t\t\t\t\t\t\tplaceholder='Confirm password'\r\n\t\t\t\t\t\t\tname=\"repeat_password\"\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tvalue={this.state.repeat_password}\r\n\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\tfluid icon='key'\r\n\t\t\t\t\t\t\ticonPosition='left'\r\n\t\t\t\t\t\t\tplaceholder='Registration key'\r\n\t\t\t\t\t\t\tname=\"regkey\"\r\n\t\t\t\t\t\t\tvalue={this.state.regkey}\r\n\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button primary onClick={this.handleButton.bind(this)}>Register Now</Button>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t<Message>\r\n\t\t\t\t\t\tIf you alreay have an account, <a href='../login-form'>sign in</a>\r\n\t\t\t\t\t</Message>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t\t{this.renderError()}\r\n\t\t</div>)\r\n\t}\r\n}\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React, { Component } from 'react'\r\nimport './App.css';\r\nimport {\r\n\tMenu,\r\n\tSegment,\r\n\tSidebar,\r\n} from 'semantic-ui-react';  \r\n\r\nimport { BrowserRouter as Switch, Route} from 'react-router-dom';\r\nimport Home from './components/home.js';\r\nimport UnstructuredDataList from './components/listpages/unstructured-data-list.js';\r\nimport StructuredDataList from './components/listpages/structured-data-list.js';\r\nimport MatchList from './components/listpages/match-list.js';\r\nimport ViewMatch from './components/view-match.js';\r\nimport EditList from './components/listpages/edit-list';\r\nimport AddEdit from './components/add-edit.js';\r\nimport ImportStructuredData from './components/import-structured-data.js';\r\nimport AddUnstructuredData from './components/add-unstructured-data.js';\r\nimport Export from './components/export.js';\r\nimport StructuredDataPage from \"./components/structured-data-page\";\r\nimport LoginForm from \"./components/login-form\";\r\nimport RegisterForm from \"./components/register-form\";\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tsidebarVisible: true\r\n\t\t}\r\n\r\n\t\tthis.handleSidebarClick = () => {\r\n\t\t\tthis.setState({ sidebarVisible: !this.state.sidebarVisible })\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Sidebar.Pushable as={Segment}>\r\n\t\t\t\t\t<Sidebar\r\n\t\t\t\t\t\tas={Menu}\r\n\t\t\t\t\t\tanimation='push'\r\n\t\t\t\t\t\ticon='labeled'\r\n\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\tonHide={this.handleSidebarHide}\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tvisible={this.state.sidebarVisible}\r\n\t\t\t\t\t\twidth='thin'\r\n\t\t\t\t\t>\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/'>\r\n\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/unstructured_data_list'>\r\n\t\t\t\t\t\t\tUnstructured Data List\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/structured_data_list'>\r\n\t\t\t\t\t\t\tStructured Data List\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/match_list'>\r\n\t\t\t\t\t\t\tMatch List\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/edit_list'>\r\n\t\t\t\t\t\t\tEdit List\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/add_edit'>\r\n\t\t\t\t\t\t\tAdd Edit\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/import_structured_data'>\r\n\t\t\t\t\t\t\tImport Structured Data\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/add_unstructured_data'>\r\n\t\t\t\t\t\t\tAdd Unstructured Data\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item as='a' href='/export'>\r\n\t\t\t\t\t\t\tExport\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Sidebar>\r\n\r\n\t\t\t\t\t<Sidebar.Pusher>\r\n\t\t\t\t\t\t<div className=\"App\" style={{minHeight:\"100vh\"}}>\r\n\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t<Route \texact path='/' \r\n\t\t\t\t\t\t\t\t\t\tcomponent={() => <Home sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t    \t\t<Route \tpath='/unstructured_data_list' \r\n\t\t\t\t\t    \t\t\t\tcomponent={() => <UnstructuredDataList sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t    \t\t/>\r\n\t\t\t\t\t    \t\t<Route \tpath='/structured_data_list' \r\n\t\t\t\t\t    \t\t\t\tcomponent={() => <StructuredDataList sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t    \t\t/>\r\n\t\t\t\t\t\t\t\t<Route \tpath='/match_list'\r\n\t\t\t\t\t\t\t\t\t\tcomponent={() => <MatchList sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route \tpath='/view_match'\r\n\t\t\t\t\t\t\t\t\t\tcomponent={() => <ViewMatch sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route \tpath='/edit_list'\r\n\t\t\t\t\t\t\t\t\t\tcomponent={() => <EditList sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route \tpath='/add_edit'\r\n\t\t\t\t\t\t\t\t\t\tcomponent={() => <AddEdit sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route \tpath='/import_structured_data'\r\n\t\t\t\t\t\t\t\t\t\tcomponent={() => <ImportStructuredData sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route \tpath='/add_unstructured_data'\r\n\t\t\t\t\t\t\t\t\t\tcomponent={() => <AddUnstructuredData sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route \tpath='/export'\r\n\t\t\t\t\t\t\t\t\t\tcomponent={() => <Export sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route \tpath='/structured_data_page'\r\n\t\t\t\t\t\t\t\t\t\tcomponent={() => <StructuredDataPage sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route\tpath='/login-form'\r\n\t\t\t\t\t\t\t\t\t\tcomponent={() => <LoginForm sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Route\tpath='/register-form'\r\n\t\t\t\t\t\t\t\t\t\tcomponent={() => <RegisterForm sidebarVisible={this.state.sidebarVisible} handleSidebarClick={this.handleSidebarClick.bind(this)}/>}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Sidebar.Pusher>\r\n\r\n\t\t\t\t</Sidebar.Pushable>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app.js';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport * as serviceWorker from './service-worker';\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n), document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}