// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Edit Form Tests Should handle change in data and render change 1`] = `
<EditForm
  data={
    Edit {
      "editID": 1,
      "isCorpus": true,
      "replace": "bob",
      "replaceWith": "banna",
      "settings": Object {},
      "structuredDataID": null,
      "type": "replace",
      "unstructuredDataID": null,
    }
  }
>
  <div>
    <Container>
      <div
        className="ui container"
      >
        <Form
          as="form"
          loading={false}
          size="large"
        >
          <form
            className="ui large form"
            onSubmit={[Function]}
          >
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormSelect
                  as={[Function]}
                  control={[Function]}
                  label="Type:"
                  name="type"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "key": "replace",
                        "text": "Replace",
                        "value": "replace",
                      },
                      Object {
                        "key": "replacewithfield",
                        "text": "Replace Field",
                        "value": "replacewithfield",
                      },
                    ]
                  }
                  placeholder="Choose Type"
                  value="replace"
                >
                  <FormField
                    control={[Function]}
                    label="Type:"
                    name="type"
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "key": "replace",
                          "text": "Replace",
                          "value": "replace",
                        },
                        Object {
                          "key": "replacewithfield",
                          "text": "Replace Field",
                          "value": "replacewithfield",
                        },
                      ]
                    }
                    placeholder="Choose Type"
                    value="replace"
                  >
                    <div
                      className="field"
                    >
                      <label>
                        Type:
                      </label>
                      <Select
                        name="type"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "key": "replace",
                              "text": "Replace",
                              "value": "replace",
                            },
                            Object {
                              "key": "replacewithfield",
                              "text": "Replace Field",
                              "value": "replacewithfield",
                            },
                          ]
                        }
                        placeholder="Choose Type"
                        value="replace"
                      >
                        <Dropdown
                          additionLabel="Add "
                          additionPosition="top"
                          closeOnBlur={true}
                          closeOnEscape={true}
                          deburr={false}
                          icon="dropdown"
                          minCharacters={1}
                          name="type"
                          noResultsMessage="No results found."
                          onChange={[Function]}
                          openOnFocus={true}
                          options={
                            Array [
                              Object {
                                "key": "replace",
                                "text": "Replace",
                                "value": "replace",
                              },
                              Object {
                                "key": "replacewithfield",
                                "text": "Replace Field",
                                "value": "replacewithfield",
                              },
                            ]
                          }
                          placeholder="Choose Type"
                          renderLabel={[Function]}
                          searchInput="text"
                          selectOnBlur={true}
                          selectOnNavigation={true}
                          selection={true}
                          value="replace"
                          wrapSelection={true}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <div
                                  aria-expanded="false"
                                  class="ui selection dropdown"
                                  name="type"
                                  role="listbox"
                                  tabindex="0"
                                >
                                  <div
                                    aria-atomic="true"
                                    aria-live="polite"
                                    class="text"
                                    role="alert"
                                  >
                                    Replace
                                  </div>
                                  <i
                                    aria-hidden="true"
                                    class="dropdown icon"
                                  />
                                  <div
                                    class="menu transition"
                                  >
                                    <div
                                      aria-checked="true"
                                      aria-selected="true"
                                      class="active selected item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Replace
                                      </span>
                                    </div>
                                    <div
                                      aria-checked="false"
                                      aria-selected="false"
                                      class="item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Replace Field
                                      </span>
                                    </div>
                                  </div>
                                </div>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <div
                                    aria-expanded="false"
                                    class="ui selection dropdown"
                                    name="type"
                                    role="listbox"
                                    tabindex="0"
                                  >
                                    <div
                                      aria-atomic="true"
                                      aria-live="polite"
                                      class="text"
                                      role="alert"
                                    >
                                      Replace
                                    </div>
                                    <i
                                      aria-hidden="true"
                                      class="dropdown icon"
                                    />
                                    <div
                                      class="menu transition"
                                    >
                                      <div
                                        aria-checked="true"
                                        aria-selected="true"
                                        class="active selected item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Replace
                                        </span>
                                      </div>
                                      <div
                                        aria-checked="false"
                                        aria-selected="false"
                                        class="item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Replace Field
                                        </span>
                                      </div>
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <div
                                aria-expanded={false}
                                className="ui selection dropdown"
                                name="type"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-atomic={true}
                                  aria-live="polite"
                                  className="text"
                                  role="alert"
                                >
                                  Replace
                                </div>
                                <Icon
                                  as="i"
                                  className=""
                                  name="dropdown"
                                  onClick={[Function]}
                                >
                                  <i
                                    aria-hidden="true"
                                    className="dropdown icon"
                                    onClick={[Function]}
                                  />
                                </Icon>
                                <DropdownMenu>
                                  <div
                                    className="menu transition"
                                  >
                                    <DropdownItem
                                      active={true}
                                      key="replace"
                                      onClick={[Function]}
                                      selected={true}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Replace"
                                      value="replace"
                                    >
                                      <div
                                        aria-checked={true}
                                        aria-selected={true}
                                        className="active selected item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Replace
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="replacewithfield"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Replace Field"
                                      value="replacewithfield"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Replace Field
                                        </span>
                                      </div>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </RefFindNode>
                          </Ref>
                        </Dropdown>
                      </Select>
                    </div>
                  </FormField>
                </FormSelect>
                <FormCheckbox
                  as={[Function]}
                  checked={true}
                  control={[Function]}
                  label="Apply to Entire Corpus"
                  name="isCorpus"
                  onChange={[Function]}
                >
                  <FormField
                    checked={true}
                    control={[Function]}
                    label="Apply to Entire Corpus"
                    name="isCorpus"
                    onChange={[Function]}
                  >
                    <div
                      className="field"
                    >
                      <Checkbox
                        checked={true}
                        label="Apply to Entire Corpus"
                        name="isCorpus"
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <div
                          className="ui checked checkbox"
                          onChange={[Function]}
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <input
                                  checked=""
                                  class="hidden"
                                  name="isCorpus"
                                  readonly=""
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <input
                                    checked=""
                                    class="hidden"
                                    name="isCorpus"
                                    readonly=""
                                    tabindex="0"
                                    type="checkbox"
                                    value=""
                                  />,
                                }
                              }
                            >
                              <input
                                checked={true}
                                className="hidden"
                                name="isCorpus"
                                readOnly={true}
                                tabIndex={0}
                                type="checkbox"
                              />
                            </RefFindNode>
                          </Ref>
                          <Ref
                            innerRef={
                              Object {
                                "current": <label>
                                  Apply to Entire Corpus
                                </label>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <label>
                                    Apply to Entire Corpus
                                  </label>,
                                }
                              }
                            >
                              <label>
                                Apply to Entire Corpus
                              </label>
                            </RefFindNode>
                          </Ref>
                        </div>
                      </Checkbox>
                    </div>
                  </FormField>
                </FormCheckbox>
              </div>
            </FormGroup>
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  label="Replace:"
                  name="replace"
                  onChange={[Function]}
                  placeholder="text"
                  value="apple"
                >
                  <FormField
                    control={[Function]}
                    label="Replace:"
                    name="replace"
                    onChange={[Function]}
                    placeholder="text"
                    value="apple"
                  >
                    <div
                      className="field"
                    >
                      <label>
                        Replace:
                      </label>
                      <Input
                        name="replace"
                        onChange={[Function]}
                        placeholder="text"
                        type="text"
                        value="apple"
                      >
                        <div
                          className="ui input"
                        >
                          <input
                            name="replace"
                            onChange={[Function]}
                            placeholder="text"
                            type="text"
                            value="apple"
                          />
                        </div>
                      </Input>
                    </div>
                  </FormField>
                </FormInput>
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  label="with"
                  name="replaceWith"
                  onChange={[Function]}
                  placeholder="text"
                  value="banna"
                >
                  <FormField
                    control={[Function]}
                    label="with"
                    name="replaceWith"
                    onChange={[Function]}
                    placeholder="text"
                    value="banna"
                  >
                    <div
                      className="field"
                    >
                      <label>
                        with
                      </label>
                      <Input
                        name="replaceWith"
                        onChange={[Function]}
                        placeholder="text"
                        type="text"
                        value="banna"
                      >
                        <div
                          className="ui input"
                        >
                          <input
                            name="replaceWith"
                            onChange={[Function]}
                            placeholder="text"
                            type="text"
                            value="banna"
                          />
                        </div>
                      </Input>
                    </div>
                  </FormField>
                </FormInput>
              </div>
            </FormGroup>
            <FormGroup
              widths="equal"
            >
              <div
                className="equal width fields"
              >
                <Button
                  as="button"
                  onClick={[Function]}
                  primary={true}
                >
                  <Ref
                    innerRef={
                      Object {
                        "current": <button
                          class="ui primary button"
                        >
                           Save 
                        </button>,
                      }
                    }
                  >
                    <RefFindNode
                      innerRef={
                        Object {
                          "current": <button
                            class="ui primary button"
                          >
                             Save 
                          </button>,
                        }
                      }
                    >
                      <button
                        className="ui primary button"
                        onClick={[Function]}
                      >
                         Save 
                      </button>
                    </RefFindNode>
                  </Ref>
                </Button>
                <Button
                  as="button"
                  negative={true}
                  onClick={[Function]}
                >
                  <Ref
                    innerRef={
                      Object {
                        "current": <button
                          class="ui negative button"
                        >
                           Delete 
                        </button>,
                      }
                    }
                  >
                    <RefFindNode
                      innerRef={
                        Object {
                          "current": <button
                            class="ui negative button"
                          >
                             Delete 
                          </button>,
                        }
                      }
                    >
                      <button
                        className="ui negative button"
                        onClick={[Function]}
                      >
                         Delete 
                      </button>
                    </RefFindNode>
                  </Ref>
                </Button>
              </div>
            </FormGroup>
          </form>
        </Form>
      </div>
    </Container>
  </div>
</EditForm>
`;

exports[`Edit Form Tests Should handle change in data settings and render change 1`] = `
<EditForm
  data={
    Edit {
      "editID": 1,
      "isCorpus": true,
      "replace": "apple",
      "replaceWith": "banna",
      "settings": Object {
        "field": "Player",
      },
      "structuredDataID": null,
      "type": "replacewithfield",
      "unstructuredDataID": null,
    }
  }
>
  <div>
    <Container>
      <div
        className="ui container"
      >
        <Form
          as="form"
          loading={false}
          size="large"
        >
          <form
            className="ui large form"
            onSubmit={[Function]}
          >
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormSelect
                  as={[Function]}
                  control={[Function]}
                  label="Type:"
                  name="type"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "key": "replace",
                        "text": "Replace",
                        "value": "replace",
                      },
                      Object {
                        "key": "replacewithfield",
                        "text": "Replace Field",
                        "value": "replacewithfield",
                      },
                    ]
                  }
                  placeholder="Choose Type"
                  value="replacewithfield"
                >
                  <FormField
                    control={[Function]}
                    label="Type:"
                    name="type"
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "key": "replace",
                          "text": "Replace",
                          "value": "replace",
                        },
                        Object {
                          "key": "replacewithfield",
                          "text": "Replace Field",
                          "value": "replacewithfield",
                        },
                      ]
                    }
                    placeholder="Choose Type"
                    value="replacewithfield"
                  >
                    <div
                      className="field"
                    >
                      <label>
                        Type:
                      </label>
                      <Select
                        name="type"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "key": "replace",
                              "text": "Replace",
                              "value": "replace",
                            },
                            Object {
                              "key": "replacewithfield",
                              "text": "Replace Field",
                              "value": "replacewithfield",
                            },
                          ]
                        }
                        placeholder="Choose Type"
                        value="replacewithfield"
                      >
                        <Dropdown
                          additionLabel="Add "
                          additionPosition="top"
                          closeOnBlur={true}
                          closeOnEscape={true}
                          deburr={false}
                          icon="dropdown"
                          minCharacters={1}
                          name="type"
                          noResultsMessage="No results found."
                          onChange={[Function]}
                          openOnFocus={true}
                          options={
                            Array [
                              Object {
                                "key": "replace",
                                "text": "Replace",
                                "value": "replace",
                              },
                              Object {
                                "key": "replacewithfield",
                                "text": "Replace Field",
                                "value": "replacewithfield",
                              },
                            ]
                          }
                          placeholder="Choose Type"
                          renderLabel={[Function]}
                          searchInput="text"
                          selectOnBlur={true}
                          selectOnNavigation={true}
                          selection={true}
                          value="replacewithfield"
                          wrapSelection={true}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <div
                                  aria-expanded="false"
                                  class="ui selection dropdown"
                                  name="type"
                                  role="listbox"
                                  tabindex="0"
                                >
                                  <div
                                    aria-atomic="true"
                                    aria-live="polite"
                                    class="text"
                                    role="alert"
                                  >
                                    Replace Field
                                  </div>
                                  <i
                                    aria-hidden="true"
                                    class="dropdown icon"
                                  />
                                  <div
                                    class="menu transition"
                                  >
                                    <div
                                      aria-checked="false"
                                      aria-selected="false"
                                      class="item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Replace
                                      </span>
                                    </div>
                                    <div
                                      aria-checked="true"
                                      aria-selected="true"
                                      class="active selected item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Replace Field
                                      </span>
                                    </div>
                                  </div>
                                </div>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <div
                                    aria-expanded="false"
                                    class="ui selection dropdown"
                                    name="type"
                                    role="listbox"
                                    tabindex="0"
                                  >
                                    <div
                                      aria-atomic="true"
                                      aria-live="polite"
                                      class="text"
                                      role="alert"
                                    >
                                      Replace Field
                                    </div>
                                    <i
                                      aria-hidden="true"
                                      class="dropdown icon"
                                    />
                                    <div
                                      class="menu transition"
                                    >
                                      <div
                                        aria-checked="false"
                                        aria-selected="false"
                                        class="item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Replace
                                        </span>
                                      </div>
                                      <div
                                        aria-checked="true"
                                        aria-selected="true"
                                        class="active selected item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Replace Field
                                        </span>
                                      </div>
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <div
                                aria-expanded={false}
                                className="ui selection dropdown"
                                name="type"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-atomic={true}
                                  aria-live="polite"
                                  className="text"
                                  role="alert"
                                >
                                  Replace Field
                                </div>
                                <Icon
                                  as="i"
                                  className=""
                                  name="dropdown"
                                  onClick={[Function]}
                                >
                                  <i
                                    aria-hidden="true"
                                    className="dropdown icon"
                                    onClick={[Function]}
                                  />
                                </Icon>
                                <DropdownMenu>
                                  <div
                                    className="menu transition"
                                  >
                                    <DropdownItem
                                      active={false}
                                      key="replace"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Replace"
                                      value="replace"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Replace
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={true}
                                      key="replacewithfield"
                                      onClick={[Function]}
                                      selected={true}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Replace Field"
                                      value="replacewithfield"
                                    >
                                      <div
                                        aria-checked={true}
                                        aria-selected={true}
                                        className="active selected item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Replace Field
                                        </span>
                                      </div>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </RefFindNode>
                          </Ref>
                        </Dropdown>
                      </Select>
                    </div>
                  </FormField>
                </FormSelect>
                <FormCheckbox
                  as={[Function]}
                  checked={true}
                  control={[Function]}
                  label="Apply to Entire Corpus"
                  name="isCorpus"
                  onChange={[Function]}
                >
                  <FormField
                    checked={true}
                    control={[Function]}
                    label="Apply to Entire Corpus"
                    name="isCorpus"
                    onChange={[Function]}
                  >
                    <div
                      className="field"
                    >
                      <Checkbox
                        checked={true}
                        label="Apply to Entire Corpus"
                        name="isCorpus"
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <div
                          className="ui checked checkbox"
                          onChange={[Function]}
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <input
                                  checked=""
                                  class="hidden"
                                  name="isCorpus"
                                  readonly=""
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <input
                                    checked=""
                                    class="hidden"
                                    name="isCorpus"
                                    readonly=""
                                    tabindex="0"
                                    type="checkbox"
                                    value=""
                                  />,
                                }
                              }
                            >
                              <input
                                checked={true}
                                className="hidden"
                                name="isCorpus"
                                readOnly={true}
                                tabIndex={0}
                                type="checkbox"
                              />
                            </RefFindNode>
                          </Ref>
                          <Ref
                            innerRef={
                              Object {
                                "current": <label>
                                  Apply to Entire Corpus
                                </label>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <label>
                                    Apply to Entire Corpus
                                  </label>,
                                }
                              }
                            >
                              <label>
                                Apply to Entire Corpus
                              </label>
                            </RefFindNode>
                          </Ref>
                        </div>
                      </Checkbox>
                    </div>
                  </FormField>
                </FormCheckbox>
              </div>
            </FormGroup>
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  label="Replace:"
                  name="replace"
                  onChange={[Function]}
                  placeholder="text"
                  value="apple"
                >
                  <FormField
                    control={[Function]}
                    label="Replace:"
                    name="replace"
                    onChange={[Function]}
                    placeholder="text"
                    value="apple"
                  >
                    <div
                      className="field"
                    >
                      <label>
                        Replace:
                      </label>
                      <Input
                        name="replace"
                        onChange={[Function]}
                        placeholder="text"
                        type="text"
                        value="apple"
                      >
                        <div
                          className="ui input"
                        >
                          <input
                            name="replace"
                            onChange={[Function]}
                            placeholder="text"
                            type="text"
                            value="apple"
                          />
                        </div>
                      </Input>
                    </div>
                  </FormField>
                </FormInput>
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  label="with"
                  name="replaceWith"
                  onChange={[Function]}
                  placeholder="text"
                  value="banna"
                >
                  <FormField
                    control={[Function]}
                    label="with"
                    name="replaceWith"
                    onChange={[Function]}
                    placeholder="text"
                    value="banna"
                  >
                    <div
                      className="field"
                    >
                      <label>
                        with
                      </label>
                      <Input
                        name="replaceWith"
                        onChange={[Function]}
                        placeholder="text"
                        type="text"
                        value="banna"
                      >
                        <div
                          className="ui input"
                        >
                          <input
                            name="replaceWith"
                            onChange={[Function]}
                            placeholder="text"
                            type="text"
                            value="banna"
                          />
                        </div>
                      </Input>
                    </div>
                  </FormField>
                </FormInput>
              </div>
            </FormGroup>
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormSelect
                  as={[Function]}
                  control={[Function]}
                  label="Type:"
                  name="field"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "key": "Player",
                        "text": "Player",
                        "value": "Player",
                      },
                      Object {
                        "key": "Coach",
                        "text": "Coach",
                        "value": "Coach",
                      },
                    ]
                  }
                  placeholder="Choose Field"
                >
                  <FormField
                    control={[Function]}
                    label="Type:"
                    name="field"
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "key": "Player",
                          "text": "Player",
                          "value": "Player",
                        },
                        Object {
                          "key": "Coach",
                          "text": "Coach",
                          "value": "Coach",
                        },
                      ]
                    }
                    placeholder="Choose Field"
                  >
                    <div
                      className="field"
                    >
                      <label>
                        Type:
                      </label>
                      <Select
                        name="field"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "key": "Player",
                              "text": "Player",
                              "value": "Player",
                            },
                            Object {
                              "key": "Coach",
                              "text": "Coach",
                              "value": "Coach",
                            },
                          ]
                        }
                        placeholder="Choose Field"
                      >
                        <Dropdown
                          additionLabel="Add "
                          additionPosition="top"
                          closeOnBlur={true}
                          closeOnEscape={true}
                          deburr={false}
                          icon="dropdown"
                          minCharacters={1}
                          name="field"
                          noResultsMessage="No results found."
                          onChange={[Function]}
                          openOnFocus={true}
                          options={
                            Array [
                              Object {
                                "key": "Player",
                                "text": "Player",
                                "value": "Player",
                              },
                              Object {
                                "key": "Coach",
                                "text": "Coach",
                                "value": "Coach",
                              },
                            ]
                          }
                          placeholder="Choose Field"
                          renderLabel={[Function]}
                          searchInput="text"
                          selectOnBlur={true}
                          selectOnNavigation={true}
                          selection={true}
                          wrapSelection={true}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <div
                                  aria-expanded="false"
                                  class="ui selection dropdown"
                                  name="field"
                                  role="listbox"
                                  tabindex="0"
                                >
                                  <div
                                    aria-atomic="true"
                                    aria-live="polite"
                                    class="text"
                                    role="alert"
                                  >
                                    Player
                                  </div>
                                  <i
                                    aria-hidden="true"
                                    class="dropdown icon"
                                  />
                                  <div
                                    class="menu transition"
                                  >
                                    <div
                                      aria-checked="true"
                                      aria-selected="true"
                                      class="active selected item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Player
                                      </span>
                                    </div>
                                    <div
                                      aria-checked="false"
                                      aria-selected="false"
                                      class="item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Coach
                                      </span>
                                    </div>
                                  </div>
                                </div>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <div
                                    aria-expanded="false"
                                    class="ui selection dropdown"
                                    name="field"
                                    role="listbox"
                                    tabindex="0"
                                  >
                                    <div
                                      aria-atomic="true"
                                      aria-live="polite"
                                      class="text"
                                      role="alert"
                                    >
                                      Player
                                    </div>
                                    <i
                                      aria-hidden="true"
                                      class="dropdown icon"
                                    />
                                    <div
                                      class="menu transition"
                                    >
                                      <div
                                        aria-checked="true"
                                        aria-selected="true"
                                        class="active selected item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Player
                                        </span>
                                      </div>
                                      <div
                                        aria-checked="false"
                                        aria-selected="false"
                                        class="item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Coach
                                        </span>
                                      </div>
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <div
                                aria-expanded={false}
                                className="ui selection dropdown"
                                name="field"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-atomic={true}
                                  aria-live="polite"
                                  className="default text"
                                  role="alert"
                                >
                                  Choose Field
                                </div>
                                <Icon
                                  as="i"
                                  className=""
                                  name="dropdown"
                                  onClick={[Function]}
                                >
                                  <i
                                    aria-hidden="true"
                                    className="dropdown icon"
                                    onClick={[Function]}
                                  />
                                </Icon>
                                <DropdownMenu>
                                  <div
                                    className="menu transition"
                                  >
                                    <DropdownItem
                                      active={false}
                                      key="Player"
                                      onClick={[Function]}
                                      selected={true}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Player"
                                      value="Player"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={true}
                                        className="selected item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Player
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="Coach"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Coach"
                                      value="Coach"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Coach
                                        </span>
                                      </div>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </RefFindNode>
                          </Ref>
                        </Dropdown>
                      </Select>
                    </div>
                  </FormField>
                </FormSelect>
              </div>
            </FormGroup>
            <FormGroup
              widths="equal"
            >
              <div
                className="equal width fields"
              >
                <Button
                  as="button"
                  onClick={[Function]}
                  primary={true}
                >
                  <Ref
                    innerRef={
                      Object {
                        "current": <button
                          class="ui primary button"
                        >
                           Save 
                        </button>,
                      }
                    }
                  >
                    <RefFindNode
                      innerRef={
                        Object {
                          "current": <button
                            class="ui primary button"
                          >
                             Save 
                          </button>,
                        }
                      }
                    >
                      <button
                        className="ui primary button"
                        onClick={[Function]}
                      >
                         Save 
                      </button>
                    </RefFindNode>
                  </Ref>
                </Button>
                <Button
                  as="button"
                  negative={true}
                  onClick={[Function]}
                >
                  <Ref
                    innerRef={
                      Object {
                        "current": <button
                          class="ui negative button"
                        >
                           Delete 
                        </button>,
                      }
                    }
                  >
                    <RefFindNode
                      innerRef={
                        Object {
                          "current": <button
                            class="ui negative button"
                          >
                             Delete 
                          </button>,
                        }
                      }
                    >
                      <button
                        className="ui negative button"
                        onClick={[Function]}
                      >
                         Delete 
                      </button>
                    </RefFindNode>
                  </Ref>
                </Button>
              </div>
            </FormGroup>
          </form>
        </Form>
      </div>
    </Container>
  </div>
</EditForm>
`;

exports[`Edit Form Tests Should handle change in settings when change to replace 1`] = `
<EditForm
  data={
    Edit {
      "editID": 1,
      "isCorpus": true,
      "replace": "bob",
      "replaceWith": "banna",
      "settings": Object {},
      "structuredDataID": null,
      "type": "replace",
      "unstructuredDataID": null,
    }
  }
>
  <div>
    <Container>
      <div
        className="ui container"
      >
        <Form
          as="form"
          loading={false}
          size="large"
        >
          <form
            className="ui large form"
            onSubmit={[Function]}
          >
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormSelect
                  as={[Function]}
                  control={[Function]}
                  label="Type:"
                  name="type"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "key": "replace",
                        "text": "Replace",
                        "value": "replace",
                      },
                      Object {
                        "key": "replacewithfield",
                        "text": "Replace Field",
                        "value": "replacewithfield",
                      },
                    ]
                  }
                  placeholder="Choose Type"
                  value="replace"
                >
                  <FormField
                    control={[Function]}
                    label="Type:"
                    name="type"
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "key": "replace",
                          "text": "Replace",
                          "value": "replace",
                        },
                        Object {
                          "key": "replacewithfield",
                          "text": "Replace Field",
                          "value": "replacewithfield",
                        },
                      ]
                    }
                    placeholder="Choose Type"
                    value="replace"
                  >
                    <div
                      className="field"
                    >
                      <label>
                        Type:
                      </label>
                      <Select
                        name="type"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "key": "replace",
                              "text": "Replace",
                              "value": "replace",
                            },
                            Object {
                              "key": "replacewithfield",
                              "text": "Replace Field",
                              "value": "replacewithfield",
                            },
                          ]
                        }
                        placeholder="Choose Type"
                        value="replace"
                      >
                        <Dropdown
                          additionLabel="Add "
                          additionPosition="top"
                          closeOnBlur={true}
                          closeOnEscape={true}
                          deburr={false}
                          icon="dropdown"
                          minCharacters={1}
                          name="type"
                          noResultsMessage="No results found."
                          onChange={[Function]}
                          openOnFocus={true}
                          options={
                            Array [
                              Object {
                                "key": "replace",
                                "text": "Replace",
                                "value": "replace",
                              },
                              Object {
                                "key": "replacewithfield",
                                "text": "Replace Field",
                                "value": "replacewithfield",
                              },
                            ]
                          }
                          placeholder="Choose Type"
                          renderLabel={[Function]}
                          searchInput="text"
                          selectOnBlur={true}
                          selectOnNavigation={true}
                          selection={true}
                          value="replace"
                          wrapSelection={true}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <div
                                  aria-expanded="false"
                                  class="ui selection dropdown"
                                  name="type"
                                  role="listbox"
                                  tabindex="0"
                                >
                                  <div
                                    aria-atomic="true"
                                    aria-live="polite"
                                    class="text"
                                    role="alert"
                                  >
                                    Replace
                                  </div>
                                  <i
                                    aria-hidden="true"
                                    class="dropdown icon"
                                  />
                                  <div
                                    class="menu transition"
                                  >
                                    <div
                                      aria-checked="true"
                                      aria-selected="true"
                                      class="active selected item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Replace
                                      </span>
                                    </div>
                                    <div
                                      aria-checked="false"
                                      aria-selected="false"
                                      class="item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Replace Field
                                      </span>
                                    </div>
                                  </div>
                                </div>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <div
                                    aria-expanded="false"
                                    class="ui selection dropdown"
                                    name="type"
                                    role="listbox"
                                    tabindex="0"
                                  >
                                    <div
                                      aria-atomic="true"
                                      aria-live="polite"
                                      class="text"
                                      role="alert"
                                    >
                                      Replace
                                    </div>
                                    <i
                                      aria-hidden="true"
                                      class="dropdown icon"
                                    />
                                    <div
                                      class="menu transition"
                                    >
                                      <div
                                        aria-checked="true"
                                        aria-selected="true"
                                        class="active selected item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Replace
                                        </span>
                                      </div>
                                      <div
                                        aria-checked="false"
                                        aria-selected="false"
                                        class="item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Replace Field
                                        </span>
                                      </div>
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <div
                                aria-expanded={false}
                                className="ui selection dropdown"
                                name="type"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-atomic={true}
                                  aria-live="polite"
                                  className="text"
                                  role="alert"
                                >
                                  Replace
                                </div>
                                <Icon
                                  as="i"
                                  className=""
                                  name="dropdown"
                                  onClick={[Function]}
                                >
                                  <i
                                    aria-hidden="true"
                                    className="dropdown icon"
                                    onClick={[Function]}
                                  />
                                </Icon>
                                <DropdownMenu>
                                  <div
                                    className="menu transition"
                                  >
                                    <DropdownItem
                                      active={true}
                                      key="replace"
                                      onClick={[Function]}
                                      selected={true}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Replace"
                                      value="replace"
                                    >
                                      <div
                                        aria-checked={true}
                                        aria-selected={true}
                                        className="active selected item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Replace
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="replacewithfield"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Replace Field"
                                      value="replacewithfield"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Replace Field
                                        </span>
                                      </div>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </RefFindNode>
                          </Ref>
                        </Dropdown>
                      </Select>
                    </div>
                  </FormField>
                </FormSelect>
                <FormCheckbox
                  as={[Function]}
                  checked={true}
                  control={[Function]}
                  label="Apply to Entire Corpus"
                  name="isCorpus"
                  onChange={[Function]}
                >
                  <FormField
                    checked={true}
                    control={[Function]}
                    label="Apply to Entire Corpus"
                    name="isCorpus"
                    onChange={[Function]}
                  >
                    <div
                      className="field"
                    >
                      <Checkbox
                        checked={true}
                        label="Apply to Entire Corpus"
                        name="isCorpus"
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <div
                          className="ui checked checkbox"
                          onChange={[Function]}
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <input
                                  checked=""
                                  class="hidden"
                                  name="isCorpus"
                                  readonly=""
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <input
                                    checked=""
                                    class="hidden"
                                    name="isCorpus"
                                    readonly=""
                                    tabindex="0"
                                    type="checkbox"
                                    value=""
                                  />,
                                }
                              }
                            >
                              <input
                                checked={true}
                                className="hidden"
                                name="isCorpus"
                                readOnly={true}
                                tabIndex={0}
                                type="checkbox"
                              />
                            </RefFindNode>
                          </Ref>
                          <Ref
                            innerRef={
                              Object {
                                "current": <label>
                                  Apply to Entire Corpus
                                </label>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <label>
                                    Apply to Entire Corpus
                                  </label>,
                                }
                              }
                            >
                              <label>
                                Apply to Entire Corpus
                              </label>
                            </RefFindNode>
                          </Ref>
                        </div>
                      </Checkbox>
                    </div>
                  </FormField>
                </FormCheckbox>
              </div>
            </FormGroup>
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  label="Replace:"
                  name="replace"
                  onChange={[Function]}
                  placeholder="text"
                  value="bob"
                >
                  <FormField
                    control={[Function]}
                    label="Replace:"
                    name="replace"
                    onChange={[Function]}
                    placeholder="text"
                    value="bob"
                  >
                    <div
                      className="field"
                    >
                      <label>
                        Replace:
                      </label>
                      <Input
                        name="replace"
                        onChange={[Function]}
                        placeholder="text"
                        type="text"
                        value="bob"
                      >
                        <div
                          className="ui input"
                        >
                          <input
                            name="replace"
                            onChange={[Function]}
                            placeholder="text"
                            type="text"
                            value="bob"
                          />
                        </div>
                      </Input>
                    </div>
                  </FormField>
                </FormInput>
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  label="with"
                  name="replaceWith"
                  onChange={[Function]}
                  placeholder="text"
                  value="banna"
                >
                  <FormField
                    control={[Function]}
                    label="with"
                    name="replaceWith"
                    onChange={[Function]}
                    placeholder="text"
                    value="banna"
                  >
                    <div
                      className="field"
                    >
                      <label>
                        with
                      </label>
                      <Input
                        name="replaceWith"
                        onChange={[Function]}
                        placeholder="text"
                        type="text"
                        value="banna"
                      >
                        <div
                          className="ui input"
                        >
                          <input
                            name="replaceWith"
                            onChange={[Function]}
                            placeholder="text"
                            type="text"
                            value="banna"
                          />
                        </div>
                      </Input>
                    </div>
                  </FormField>
                </FormInput>
              </div>
            </FormGroup>
            <FormGroup
              widths="equal"
            >
              <div
                className="equal width fields"
              >
                <Button
                  as="button"
                  onClick={[Function]}
                  primary={true}
                >
                  <Ref
                    innerRef={
                      Object {
                        "current": <button
                          class="ui primary button"
                        >
                           Save 
                        </button>,
                      }
                    }
                  >
                    <RefFindNode
                      innerRef={
                        Object {
                          "current": <button
                            class="ui primary button"
                          >
                             Save 
                          </button>,
                        }
                      }
                    >
                      <button
                        className="ui primary button"
                        onClick={[Function]}
                      >
                         Save 
                      </button>
                    </RefFindNode>
                  </Ref>
                </Button>
                <Button
                  as="button"
                  negative={true}
                  onClick={[Function]}
                >
                  <Ref
                    innerRef={
                      Object {
                        "current": <button
                          class="ui negative button"
                        >
                           Delete 
                        </button>,
                      }
                    }
                  >
                    <RefFindNode
                      innerRef={
                        Object {
                          "current": <button
                            class="ui negative button"
                          >
                             Delete 
                          </button>,
                        }
                      }
                    >
                      <button
                        className="ui negative button"
                        onClick={[Function]}
                      >
                         Delete 
                      </button>
                    </RefFindNode>
                  </Ref>
                </Button>
              </div>
            </FormGroup>
          </form>
        </Form>
      </div>
    </Container>
  </div>
</EditForm>
`;

exports[`Edit Form Tests Should handle change of iscorpus and render change 1`] = `
<EditForm
  data={
    Edit {
      "editID": 1,
      "isCorpus": false,
      "replace": "apple",
      "replaceWith": "banna",
      "settings": Object {},
      "structuredDataID": null,
      "type": "replacewithfield",
      "unstructuredDataID": null,
    }
  }
>
  <div>
    <Container>
      <div
        className="ui container"
      >
        <Form
          as="form"
          loading={false}
          size="large"
        >
          <form
            className="ui large form"
            onSubmit={[Function]}
          >
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormSelect
                  as={[Function]}
                  control={[Function]}
                  label="Type:"
                  name="type"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "key": "replace",
                        "text": "Replace",
                        "value": "replace",
                      },
                      Object {
                        "key": "replacewithfield",
                        "text": "Replace Field",
                        "value": "replacewithfield",
                      },
                    ]
                  }
                  placeholder="Choose Type"
                  value="replacewithfield"
                >
                  <FormField
                    control={[Function]}
                    label="Type:"
                    name="type"
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "key": "replace",
                          "text": "Replace",
                          "value": "replace",
                        },
                        Object {
                          "key": "replacewithfield",
                          "text": "Replace Field",
                          "value": "replacewithfield",
                        },
                      ]
                    }
                    placeholder="Choose Type"
                    value="replacewithfield"
                  >
                    <div
                      className="field"
                    >
                      <label>
                        Type:
                      </label>
                      <Select
                        name="type"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "key": "replace",
                              "text": "Replace",
                              "value": "replace",
                            },
                            Object {
                              "key": "replacewithfield",
                              "text": "Replace Field",
                              "value": "replacewithfield",
                            },
                          ]
                        }
                        placeholder="Choose Type"
                        value="replacewithfield"
                      >
                        <Dropdown
                          additionLabel="Add "
                          additionPosition="top"
                          closeOnBlur={true}
                          closeOnEscape={true}
                          deburr={false}
                          icon="dropdown"
                          minCharacters={1}
                          name="type"
                          noResultsMessage="No results found."
                          onChange={[Function]}
                          openOnFocus={true}
                          options={
                            Array [
                              Object {
                                "key": "replace",
                                "text": "Replace",
                                "value": "replace",
                              },
                              Object {
                                "key": "replacewithfield",
                                "text": "Replace Field",
                                "value": "replacewithfield",
                              },
                            ]
                          }
                          placeholder="Choose Type"
                          renderLabel={[Function]}
                          searchInput="text"
                          selectOnBlur={true}
                          selectOnNavigation={true}
                          selection={true}
                          value="replacewithfield"
                          wrapSelection={true}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <div
                                  aria-expanded="false"
                                  class="ui selection dropdown"
                                  name="type"
                                  role="listbox"
                                  tabindex="0"
                                >
                                  <div
                                    aria-atomic="true"
                                    aria-live="polite"
                                    class="text"
                                    role="alert"
                                  >
                                    Replace Field
                                  </div>
                                  <i
                                    aria-hidden="true"
                                    class="dropdown icon"
                                  />
                                  <div
                                    class="menu transition"
                                  >
                                    <div
                                      aria-checked="false"
                                      aria-selected="false"
                                      class="item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Replace
                                      </span>
                                    </div>
                                    <div
                                      aria-checked="true"
                                      aria-selected="true"
                                      class="active selected item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Replace Field
                                      </span>
                                    </div>
                                  </div>
                                </div>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <div
                                    aria-expanded="false"
                                    class="ui selection dropdown"
                                    name="type"
                                    role="listbox"
                                    tabindex="0"
                                  >
                                    <div
                                      aria-atomic="true"
                                      aria-live="polite"
                                      class="text"
                                      role="alert"
                                    >
                                      Replace Field
                                    </div>
                                    <i
                                      aria-hidden="true"
                                      class="dropdown icon"
                                    />
                                    <div
                                      class="menu transition"
                                    >
                                      <div
                                        aria-checked="false"
                                        aria-selected="false"
                                        class="item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Replace
                                        </span>
                                      </div>
                                      <div
                                        aria-checked="true"
                                        aria-selected="true"
                                        class="active selected item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Replace Field
                                        </span>
                                      </div>
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <div
                                aria-expanded={false}
                                className="ui selection dropdown"
                                name="type"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-atomic={true}
                                  aria-live="polite"
                                  className="text"
                                  role="alert"
                                >
                                  Replace Field
                                </div>
                                <Icon
                                  as="i"
                                  className=""
                                  name="dropdown"
                                  onClick={[Function]}
                                >
                                  <i
                                    aria-hidden="true"
                                    className="dropdown icon"
                                    onClick={[Function]}
                                  />
                                </Icon>
                                <DropdownMenu>
                                  <div
                                    className="menu transition"
                                  >
                                    <DropdownItem
                                      active={false}
                                      key="replace"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Replace"
                                      value="replace"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Replace
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={true}
                                      key="replacewithfield"
                                      onClick={[Function]}
                                      selected={true}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Replace Field"
                                      value="replacewithfield"
                                    >
                                      <div
                                        aria-checked={true}
                                        aria-selected={true}
                                        className="active selected item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Replace Field
                                        </span>
                                      </div>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </RefFindNode>
                          </Ref>
                        </Dropdown>
                      </Select>
                    </div>
                  </FormField>
                </FormSelect>
                <FormCheckbox
                  as={[Function]}
                  checked={true}
                  control={[Function]}
                  label="Apply to Entire Corpus"
                  name="isCorpus"
                  onChange={[Function]}
                >
                  <FormField
                    checked={true}
                    control={[Function]}
                    label="Apply to Entire Corpus"
                    name="isCorpus"
                    onChange={[Function]}
                  >
                    <div
                      className="field"
                    >
                      <Checkbox
                        checked={true}
                        label="Apply to Entire Corpus"
                        name="isCorpus"
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <div
                          className="ui checked checkbox"
                          onChange={[Function]}
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <input
                                  checked=""
                                  class="hidden"
                                  name="isCorpus"
                                  readonly=""
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <input
                                    checked=""
                                    class="hidden"
                                    name="isCorpus"
                                    readonly=""
                                    tabindex="0"
                                    type="checkbox"
                                    value=""
                                  />,
                                }
                              }
                            >
                              <input
                                checked={true}
                                className="hidden"
                                name="isCorpus"
                                readOnly={true}
                                tabIndex={0}
                                type="checkbox"
                              />
                            </RefFindNode>
                          </Ref>
                          <Ref
                            innerRef={
                              Object {
                                "current": <label>
                                  Apply to Entire Corpus
                                </label>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <label>
                                    Apply to Entire Corpus
                                  </label>,
                                }
                              }
                            >
                              <label>
                                Apply to Entire Corpus
                              </label>
                            </RefFindNode>
                          </Ref>
                        </div>
                      </Checkbox>
                    </div>
                  </FormField>
                </FormCheckbox>
              </div>
            </FormGroup>
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  label="Replace:"
                  name="replace"
                  onChange={[Function]}
                  placeholder="text"
                  value="apple"
                >
                  <FormField
                    control={[Function]}
                    label="Replace:"
                    name="replace"
                    onChange={[Function]}
                    placeholder="text"
                    value="apple"
                  >
                    <div
                      className="field"
                    >
                      <label>
                        Replace:
                      </label>
                      <Input
                        name="replace"
                        onChange={[Function]}
                        placeholder="text"
                        type="text"
                        value="apple"
                      >
                        <div
                          className="ui input"
                        >
                          <input
                            name="replace"
                            onChange={[Function]}
                            placeholder="text"
                            type="text"
                            value="apple"
                          />
                        </div>
                      </Input>
                    </div>
                  </FormField>
                </FormInput>
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  label="with"
                  name="replaceWith"
                  onChange={[Function]}
                  placeholder="text"
                  value="banna"
                >
                  <FormField
                    control={[Function]}
                    label="with"
                    name="replaceWith"
                    onChange={[Function]}
                    placeholder="text"
                    value="banna"
                  >
                    <div
                      className="field"
                    >
                      <label>
                        with
                      </label>
                      <Input
                        name="replaceWith"
                        onChange={[Function]}
                        placeholder="text"
                        type="text"
                        value="banna"
                      >
                        <div
                          className="ui input"
                        >
                          <input
                            name="replaceWith"
                            onChange={[Function]}
                            placeholder="text"
                            type="text"
                            value="banna"
                          />
                        </div>
                      </Input>
                    </div>
                  </FormField>
                </FormInput>
              </div>
            </FormGroup>
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormSelect
                  as={[Function]}
                  control={[Function]}
                  label="Type:"
                  name="field"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "key": "Player",
                        "text": "Player",
                        "value": "Player",
                      },
                      Object {
                        "key": "Coach",
                        "text": "Coach",
                        "value": "Coach",
                      },
                    ]
                  }
                  placeholder="Choose Field"
                >
                  <FormField
                    control={[Function]}
                    label="Type:"
                    name="field"
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "key": "Player",
                          "text": "Player",
                          "value": "Player",
                        },
                        Object {
                          "key": "Coach",
                          "text": "Coach",
                          "value": "Coach",
                        },
                      ]
                    }
                    placeholder="Choose Field"
                  >
                    <div
                      className="field"
                    >
                      <label>
                        Type:
                      </label>
                      <Select
                        name="field"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "key": "Player",
                              "text": "Player",
                              "value": "Player",
                            },
                            Object {
                              "key": "Coach",
                              "text": "Coach",
                              "value": "Coach",
                            },
                          ]
                        }
                        placeholder="Choose Field"
                      >
                        <Dropdown
                          additionLabel="Add "
                          additionPosition="top"
                          closeOnBlur={true}
                          closeOnEscape={true}
                          deburr={false}
                          icon="dropdown"
                          minCharacters={1}
                          name="field"
                          noResultsMessage="No results found."
                          onChange={[Function]}
                          openOnFocus={true}
                          options={
                            Array [
                              Object {
                                "key": "Player",
                                "text": "Player",
                                "value": "Player",
                              },
                              Object {
                                "key": "Coach",
                                "text": "Coach",
                                "value": "Coach",
                              },
                            ]
                          }
                          placeholder="Choose Field"
                          renderLabel={[Function]}
                          searchInput="text"
                          selectOnBlur={true}
                          selectOnNavigation={true}
                          selection={true}
                          wrapSelection={true}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <div
                                  aria-expanded="false"
                                  class="ui selection dropdown"
                                  name="field"
                                  role="listbox"
                                  tabindex="0"
                                >
                                  <div
                                    aria-atomic="true"
                                    aria-live="polite"
                                    class="default text"
                                    role="alert"
                                  >
                                    Choose Field
                                  </div>
                                  <i
                                    aria-hidden="true"
                                    class="dropdown icon"
                                  />
                                  <div
                                    class="menu transition"
                                  >
                                    <div
                                      aria-checked="false"
                                      aria-selected="true"
                                      class="selected item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Player
                                      </span>
                                    </div>
                                    <div
                                      aria-checked="false"
                                      aria-selected="false"
                                      class="item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Coach
                                      </span>
                                    </div>
                                  </div>
                                </div>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <div
                                    aria-expanded="false"
                                    class="ui selection dropdown"
                                    name="field"
                                    role="listbox"
                                    tabindex="0"
                                  >
                                    <div
                                      aria-atomic="true"
                                      aria-live="polite"
                                      class="default text"
                                      role="alert"
                                    >
                                      Choose Field
                                    </div>
                                    <i
                                      aria-hidden="true"
                                      class="dropdown icon"
                                    />
                                    <div
                                      class="menu transition"
                                    >
                                      <div
                                        aria-checked="false"
                                        aria-selected="true"
                                        class="selected item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Player
                                        </span>
                                      </div>
                                      <div
                                        aria-checked="false"
                                        aria-selected="false"
                                        class="item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Coach
                                        </span>
                                      </div>
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <div
                                aria-expanded={false}
                                className="ui selection dropdown"
                                name="field"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-atomic={true}
                                  aria-live="polite"
                                  className="default text"
                                  role="alert"
                                >
                                  Choose Field
                                </div>
                                <Icon
                                  as="i"
                                  className=""
                                  name="dropdown"
                                  onClick={[Function]}
                                >
                                  <i
                                    aria-hidden="true"
                                    className="dropdown icon"
                                    onClick={[Function]}
                                  />
                                </Icon>
                                <DropdownMenu>
                                  <div
                                    className="menu transition"
                                  >
                                    <DropdownItem
                                      active={false}
                                      key="Player"
                                      onClick={[Function]}
                                      selected={true}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Player"
                                      value="Player"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={true}
                                        className="selected item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Player
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="Coach"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Coach"
                                      value="Coach"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Coach
                                        </span>
                                      </div>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </RefFindNode>
                          </Ref>
                        </Dropdown>
                      </Select>
                    </div>
                  </FormField>
                </FormSelect>
              </div>
            </FormGroup>
            <FormGroup
              widths="equal"
            >
              <div
                className="equal width fields"
              >
                <Button
                  as="button"
                  onClick={[Function]}
                  primary={true}
                >
                  <Ref
                    innerRef={
                      Object {
                        "current": <button
                          class="ui primary button"
                        >
                           Save 
                        </button>,
                      }
                    }
                  >
                    <RefFindNode
                      innerRef={
                        Object {
                          "current": <button
                            class="ui primary button"
                          >
                             Save 
                          </button>,
                        }
                      }
                    >
                      <button
                        className="ui primary button"
                        onClick={[Function]}
                      >
                         Save 
                      </button>
                    </RefFindNode>
                  </Ref>
                </Button>
                <Button
                  as="button"
                  negative={true}
                  onClick={[Function]}
                >
                  <Ref
                    innerRef={
                      Object {
                        "current": <button
                          class="ui negative button"
                        >
                           Delete 
                        </button>,
                      }
                    }
                  >
                    <RefFindNode
                      innerRef={
                        Object {
                          "current": <button
                            class="ui negative button"
                          >
                             Delete 
                          </button>,
                        }
                      }
                    >
                      <button
                        className="ui negative button"
                        onClick={[Function]}
                      >
                         Delete 
                      </button>
                    </RefFindNode>
                  </Ref>
                </Button>
              </div>
            </FormGroup>
          </form>
        </Form>
      </div>
    </Container>
  </div>
</EditForm>
`;

exports[`Edit Form Tests Should handle change of iscorpus and render change 2`] = `
<EditForm
  data={
    Edit {
      "editID": 1,
      "isCorpus": true,
      "replace": "bob",
      "replaceWith": "banna",
      "settings": Object {},
      "structuredDataID": 1,
      "type": "replace",
      "unstructuredDataID": null,
    }
  }
>
  <div>
    <Container>
      <div
        className="ui container"
      >
        <Form
          as="form"
          loading={false}
          size="large"
        >
          <form
            className="ui large form"
            onSubmit={[Function]}
          >
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormSelect
                  as={[Function]}
                  control={[Function]}
                  label="Type:"
                  name="type"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "key": "replace",
                        "text": "Replace",
                        "value": "replace",
                      },
                      Object {
                        "key": "replacewithfield",
                        "text": "Replace Field",
                        "value": "replacewithfield",
                      },
                    ]
                  }
                  placeholder="Choose Type"
                  value="replace"
                >
                  <FormField
                    control={[Function]}
                    label="Type:"
                    name="type"
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "key": "replace",
                          "text": "Replace",
                          "value": "replace",
                        },
                        Object {
                          "key": "replacewithfield",
                          "text": "Replace Field",
                          "value": "replacewithfield",
                        },
                      ]
                    }
                    placeholder="Choose Type"
                    value="replace"
                  >
                    <div
                      className="field"
                    >
                      <label>
                        Type:
                      </label>
                      <Select
                        name="type"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "key": "replace",
                              "text": "Replace",
                              "value": "replace",
                            },
                            Object {
                              "key": "replacewithfield",
                              "text": "Replace Field",
                              "value": "replacewithfield",
                            },
                          ]
                        }
                        placeholder="Choose Type"
                        value="replace"
                      >
                        <Dropdown
                          additionLabel="Add "
                          additionPosition="top"
                          closeOnBlur={true}
                          closeOnEscape={true}
                          deburr={false}
                          icon="dropdown"
                          minCharacters={1}
                          name="type"
                          noResultsMessage="No results found."
                          onChange={[Function]}
                          openOnFocus={true}
                          options={
                            Array [
                              Object {
                                "key": "replace",
                                "text": "Replace",
                                "value": "replace",
                              },
                              Object {
                                "key": "replacewithfield",
                                "text": "Replace Field",
                                "value": "replacewithfield",
                              },
                            ]
                          }
                          placeholder="Choose Type"
                          renderLabel={[Function]}
                          searchInput="text"
                          selectOnBlur={true}
                          selectOnNavigation={true}
                          selection={true}
                          value="replace"
                          wrapSelection={true}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <div
                                  aria-expanded="false"
                                  class="ui selection dropdown"
                                  name="type"
                                  role="listbox"
                                  tabindex="0"
                                >
                                  <div
                                    aria-atomic="true"
                                    aria-live="polite"
                                    class="text"
                                    role="alert"
                                  >
                                    Replace
                                  </div>
                                  <i
                                    aria-hidden="true"
                                    class="dropdown icon"
                                  />
                                  <div
                                    class="menu transition"
                                  >
                                    <div
                                      aria-checked="true"
                                      aria-selected="true"
                                      class="active selected item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Replace
                                      </span>
                                    </div>
                                    <div
                                      aria-checked="false"
                                      aria-selected="false"
                                      class="item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Replace Field
                                      </span>
                                    </div>
                                  </div>
                                </div>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <div
                                    aria-expanded="false"
                                    class="ui selection dropdown"
                                    name="type"
                                    role="listbox"
                                    tabindex="0"
                                  >
                                    <div
                                      aria-atomic="true"
                                      aria-live="polite"
                                      class="text"
                                      role="alert"
                                    >
                                      Replace
                                    </div>
                                    <i
                                      aria-hidden="true"
                                      class="dropdown icon"
                                    />
                                    <div
                                      class="menu transition"
                                    >
                                      <div
                                        aria-checked="true"
                                        aria-selected="true"
                                        class="active selected item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Replace
                                        </span>
                                      </div>
                                      <div
                                        aria-checked="false"
                                        aria-selected="false"
                                        class="item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Replace Field
                                        </span>
                                      </div>
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <div
                                aria-expanded={false}
                                className="ui selection dropdown"
                                name="type"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-atomic={true}
                                  aria-live="polite"
                                  className="text"
                                  role="alert"
                                >
                                  Replace
                                </div>
                                <Icon
                                  as="i"
                                  className=""
                                  name="dropdown"
                                  onClick={[Function]}
                                >
                                  <i
                                    aria-hidden="true"
                                    className="dropdown icon"
                                    onClick={[Function]}
                                  />
                                </Icon>
                                <DropdownMenu>
                                  <div
                                    className="menu transition"
                                  >
                                    <DropdownItem
                                      active={true}
                                      key="replace"
                                      onClick={[Function]}
                                      selected={true}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Replace"
                                      value="replace"
                                    >
                                      <div
                                        aria-checked={true}
                                        aria-selected={true}
                                        className="active selected item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Replace
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="replacewithfield"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Replace Field"
                                      value="replacewithfield"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Replace Field
                                        </span>
                                      </div>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </RefFindNode>
                          </Ref>
                        </Dropdown>
                      </Select>
                    </div>
                  </FormField>
                </FormSelect>
                <FormCheckbox
                  as={[Function]}
                  checked={true}
                  control={[Function]}
                  label="Apply to Entire Corpus"
                  name="isCorpus"
                  onChange={[Function]}
                >
                  <FormField
                    checked={true}
                    control={[Function]}
                    label="Apply to Entire Corpus"
                    name="isCorpus"
                    onChange={[Function]}
                  >
                    <div
                      className="field"
                    >
                      <Checkbox
                        checked={true}
                        label="Apply to Entire Corpus"
                        name="isCorpus"
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <div
                          className="ui checked checkbox"
                          onChange={[Function]}
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <input
                                  checked=""
                                  class="hidden"
                                  name="isCorpus"
                                  readonly=""
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <input
                                    checked=""
                                    class="hidden"
                                    name="isCorpus"
                                    readonly=""
                                    tabindex="0"
                                    type="checkbox"
                                    value=""
                                  />,
                                }
                              }
                            >
                              <input
                                checked={true}
                                className="hidden"
                                name="isCorpus"
                                readOnly={true}
                                tabIndex={0}
                                type="checkbox"
                              />
                            </RefFindNode>
                          </Ref>
                          <Ref
                            innerRef={
                              Object {
                                "current": <label>
                                  Apply to Entire Corpus
                                </label>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <label>
                                    Apply to Entire Corpus
                                  </label>,
                                }
                              }
                            >
                              <label>
                                Apply to Entire Corpus
                              </label>
                            </RefFindNode>
                          </Ref>
                        </div>
                      </Checkbox>
                    </div>
                  </FormField>
                </FormCheckbox>
              </div>
            </FormGroup>
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  label="Replace:"
                  name="replace"
                  onChange={[Function]}
                  placeholder="text"
                  value="bob"
                >
                  <FormField
                    control={[Function]}
                    label="Replace:"
                    name="replace"
                    onChange={[Function]}
                    placeholder="text"
                    value="bob"
                  >
                    <div
                      className="field"
                    >
                      <label>
                        Replace:
                      </label>
                      <Input
                        name="replace"
                        onChange={[Function]}
                        placeholder="text"
                        type="text"
                        value="bob"
                      >
                        <div
                          className="ui input"
                        >
                          <input
                            name="replace"
                            onChange={[Function]}
                            placeholder="text"
                            type="text"
                            value="bob"
                          />
                        </div>
                      </Input>
                    </div>
                  </FormField>
                </FormInput>
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  label="with"
                  name="replaceWith"
                  onChange={[Function]}
                  placeholder="text"
                  value="banna"
                >
                  <FormField
                    control={[Function]}
                    label="with"
                    name="replaceWith"
                    onChange={[Function]}
                    placeholder="text"
                    value="banna"
                  >
                    <div
                      className="field"
                    >
                      <label>
                        with
                      </label>
                      <Input
                        name="replaceWith"
                        onChange={[Function]}
                        placeholder="text"
                        type="text"
                        value="banna"
                      >
                        <div
                          className="ui input"
                        >
                          <input
                            name="replaceWith"
                            onChange={[Function]}
                            placeholder="text"
                            type="text"
                            value="banna"
                          />
                        </div>
                      </Input>
                    </div>
                  </FormField>
                </FormInput>
              </div>
            </FormGroup>
            <FormGroup
              widths="equal"
            >
              <div
                className="equal width fields"
              >
                <Button
                  as="button"
                  onClick={[Function]}
                  primary={true}
                >
                  <Ref
                    innerRef={
                      Object {
                        "current": <button
                          class="ui primary button"
                        >
                           Save 
                        </button>,
                      }
                    }
                  >
                    <RefFindNode
                      innerRef={
                        Object {
                          "current": <button
                            class="ui primary button"
                          >
                             Save 
                          </button>,
                        }
                      }
                    >
                      <button
                        className="ui primary button"
                        onClick={[Function]}
                      >
                         Save 
                      </button>
                    </RefFindNode>
                  </Ref>
                </Button>
                <Button
                  as="button"
                  negative={true}
                  onClick={[Function]}
                >
                  <Ref
                    innerRef={
                      Object {
                        "current": <button
                          class="ui negative button"
                        >
                           Delete 
                        </button>,
                      }
                    }
                  >
                    <RefFindNode
                      innerRef={
                        Object {
                          "current": <button
                            class="ui negative button"
                          >
                             Delete 
                          </button>,
                        }
                      }
                    >
                      <button
                        className="ui negative button"
                        onClick={[Function]}
                      >
                         Delete 
                      </button>
                    </RefFindNode>
                  </Ref>
                </Button>
              </div>
            </FormGroup>
          </form>
        </Form>
      </div>
    </Container>
  </div>
</EditForm>
`;

exports[`Edit Form Tests Should render correctly for error 1`] = `
<EditForm>
  <div>
    <Message
      negative={true}
    >
      <div
        className="ui negative message"
      >
        <MessageHeader>
          <div
            className="header"
          >
            An error has occured
          </div>
        </MessageHeader>
        <p>
          Something has gone wrong! Reloading the page may fix the issue
        </p>
      </div>
    </Message>
  </div>
</EditForm>
`;

exports[`Edit Form Tests Should render correctly for loading existing data 1`] = `
<EditForm
  id={5}
>
  <div />
</EditForm>
`;

exports[`Edit Form Tests Should render correctly for missing data 1`] = `
<EditForm>
  <div>
    <Message
      warning={true}
    >
      <div
        className="ui warning message"
      >
        <MessageHeader>
          <div
            className="header"
          >
            We couldn't find what you are looking for 
          </div>
        </MessageHeader>
        <p>
          404: We tried really hard and couldn't find the data you wanted :(
        </p>
      </div>
    </Message>
  </div>
</EditForm>
`;

exports[`Edit Form Tests Should render correctly for new edit 1`] = `
<div>
  <div
    className="ui container"
  >
    <form
      className="ui large form"
      onSubmit={[Function]}
    >
      <div
        className="inline fields"
      >
        <div
          className="field"
        >
          <label>
            Type:
          </label>
          <div
            aria-expanded={false}
            className="ui selection dropdown"
            name="type"
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseDown={[Function]}
            role="listbox"
            tabIndex={0}
          >
            <div
              aria-atomic={true}
              aria-live="polite"
              className="default text"
              role="alert"
            >
              Choose Type
            </div>
            <i
              aria-hidden="true"
              className="dropdown icon"
              onClick={[Function]}
            />
            <div
              className="menu transition"
            >
              <div
                aria-checked={false}
                aria-selected={true}
                className="selected item"
                onClick={[Function]}
                role="option"
                style={
                  Object {
                    "pointerEvents": "all",
                  }
                }
              >
                <span
                  className="text"
                >
                  Replace
                </span>
              </div>
              <div
                aria-checked={false}
                aria-selected={false}
                className="item"
                onClick={[Function]}
                role="option"
                style={
                  Object {
                    "pointerEvents": "all",
                  }
                }
              >
                <span
                  className="text"
                >
                  Replace Field
                </span>
              </div>
            </div>
          </div>
        </div>
        <div
          className="field"
        >
          <div
            className="ui checkbox"
            onChange={[Function]}
            onClick={[Function]}
            onMouseDown={[Function]}
            onMouseUp={[Function]}
          >
            <input
              checked={false}
              className="hidden"
              name="isCorpus"
              readOnly={true}
              tabIndex={0}
              type="checkbox"
            />
            <label>
              Apply to Entire Corpus
            </label>
          </div>
        </div>
        <div
          style={
            Object {
              "padding": "0px 15px 0px 15px",
            }
          }
        >
          <b>
             
            Data
            :
          </b>
          <div
            style={
              Object {
                "float": "right",
                "padding": "0px 0px 0px 5px",
              }
            }
          >
            No Data Selected
             
          </div>
        </div>
        <button
          className="ui primary button"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          Change
        </button>
      </div>
      <div
        className="inline fields"
      >
        <div
          className="field"
        >
          <label>
            Replace:
          </label>
          <div
            className="ui input"
          >
            <input
              name="replace"
              onChange={[Function]}
              placeholder="text"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          className="field"
        >
          <label>
            with
          </label>
          <div
            className="ui input"
          >
            <input
              name="replaceWith"
              onChange={[Function]}
              placeholder="text"
              type="text"
              value=""
            />
          </div>
        </div>
      </div>
      <div
        className="equal width fields"
      >
        <button
          className="ui primary button"
          onClick={[Function]}
        >
           Save 
        </button>
        
      </div>
    </form>
  </div>
</div>
`;

exports[`Edit Form Tests Should render correctly for saving new data 1`] = `
<EditForm>
  <div>
    <Container>
      <div
        className="ui container"
      >
        <Form
          as="form"
          loading={true}
          size="large"
        >
          <form
            className="ui large loading form"
            onSubmit={[Function]}
          >
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormSelect
                  as={[Function]}
                  control={[Function]}
                  label="Type:"
                  name="type"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "key": "replace",
                        "text": "Replace",
                        "value": "replace",
                      },
                      Object {
                        "key": "replacewithfield",
                        "text": "Replace Field",
                        "value": "replacewithfield",
                      },
                    ]
                  }
                  placeholder="Choose Type"
                  value=""
                >
                  <FormField
                    control={[Function]}
                    label="Type:"
                    name="type"
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "key": "replace",
                          "text": "Replace",
                          "value": "replace",
                        },
                        Object {
                          "key": "replacewithfield",
                          "text": "Replace Field",
                          "value": "replacewithfield",
                        },
                      ]
                    }
                    placeholder="Choose Type"
                    value=""
                  >
                    <div
                      className="field"
                    >
                      <label>
                        Type:
                      </label>
                      <Select
                        name="type"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "key": "replace",
                              "text": "Replace",
                              "value": "replace",
                            },
                            Object {
                              "key": "replacewithfield",
                              "text": "Replace Field",
                              "value": "replacewithfield",
                            },
                          ]
                        }
                        placeholder="Choose Type"
                        value=""
                      >
                        <Dropdown
                          additionLabel="Add "
                          additionPosition="top"
                          closeOnBlur={true}
                          closeOnEscape={true}
                          deburr={false}
                          icon="dropdown"
                          minCharacters={1}
                          name="type"
                          noResultsMessage="No results found."
                          onChange={[Function]}
                          openOnFocus={true}
                          options={
                            Array [
                              Object {
                                "key": "replace",
                                "text": "Replace",
                                "value": "replace",
                              },
                              Object {
                                "key": "replacewithfield",
                                "text": "Replace Field",
                                "value": "replacewithfield",
                              },
                            ]
                          }
                          placeholder="Choose Type"
                          renderLabel={[Function]}
                          searchInput="text"
                          selectOnBlur={true}
                          selectOnNavigation={true}
                          selection={true}
                          value=""
                          wrapSelection={true}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <div
                                  aria-expanded="false"
                                  class="ui selection dropdown"
                                  name="type"
                                  role="listbox"
                                  tabindex="0"
                                >
                                  <div
                                    aria-atomic="true"
                                    aria-live="polite"
                                    class="default text"
                                    role="alert"
                                  >
                                    Choose Type
                                  </div>
                                  <i
                                    aria-hidden="true"
                                    class="dropdown icon"
                                  />
                                  <div
                                    class="menu transition"
                                  >
                                    <div
                                      aria-checked="false"
                                      aria-selected="true"
                                      class="selected item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Replace
                                      </span>
                                    </div>
                                    <div
                                      aria-checked="false"
                                      aria-selected="false"
                                      class="item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Replace Field
                                      </span>
                                    </div>
                                  </div>
                                </div>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <div
                                    aria-expanded="false"
                                    class="ui selection dropdown"
                                    name="type"
                                    role="listbox"
                                    tabindex="0"
                                  >
                                    <div
                                      aria-atomic="true"
                                      aria-live="polite"
                                      class="default text"
                                      role="alert"
                                    >
                                      Choose Type
                                    </div>
                                    <i
                                      aria-hidden="true"
                                      class="dropdown icon"
                                    />
                                    <div
                                      class="menu transition"
                                    >
                                      <div
                                        aria-checked="false"
                                        aria-selected="true"
                                        class="selected item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Replace
                                        </span>
                                      </div>
                                      <div
                                        aria-checked="false"
                                        aria-selected="false"
                                        class="item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Replace Field
                                        </span>
                                      </div>
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <div
                                aria-expanded={false}
                                className="ui selection dropdown"
                                name="type"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-atomic={true}
                                  aria-live="polite"
                                  className="default text"
                                  role="alert"
                                >
                                  Choose Type
                                </div>
                                <Icon
                                  as="i"
                                  className=""
                                  name="dropdown"
                                  onClick={[Function]}
                                >
                                  <i
                                    aria-hidden="true"
                                    className="dropdown icon"
                                    onClick={[Function]}
                                  />
                                </Icon>
                                <DropdownMenu>
                                  <div
                                    className="menu transition"
                                  >
                                    <DropdownItem
                                      active={false}
                                      key="replace"
                                      onClick={[Function]}
                                      selected={true}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Replace"
                                      value="replace"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={true}
                                        className="selected item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Replace
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="replacewithfield"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Replace Field"
                                      value="replacewithfield"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Replace Field
                                        </span>
                                      </div>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </RefFindNode>
                          </Ref>
                        </Dropdown>
                      </Select>
                    </div>
                  </FormField>
                </FormSelect>
                <FormCheckbox
                  as={[Function]}
                  checked={false}
                  control={[Function]}
                  label="Apply to Entire Corpus"
                  name="isCorpus"
                  onChange={[Function]}
                >
                  <FormField
                    checked={false}
                    control={[Function]}
                    label="Apply to Entire Corpus"
                    name="isCorpus"
                    onChange={[Function]}
                  >
                    <div
                      className="field"
                    >
                      <Checkbox
                        checked={false}
                        label="Apply to Entire Corpus"
                        name="isCorpus"
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <div
                          className="ui checkbox"
                          onChange={[Function]}
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <input
                                  class="hidden"
                                  name="isCorpus"
                                  readonly=""
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <input
                                    class="hidden"
                                    name="isCorpus"
                                    readonly=""
                                    tabindex="0"
                                    type="checkbox"
                                    value=""
                                  />,
                                }
                              }
                            >
                              <input
                                checked={false}
                                className="hidden"
                                name="isCorpus"
                                readOnly={true}
                                tabIndex={0}
                                type="checkbox"
                              />
                            </RefFindNode>
                          </Ref>
                          <Ref
                            innerRef={
                              Object {
                                "current": <label>
                                  Apply to Entire Corpus
                                </label>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <label>
                                    Apply to Entire Corpus
                                  </label>,
                                }
                              }
                            >
                              <label>
                                Apply to Entire Corpus
                              </label>
                            </RefFindNode>
                          </Ref>
                        </div>
                      </Checkbox>
                    </div>
                  </FormField>
                </FormCheckbox>
                <DataPair
                  label="Data"
                  text="No Data Selected"
                >
                  <div
                    style={
                      Object {
                        "padding": "0px 15px 0px 15px",
                      }
                    }
                  >
                    <b>
                       
                      Data
                      :
                    </b>
                    <div
                      style={
                        Object {
                          "float": "right",
                          "padding": "0px 0px 0px 5px",
                        }
                      }
                    >
                      No Data Selected
                       
                    </div>
                  </div>
                </DataPair>
                <ChooseDataModal
                  onSelect={[Function]}
                >
                  <Modal
                    centered={true}
                    closeIcon={true}
                    closeOnDimmerClick={true}
                    closeOnDocumentClick={false}
                    dimmer={true}
                    eventPool="Modal"
                    onClose={[Function]}
                    onOpen={[Function]}
                    open={false}
                    trigger={
                      <Button
                        as="button"
                        onClick={[Function]}
                        primary={true}
                      >
                        Change
                      </Button>
                    }
                  >
                    <Portal
                      closeOnDocumentClick={false}
                      closeOnEscape={true}
                      eventPool="Modal"
                      mountNode={<body />}
                      onClose={[Function]}
                      onMount={[Function]}
                      onOpen={[Function]}
                      onUnmount={[Function]}
                      open={false}
                      openOnTriggerClick={true}
                      trigger={
                        <Button
                          as="button"
                          onClick={[Function]}
                          primary={true}
                        >
                          Change
                        </Button>
                      }
                    >
                      <Ref
                        innerRef={[Function]}
                      >
                        <RefFindNode
                          innerRef={[Function]}
                        >
                          <Button
                            as="button"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            primary={true}
                          >
                            <Ref
                              innerRef={
                                Object {
                                  "current": <button
                                    class="ui primary button"
                                  >
                                    Change
                                  </button>,
                                }
                              }
                            >
                              <RefFindNode
                                innerRef={
                                  Object {
                                    "current": <button
                                      class="ui primary button"
                                    >
                                      Change
                                    </button>,
                                  }
                                }
                              >
                                <button
                                  className="ui primary button"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  Change
                                </button>
                              </RefFindNode>
                            </Ref>
                          </Button>
                        </RefFindNode>
                      </Ref>
                    </Portal>
                  </Modal>
                </ChooseDataModal>
              </div>
            </FormGroup>
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  label="Replace:"
                  name="replace"
                  onChange={[Function]}
                  placeholder="text"
                  value=""
                >
                  <FormField
                    control={[Function]}
                    label="Replace:"
                    name="replace"
                    onChange={[Function]}
                    placeholder="text"
                    value=""
                  >
                    <div
                      className="field"
                    >
                      <label>
                        Replace:
                      </label>
                      <Input
                        name="replace"
                        onChange={[Function]}
                        placeholder="text"
                        type="text"
                        value=""
                      >
                        <div
                          className="ui input"
                        >
                          <input
                            name="replace"
                            onChange={[Function]}
                            placeholder="text"
                            type="text"
                            value=""
                          />
                        </div>
                      </Input>
                    </div>
                  </FormField>
                </FormInput>
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  label="with"
                  name="replaceWith"
                  onChange={[Function]}
                  placeholder="text"
                  value=""
                >
                  <FormField
                    control={[Function]}
                    label="with"
                    name="replaceWith"
                    onChange={[Function]}
                    placeholder="text"
                    value=""
                  >
                    <div
                      className="field"
                    >
                      <label>
                        with
                      </label>
                      <Input
                        name="replaceWith"
                        onChange={[Function]}
                        placeholder="text"
                        type="text"
                        value=""
                      >
                        <div
                          className="ui input"
                        >
                          <input
                            name="replaceWith"
                            onChange={[Function]}
                            placeholder="text"
                            type="text"
                            value=""
                          />
                        </div>
                      </Input>
                    </div>
                  </FormField>
                </FormInput>
              </div>
            </FormGroup>
            <FormGroup
              widths="equal"
            >
              <div
                className="equal width fields"
              >
                <Button
                  as="button"
                  onClick={[Function]}
                  primary={true}
                >
                  <Ref
                    innerRef={
                      Object {
                        "current": <button
                          class="ui primary button"
                        >
                           Save 
                        </button>,
                      }
                    }
                  >
                    <RefFindNode
                      innerRef={
                        Object {
                          "current": <button
                            class="ui primary button"
                          >
                             Save 
                          </button>,
                        }
                      }
                    >
                      <button
                        className="ui primary button"
                        onClick={[Function]}
                      >
                         Save 
                      </button>
                    </RefFindNode>
                  </Ref>
                </Button>
              </div>
            </FormGroup>
          </form>
        </Form>
      </div>
    </Container>
  </div>
</EditForm>
`;

exports[`Edit Form Tests Should render correctly for successful save 1`] = `
<EditForm>
  <div>
    <Container>
      <div
        className="ui container"
      >
        <Form
          as="form"
          loading={false}
          size="large"
        >
          <form
            className="ui large form"
            onSubmit={[Function]}
          >
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormSelect
                  as={[Function]}
                  control={[Function]}
                  label="Type:"
                  name="type"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "key": "replace",
                        "text": "Replace",
                        "value": "replace",
                      },
                      Object {
                        "key": "replacewithfield",
                        "text": "Replace Field",
                        "value": "replacewithfield",
                      },
                    ]
                  }
                  placeholder="Choose Type"
                  value=""
                >
                  <FormField
                    control={[Function]}
                    label="Type:"
                    name="type"
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "key": "replace",
                          "text": "Replace",
                          "value": "replace",
                        },
                        Object {
                          "key": "replacewithfield",
                          "text": "Replace Field",
                          "value": "replacewithfield",
                        },
                      ]
                    }
                    placeholder="Choose Type"
                    value=""
                  >
                    <div
                      className="field"
                    >
                      <label>
                        Type:
                      </label>
                      <Select
                        name="type"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "key": "replace",
                              "text": "Replace",
                              "value": "replace",
                            },
                            Object {
                              "key": "replacewithfield",
                              "text": "Replace Field",
                              "value": "replacewithfield",
                            },
                          ]
                        }
                        placeholder="Choose Type"
                        value=""
                      >
                        <Dropdown
                          additionLabel="Add "
                          additionPosition="top"
                          closeOnBlur={true}
                          closeOnEscape={true}
                          deburr={false}
                          icon="dropdown"
                          minCharacters={1}
                          name="type"
                          noResultsMessage="No results found."
                          onChange={[Function]}
                          openOnFocus={true}
                          options={
                            Array [
                              Object {
                                "key": "replace",
                                "text": "Replace",
                                "value": "replace",
                              },
                              Object {
                                "key": "replacewithfield",
                                "text": "Replace Field",
                                "value": "replacewithfield",
                              },
                            ]
                          }
                          placeholder="Choose Type"
                          renderLabel={[Function]}
                          searchInput="text"
                          selectOnBlur={true}
                          selectOnNavigation={true}
                          selection={true}
                          value=""
                          wrapSelection={true}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <div
                                  aria-expanded="false"
                                  class="ui selection dropdown"
                                  name="type"
                                  role="listbox"
                                  tabindex="0"
                                >
                                  <div
                                    aria-atomic="true"
                                    aria-live="polite"
                                    class="default text"
                                    role="alert"
                                  >
                                    Choose Type
                                  </div>
                                  <i
                                    aria-hidden="true"
                                    class="dropdown icon"
                                  />
                                  <div
                                    class="menu transition"
                                  >
                                    <div
                                      aria-checked="false"
                                      aria-selected="true"
                                      class="selected item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Replace
                                      </span>
                                    </div>
                                    <div
                                      aria-checked="false"
                                      aria-selected="false"
                                      class="item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Replace Field
                                      </span>
                                    </div>
                                  </div>
                                </div>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <div
                                    aria-expanded="false"
                                    class="ui selection dropdown"
                                    name="type"
                                    role="listbox"
                                    tabindex="0"
                                  >
                                    <div
                                      aria-atomic="true"
                                      aria-live="polite"
                                      class="default text"
                                      role="alert"
                                    >
                                      Choose Type
                                    </div>
                                    <i
                                      aria-hidden="true"
                                      class="dropdown icon"
                                    />
                                    <div
                                      class="menu transition"
                                    >
                                      <div
                                        aria-checked="false"
                                        aria-selected="true"
                                        class="selected item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Replace
                                        </span>
                                      </div>
                                      <div
                                        aria-checked="false"
                                        aria-selected="false"
                                        class="item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Replace Field
                                        </span>
                                      </div>
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <div
                                aria-expanded={false}
                                className="ui selection dropdown"
                                name="type"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-atomic={true}
                                  aria-live="polite"
                                  className="default text"
                                  role="alert"
                                >
                                  Choose Type
                                </div>
                                <Icon
                                  as="i"
                                  className=""
                                  name="dropdown"
                                  onClick={[Function]}
                                >
                                  <i
                                    aria-hidden="true"
                                    className="dropdown icon"
                                    onClick={[Function]}
                                  />
                                </Icon>
                                <DropdownMenu>
                                  <div
                                    className="menu transition"
                                  >
                                    <DropdownItem
                                      active={false}
                                      key="replace"
                                      onClick={[Function]}
                                      selected={true}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Replace"
                                      value="replace"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={true}
                                        className="selected item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Replace
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="replacewithfield"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Replace Field"
                                      value="replacewithfield"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Replace Field
                                        </span>
                                      </div>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </RefFindNode>
                          </Ref>
                        </Dropdown>
                      </Select>
                    </div>
                  </FormField>
                </FormSelect>
                <FormCheckbox
                  as={[Function]}
                  checked={false}
                  control={[Function]}
                  label="Apply to Entire Corpus"
                  name="isCorpus"
                  onChange={[Function]}
                >
                  <FormField
                    checked={false}
                    control={[Function]}
                    label="Apply to Entire Corpus"
                    name="isCorpus"
                    onChange={[Function]}
                  >
                    <div
                      className="field"
                    >
                      <Checkbox
                        checked={false}
                        label="Apply to Entire Corpus"
                        name="isCorpus"
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <div
                          className="ui checkbox"
                          onChange={[Function]}
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <input
                                  class="hidden"
                                  name="isCorpus"
                                  readonly=""
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <input
                                    class="hidden"
                                    name="isCorpus"
                                    readonly=""
                                    tabindex="0"
                                    type="checkbox"
                                    value=""
                                  />,
                                }
                              }
                            >
                              <input
                                checked={false}
                                className="hidden"
                                name="isCorpus"
                                readOnly={true}
                                tabIndex={0}
                                type="checkbox"
                              />
                            </RefFindNode>
                          </Ref>
                          <Ref
                            innerRef={
                              Object {
                                "current": <label>
                                  Apply to Entire Corpus
                                </label>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <label>
                                    Apply to Entire Corpus
                                  </label>,
                                }
                              }
                            >
                              <label>
                                Apply to Entire Corpus
                              </label>
                            </RefFindNode>
                          </Ref>
                        </div>
                      </Checkbox>
                    </div>
                  </FormField>
                </FormCheckbox>
                <DataPair
                  label="Data"
                  text="No Data Selected"
                >
                  <div
                    style={
                      Object {
                        "padding": "0px 15px 0px 15px",
                      }
                    }
                  >
                    <b>
                       
                      Data
                      :
                    </b>
                    <div
                      style={
                        Object {
                          "float": "right",
                          "padding": "0px 0px 0px 5px",
                        }
                      }
                    >
                      No Data Selected
                       
                    </div>
                  </div>
                </DataPair>
                <ChooseDataModal
                  onSelect={[Function]}
                >
                  <Modal
                    centered={true}
                    closeIcon={true}
                    closeOnDimmerClick={true}
                    closeOnDocumentClick={false}
                    dimmer={true}
                    eventPool="Modal"
                    onClose={[Function]}
                    onOpen={[Function]}
                    open={false}
                    trigger={
                      <Button
                        as="button"
                        onClick={[Function]}
                        primary={true}
                      >
                        Change
                      </Button>
                    }
                  >
                    <Portal
                      closeOnDocumentClick={false}
                      closeOnEscape={true}
                      eventPool="Modal"
                      mountNode={<body />}
                      onClose={[Function]}
                      onMount={[Function]}
                      onOpen={[Function]}
                      onUnmount={[Function]}
                      open={false}
                      openOnTriggerClick={true}
                      trigger={
                        <Button
                          as="button"
                          onClick={[Function]}
                          primary={true}
                        >
                          Change
                        </Button>
                      }
                    >
                      <Ref
                        innerRef={[Function]}
                      >
                        <RefFindNode
                          innerRef={[Function]}
                        >
                          <Button
                            as="button"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            primary={true}
                          >
                            <Ref
                              innerRef={
                                Object {
                                  "current": <button
                                    class="ui primary button"
                                  >
                                    Change
                                  </button>,
                                }
                              }
                            >
                              <RefFindNode
                                innerRef={
                                  Object {
                                    "current": <button
                                      class="ui primary button"
                                    >
                                      Change
                                    </button>,
                                  }
                                }
                              >
                                <button
                                  className="ui primary button"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  Change
                                </button>
                              </RefFindNode>
                            </Ref>
                          </Button>
                        </RefFindNode>
                      </Ref>
                    </Portal>
                  </Modal>
                </ChooseDataModal>
              </div>
            </FormGroup>
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  label="Replace:"
                  name="replace"
                  onChange={[Function]}
                  placeholder="text"
                  value=""
                >
                  <FormField
                    control={[Function]}
                    label="Replace:"
                    name="replace"
                    onChange={[Function]}
                    placeholder="text"
                    value=""
                  >
                    <div
                      className="field"
                    >
                      <label>
                        Replace:
                      </label>
                      <Input
                        name="replace"
                        onChange={[Function]}
                        placeholder="text"
                        type="text"
                        value=""
                      >
                        <div
                          className="ui input"
                        >
                          <input
                            name="replace"
                            onChange={[Function]}
                            placeholder="text"
                            type="text"
                            value=""
                          />
                        </div>
                      </Input>
                    </div>
                  </FormField>
                </FormInput>
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  label="with"
                  name="replaceWith"
                  onChange={[Function]}
                  placeholder="text"
                  value=""
                >
                  <FormField
                    control={[Function]}
                    label="with"
                    name="replaceWith"
                    onChange={[Function]}
                    placeholder="text"
                    value=""
                  >
                    <div
                      className="field"
                    >
                      <label>
                        with
                      </label>
                      <Input
                        name="replaceWith"
                        onChange={[Function]}
                        placeholder="text"
                        type="text"
                        value=""
                      >
                        <div
                          className="ui input"
                        >
                          <input
                            name="replaceWith"
                            onChange={[Function]}
                            placeholder="text"
                            type="text"
                            value=""
                          />
                        </div>
                      </Input>
                    </div>
                  </FormField>
                </FormInput>
              </div>
            </FormGroup>
            <FormGroup
              widths="equal"
            >
              <div
                className="equal width fields"
              >
                <Button
                  as="button"
                  onClick={[Function]}
                  primary={true}
                >
                  <Ref
                    innerRef={
                      Object {
                        "current": <button
                          class="ui primary button"
                        >
                           Save 
                        </button>,
                      }
                    }
                  >
                    <RefFindNode
                      innerRef={
                        Object {
                          "current": <button
                            class="ui primary button"
                          >
                             Save 
                          </button>,
                        }
                      }
                    >
                      <button
                        className="ui primary button"
                        onClick={[Function]}
                      >
                         Save 
                      </button>
                    </RefFindNode>
                  </Ref>
                </Button>
              </div>
            </FormGroup>
          </form>
        </Form>
      </div>
    </Container>
    <Message
      positive={true}
    >
      <div
        className="ui positive message"
      >
        <MessageHeader>
          <div
            className="header"
          >
            Successfully added an edit to the corpus!
          </div>
        </MessageHeader>
      </div>
    </Message>
  </div>
</EditForm>
`;

exports[`Edit Form Tests Should render structured data selected 1`] = `
<div>
  <div
    className="ui container"
  >
    <form
      className="ui large form"
      onSubmit={[Function]}
    >
      <div
        className="inline fields"
      >
        <div
          className="field"
        >
          <label>
            Type:
          </label>
          <div
            aria-expanded={false}
            className="ui selection dropdown"
            name="type"
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseDown={[Function]}
            role="listbox"
            tabIndex={0}
          >
            <div
              aria-atomic={true}
              aria-live="polite"
              className="text"
              role="alert"
            >
              Replace
            </div>
            <i
              aria-hidden="true"
              className="dropdown icon"
              onClick={[Function]}
            />
            <div
              className="menu transition"
            >
              <div
                aria-checked={true}
                aria-selected={true}
                className="active selected item"
                onClick={[Function]}
                role="option"
                style={
                  Object {
                    "pointerEvents": "all",
                  }
                }
              >
                <span
                  className="text"
                >
                  Replace
                </span>
              </div>
              <div
                aria-checked={false}
                aria-selected={false}
                className="item"
                onClick={[Function]}
                role="option"
                style={
                  Object {
                    "pointerEvents": "all",
                  }
                }
              >
                <span
                  className="text"
                >
                  Replace Field
                </span>
              </div>
            </div>
          </div>
        </div>
        <div
          className="field"
        >
          <div
            className="ui checkbox"
            onChange={[Function]}
            onClick={[Function]}
            onMouseDown={[Function]}
            onMouseUp={[Function]}
          >
            <input
              checked={false}
              className="hidden"
              name="isCorpus"
              readOnly={true}
              tabIndex={0}
              type="checkbox"
            />
            <label>
              Apply to Entire Corpus
            </label>
          </div>
        </div>
        <div
          style={
            Object {
              "padding": "0px 15px 0px 15px",
            }
          }
        >
          <b>
             
            Data
            :
          </b>
          <div
            style={
              Object {
                "float": "right",
                "padding": "0px 0px 0px 5px",
              }
            }
          >
            Structured Data: 1
             
          </div>
        </div>
        <button
          className="ui primary button"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          Change
        </button>
      </div>
      <div
        className="inline fields"
      >
        <div
          className="field"
        >
          <label>
            Replace:
          </label>
          <div
            className="ui input"
          >
            <input
              name="replace"
              onChange={[Function]}
              placeholder="text"
              type="text"
              value="apple"
            />
          </div>
        </div>
        <div
          className="field"
        >
          <label>
            with
          </label>
          <div
            className="ui input"
          >
            <input
              name="replaceWith"
              onChange={[Function]}
              placeholder="text"
              type="text"
              value="banna"
            />
          </div>
        </div>
      </div>
      <div
        className="equal width fields"
      >
        <button
          className="ui primary button"
          onClick={[Function]}
        >
           Save 
        </button>
        <button
          className="ui negative button"
          onClick={[Function]}
        >
           Delete 
        </button>
      </div>
    </form>
  </div>
</div>
`;

exports[`Edit Form Tests Should render unstructured data selected 1`] = `
<div>
  <div
    className="ui container"
  >
    <form
      className="ui large form"
      onSubmit={[Function]}
    >
      <div
        className="inline fields"
      >
        <div
          className="field"
        >
          <label>
            Type:
          </label>
          <div
            aria-expanded={false}
            className="ui selection dropdown"
            name="type"
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseDown={[Function]}
            role="listbox"
            tabIndex={0}
          >
            <div
              aria-atomic={true}
              aria-live="polite"
              className="text"
              role="alert"
            >
              Replace
            </div>
            <i
              aria-hidden="true"
              className="dropdown icon"
              onClick={[Function]}
            />
            <div
              className="menu transition"
            >
              <div
                aria-checked={true}
                aria-selected={true}
                className="active selected item"
                onClick={[Function]}
                role="option"
                style={
                  Object {
                    "pointerEvents": "all",
                  }
                }
              >
                <span
                  className="text"
                >
                  Replace
                </span>
              </div>
              <div
                aria-checked={false}
                aria-selected={false}
                className="item"
                onClick={[Function]}
                role="option"
                style={
                  Object {
                    "pointerEvents": "all",
                  }
                }
              >
                <span
                  className="text"
                >
                  Replace Field
                </span>
              </div>
            </div>
          </div>
        </div>
        <div
          className="field"
        >
          <div
            className="ui checkbox"
            onChange={[Function]}
            onClick={[Function]}
            onMouseDown={[Function]}
            onMouseUp={[Function]}
          >
            <input
              checked={false}
              className="hidden"
              name="isCorpus"
              readOnly={true}
              tabIndex={0}
              type="checkbox"
            />
            <label>
              Apply to Entire Corpus
            </label>
          </div>
        </div>
        <div
          style={
            Object {
              "padding": "0px 15px 0px 15px",
            }
          }
        >
          <b>
             
            Data
            :
          </b>
          <div
            style={
              Object {
                "float": "right",
                "padding": "0px 0px 0px 5px",
              }
            }
          >
            Unstructured Data: 1
             
          </div>
        </div>
        <button
          className="ui primary button"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          Change
        </button>
      </div>
      <div
        className="inline fields"
      >
        <div
          className="field"
        >
          <label>
            Replace:
          </label>
          <div
            className="ui input"
          >
            <input
              name="replace"
              onChange={[Function]}
              placeholder="text"
              type="text"
              value="apple"
            />
          </div>
        </div>
        <div
          className="field"
        >
          <label>
            with
          </label>
          <div
            className="ui input"
          >
            <input
              name="replaceWith"
              onChange={[Function]}
              placeholder="text"
              type="text"
              value="banna"
            />
          </div>
        </div>
      </div>
      <div
        className="equal width fields"
      >
        <button
          className="ui primary button"
          onClick={[Function]}
        >
           Save 
        </button>
        <button
          className="ui negative button"
          onClick={[Function]}
        >
           Delete 
        </button>
      </div>
    </form>
  </div>
</div>
`;

exports[`Edit Form Tests Should render validation errors 1`] = `
<EditForm
  data={
    Edit {
      "editID": null,
      "isCorpus": false,
      "replace": "",
      "replaceWith": "",
      "settings": Object {},
      "structuredDataID": null,
      "type": "",
      "unstructuredDataID": null,
    }
  }
>
  <div>
    <Container>
      <div
        className="ui container"
      >
        <Form
          as="form"
          loading={false}
          size="large"
        >
          <form
            className="ui large form"
            onSubmit={[Function]}
          >
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormSelect
                  as={[Function]}
                  control={[Function]}
                  error={
                    Object {
                      "content": "Please select a type",
                    }
                  }
                  label="Type:"
                  name="type"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "key": "replace",
                        "text": "Replace",
                        "value": "replace",
                      },
                      Object {
                        "key": "replacewithfield",
                        "text": "Replace Field",
                        "value": "replacewithfield",
                      },
                    ]
                  }
                  placeholder="Choose Type"
                  value=""
                >
                  <FormField
                    control={[Function]}
                    error={
                      Object {
                        "content": "Please select a type",
                      }
                    }
                    label="Type:"
                    name="type"
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "key": "replace",
                          "text": "Replace",
                          "value": "replace",
                        },
                        Object {
                          "key": "replacewithfield",
                          "text": "Replace Field",
                          "value": "replacewithfield",
                        },
                      ]
                    }
                    placeholder="Choose Type"
                    value=""
                  >
                    <div
                      className="error field"
                    >
                      <label>
                        Type:
                      </label>
                      <Select
                        name="type"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "key": "replace",
                              "text": "Replace",
                              "value": "replace",
                            },
                            Object {
                              "key": "replacewithfield",
                              "text": "Replace Field",
                              "value": "replacewithfield",
                            },
                          ]
                        }
                        placeholder="Choose Type"
                        value=""
                      >
                        <Dropdown
                          additionLabel="Add "
                          additionPosition="top"
                          closeOnBlur={true}
                          closeOnEscape={true}
                          deburr={false}
                          icon="dropdown"
                          minCharacters={1}
                          name="type"
                          noResultsMessage="No results found."
                          onChange={[Function]}
                          openOnFocus={true}
                          options={
                            Array [
                              Object {
                                "key": "replace",
                                "text": "Replace",
                                "value": "replace",
                              },
                              Object {
                                "key": "replacewithfield",
                                "text": "Replace Field",
                                "value": "replacewithfield",
                              },
                            ]
                          }
                          placeholder="Choose Type"
                          renderLabel={[Function]}
                          searchInput="text"
                          selectOnBlur={true}
                          selectOnNavigation={true}
                          selection={true}
                          value=""
                          wrapSelection={true}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <div
                                  aria-expanded="false"
                                  class="ui selection dropdown"
                                  name="type"
                                  role="listbox"
                                  tabindex="0"
                                >
                                  <div
                                    aria-atomic="true"
                                    aria-live="polite"
                                    class="default text"
                                    role="alert"
                                  >
                                    Choose Type
                                  </div>
                                  <i
                                    aria-hidden="true"
                                    class="dropdown icon"
                                  />
                                  <div
                                    class="menu transition"
                                  >
                                    <div
                                      aria-checked="false"
                                      aria-selected="true"
                                      class="selected item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Replace
                                      </span>
                                    </div>
                                    <div
                                      aria-checked="false"
                                      aria-selected="false"
                                      class="item"
                                      role="option"
                                      style="pointer-events: all;"
                                    >
                                      <span
                                        class="text"
                                      >
                                        Replace Field
                                      </span>
                                    </div>
                                  </div>
                                </div>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <div
                                    aria-expanded="false"
                                    class="ui selection dropdown"
                                    name="type"
                                    role="listbox"
                                    tabindex="0"
                                  >
                                    <div
                                      aria-atomic="true"
                                      aria-live="polite"
                                      class="default text"
                                      role="alert"
                                    >
                                      Choose Type
                                    </div>
                                    <i
                                      aria-hidden="true"
                                      class="dropdown icon"
                                    />
                                    <div
                                      class="menu transition"
                                    >
                                      <div
                                        aria-checked="false"
                                        aria-selected="true"
                                        class="selected item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Replace
                                        </span>
                                      </div>
                                      <div
                                        aria-checked="false"
                                        aria-selected="false"
                                        class="item"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          Replace Field
                                        </span>
                                      </div>
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <div
                                aria-expanded={false}
                                className="ui selection dropdown"
                                name="type"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-atomic={true}
                                  aria-live="polite"
                                  className="default text"
                                  role="alert"
                                >
                                  Choose Type
                                </div>
                                <Icon
                                  as="i"
                                  className=""
                                  name="dropdown"
                                  onClick={[Function]}
                                >
                                  <i
                                    aria-hidden="true"
                                    className="dropdown icon"
                                    onClick={[Function]}
                                  />
                                </Icon>
                                <DropdownMenu>
                                  <div
                                    className="menu transition"
                                  >
                                    <DropdownItem
                                      active={false}
                                      key="replace"
                                      onClick={[Function]}
                                      selected={true}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Replace"
                                      value="replace"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={true}
                                        className="selected item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Replace
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="replacewithfield"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Replace Field"
                                      value="replacewithfield"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                        >
                                          Replace Field
                                        </span>
                                      </div>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </RefFindNode>
                          </Ref>
                        </Dropdown>
                      </Select>
                      <Label
                        content="Please select a type"
                        pointing="above"
                        prompt={true}
                      >
                        <div
                          className="ui pointing above prompt label"
                          onClick={[Function]}
                        >
                          Please select a type
                        </div>
                      </Label>
                    </div>
                  </FormField>
                </FormSelect>
                <FormCheckbox
                  as={[Function]}
                  checked={false}
                  control={[Function]}
                  error={
                    Object {
                      "content": "Please tick apply to corpus or choose data",
                    }
                  }
                  label="Apply to Entire Corpus"
                  name="isCorpus"
                  onChange={[Function]}
                >
                  <FormField
                    checked={false}
                    control={[Function]}
                    error={
                      Object {
                        "content": "Please tick apply to corpus or choose data",
                      }
                    }
                    label="Apply to Entire Corpus"
                    name="isCorpus"
                    onChange={[Function]}
                  >
                    <div
                      className="error field"
                    >
                      <Checkbox
                        checked={false}
                        label="Apply to Entire Corpus"
                        name="isCorpus"
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <div
                          className="ui checkbox"
                          onChange={[Function]}
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                        >
                          <Ref
                            innerRef={
                              Object {
                                "current": <input
                                  class="hidden"
                                  name="isCorpus"
                                  readonly=""
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <input
                                    class="hidden"
                                    name="isCorpus"
                                    readonly=""
                                    tabindex="0"
                                    type="checkbox"
                                    value=""
                                  />,
                                }
                              }
                            >
                              <input
                                checked={false}
                                className="hidden"
                                name="isCorpus"
                                readOnly={true}
                                tabIndex={0}
                                type="checkbox"
                              />
                            </RefFindNode>
                          </Ref>
                          <Ref
                            innerRef={
                              Object {
                                "current": <label>
                                  Apply to Entire Corpus
                                </label>,
                              }
                            }
                          >
                            <RefFindNode
                              innerRef={
                                Object {
                                  "current": <label>
                                    Apply to Entire Corpus
                                  </label>,
                                }
                              }
                            >
                              <label>
                                Apply to Entire Corpus
                              </label>
                            </RefFindNode>
                          </Ref>
                        </div>
                      </Checkbox>
                      <Label
                        content="Please tick apply to corpus or choose data"
                        pointing="above"
                        prompt={true}
                      >
                        <div
                          className="ui pointing above prompt label"
                          onClick={[Function]}
                        >
                          Please tick apply to corpus or choose data
                        </div>
                      </Label>
                    </div>
                  </FormField>
                </FormCheckbox>
                <DataPair
                  label="Data"
                  text="No Data Selected"
                >
                  <div
                    style={
                      Object {
                        "padding": "0px 15px 0px 15px",
                      }
                    }
                  >
                    <b>
                       
                      Data
                      :
                    </b>
                    <div
                      style={
                        Object {
                          "float": "right",
                          "padding": "0px 0px 0px 5px",
                        }
                      }
                    >
                      No Data Selected
                       
                    </div>
                  </div>
                </DataPair>
                <ChooseDataModal
                  onSelect={[Function]}
                >
                  <Modal
                    centered={true}
                    closeIcon={true}
                    closeOnDimmerClick={true}
                    closeOnDocumentClick={false}
                    dimmer={true}
                    eventPool="Modal"
                    onClose={[Function]}
                    onOpen={[Function]}
                    open={false}
                    trigger={
                      <Button
                        as="button"
                        onClick={[Function]}
                        primary={true}
                      >
                        Change
                      </Button>
                    }
                  >
                    <Portal
                      closeOnDocumentClick={false}
                      closeOnEscape={true}
                      eventPool="Modal"
                      mountNode={<body />}
                      onClose={[Function]}
                      onMount={[Function]}
                      onOpen={[Function]}
                      onUnmount={[Function]}
                      open={false}
                      openOnTriggerClick={true}
                      trigger={
                        <Button
                          as="button"
                          onClick={[Function]}
                          primary={true}
                        >
                          Change
                        </Button>
                      }
                    >
                      <Ref
                        innerRef={[Function]}
                      >
                        <RefFindNode
                          innerRef={[Function]}
                        >
                          <Button
                            as="button"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                            primary={true}
                          >
                            <Ref
                              innerRef={
                                Object {
                                  "current": <button
                                    class="ui primary button"
                                  >
                                    Change
                                  </button>,
                                }
                              }
                            >
                              <RefFindNode
                                innerRef={
                                  Object {
                                    "current": <button
                                      class="ui primary button"
                                    >
                                      Change
                                    </button>,
                                  }
                                }
                              >
                                <button
                                  className="ui primary button"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                >
                                  Change
                                </button>
                              </RefFindNode>
                            </Ref>
                          </Button>
                        </RefFindNode>
                      </Ref>
                    </Portal>
                  </Modal>
                </ChooseDataModal>
              </div>
            </FormGroup>
            <FormGroup
              inline={true}
            >
              <div
                className="inline fields"
              >
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  error={
                    Object {
                      "content": "Please enter text to replace",
                    }
                  }
                  label="Replace:"
                  name="replace"
                  onChange={[Function]}
                  placeholder="text"
                  value=""
                >
                  <FormField
                    control={[Function]}
                    error={
                      Object {
                        "content": "Please enter text to replace",
                      }
                    }
                    label="Replace:"
                    name="replace"
                    onChange={[Function]}
                    placeholder="text"
                    value=""
                  >
                    <div
                      className="error field"
                    >
                      <label>
                        Replace:
                      </label>
                      <Input
                        name="replace"
                        onChange={[Function]}
                        placeholder="text"
                        type="text"
                        value=""
                      >
                        <div
                          className="ui input"
                        >
                          <input
                            name="replace"
                            onChange={[Function]}
                            placeholder="text"
                            type="text"
                            value=""
                          />
                        </div>
                      </Input>
                      <Label
                        content="Please enter text to replace"
                        pointing="above"
                        prompt={true}
                      >
                        <div
                          className="ui pointing above prompt label"
                          onClick={[Function]}
                        >
                          Please enter text to replace
                        </div>
                      </Label>
                    </div>
                  </FormField>
                </FormInput>
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  error={
                    Object {
                      "content": "Please enter text to replace with ",
                    }
                  }
                  label="with"
                  name="replaceWith"
                  onChange={[Function]}
                  placeholder="text"
                  value=""
                >
                  <FormField
                    control={[Function]}
                    error={
                      Object {
                        "content": "Please enter text to replace with ",
                      }
                    }
                    label="with"
                    name="replaceWith"
                    onChange={[Function]}
                    placeholder="text"
                    value=""
                  >
                    <div
                      className="error field"
                    >
                      <label>
                        with
                      </label>
                      <Input
                        name="replaceWith"
                        onChange={[Function]}
                        placeholder="text"
                        type="text"
                        value=""
                      >
                        <div
                          className="ui input"
                        >
                          <input
                            name="replaceWith"
                            onChange={[Function]}
                            placeholder="text"
                            type="text"
                            value=""
                          />
                        </div>
                      </Input>
                      <Label
                        content="Please enter text to replace with "
                        pointing="above"
                        prompt={true}
                      >
                        <div
                          className="ui pointing above prompt label"
                          onClick={[Function]}
                        >
                          Please enter text to replace with 
                        </div>
                      </Label>
                    </div>
                  </FormField>
                </FormInput>
              </div>
            </FormGroup>
            <FormGroup
              widths="equal"
            >
              <div
                className="equal width fields"
              >
                <Button
                  as="button"
                  onClick={[Function]}
                  primary={true}
                >
                  <Ref
                    innerRef={
                      Object {
                        "current": <button
                          class="ui primary button"
                        >
                           Save 
                        </button>,
                      }
                    }
                  >
                    <RefFindNode
                      innerRef={
                        Object {
                          "current": <button
                            class="ui primary button"
                          >
                             Save 
                          </button>,
                        }
                      }
                    >
                      <button
                        className="ui primary button"
                        onClick={[Function]}
                      >
                         Save 
                      </button>
                    </RefFindNode>
                  </Ref>
                </Button>
                <Button
                  as="button"
                  negative={true}
                  onClick={[Function]}
                >
                  <Ref
                    innerRef={
                      Object {
                        "current": <button
                          class="ui negative button"
                        >
                           Delete 
                        </button>,
                      }
                    }
                  >
                    <RefFindNode
                      innerRef={
                        Object {
                          "current": <button
                            class="ui negative button"
                          >
                             Delete 
                          </button>,
                        }
                      }
                    >
                      <button
                        className="ui negative button"
                        onClick={[Function]}
                      >
                         Delete 
                      </button>
                    </RefFindNode>
                  </Ref>
                </Button>
              </div>
            </FormGroup>
          </form>
        </Form>
      </div>
    </Container>
  </div>
</EditForm>
`;

exports[`Edit Form Tests Should render viewing edit 1`] = `
<div>
  <div
    className="ui container"
  >
    <form
      className="ui large form"
      onSubmit={[Function]}
    >
      <div
        className="inline fields"
      >
        <div
          className="field"
        >
          <label>
            Type:
          </label>
          <div
            aria-expanded={false}
            className="ui selection dropdown"
            name="type"
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseDown={[Function]}
            role="listbox"
            tabIndex={0}
          >
            <div
              aria-atomic={true}
              aria-live="polite"
              className="text"
              role="alert"
            >
              Replace
            </div>
            <i
              aria-hidden="true"
              className="dropdown icon"
              onClick={[Function]}
            />
            <div
              className="menu transition"
            >
              <div
                aria-checked={true}
                aria-selected={true}
                className="active selected item"
                onClick={[Function]}
                role="option"
                style={
                  Object {
                    "pointerEvents": "all",
                  }
                }
              >
                <span
                  className="text"
                >
                  Replace
                </span>
              </div>
              <div
                aria-checked={false}
                aria-selected={false}
                className="item"
                onClick={[Function]}
                role="option"
                style={
                  Object {
                    "pointerEvents": "all",
                  }
                }
              >
                <span
                  className="text"
                >
                  Replace Field
                </span>
              </div>
            </div>
          </div>
        </div>
        <div
          className="field"
        >
          <div
            className="ui checked checkbox"
            onChange={[Function]}
            onClick={[Function]}
            onMouseDown={[Function]}
            onMouseUp={[Function]}
          >
            <input
              checked={true}
              className="hidden"
              name="isCorpus"
              readOnly={true}
              tabIndex={0}
              type="checkbox"
            />
            <label>
              Apply to Entire Corpus
            </label>
          </div>
        </div>
      </div>
      <div
        className="inline fields"
      >
        <div
          className="field"
        >
          <label>
            Replace:
          </label>
          <div
            className="ui input"
          >
            <input
              name="replace"
              onChange={[Function]}
              placeholder="text"
              type="text"
              value="apple"
            />
          </div>
        </div>
        <div
          className="field"
        >
          <label>
            with
          </label>
          <div
            className="ui input"
          >
            <input
              name="replaceWith"
              onChange={[Function]}
              placeholder="text"
              type="text"
              value="banna"
            />
          </div>
        </div>
      </div>
      <div
        className="equal width fields"
      >
        <button
          className="ui primary button"
          onClick={[Function]}
        >
           Save 
        </button>
        <button
          className="ui negative button"
          onClick={[Function]}
        >
           Delete 
        </button>
      </div>
    </form>
  </div>
</div>
`;
